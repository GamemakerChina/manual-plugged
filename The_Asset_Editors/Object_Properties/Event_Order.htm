<!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml"><head><script type="text/javascript" src="../../assets/import/jquery-3.6.1.min.js"></script><script type="text/javascript" src="../../assets/import/layer/layer.js"></script><script type="text/javascript" src="../../assets/import/pangu.min.js"></script><link rel="stylesheet" type="text/css" href="../../assets/import/layer/layui_btn.css"><link rel="stylesheet" type="text/css" href="../../assets/import/layer/layui_col.css"><link rel="stylesheet" type="text/css" href="../../assets/import/layer/theme/default/layer.css"><link rel="stylesheet" type="text/css" href="../../assets/import/main.css"><script>let str;removeHtml=function(e){return e=(e=(e=(e=e.replace(/(<([^>]+)>)/gi,"{}")).replace(/\r\n/g,"\n")).replace(/\n/g,"")).replace(/ {2,}/g," ")},retHtml=function(e){return e.match(/(<([^>]+)>)/gi)},setTranslator=function(e,t,n){let o;o=n?e.attr(n):e.html();let s=t[removeHtml(o)];if(null!=s&&s.length){t=retHtml(o);let a=0;t&&t.forEach(function(e,t){var n=s.replace("{"+a+"}",e);s=n===s?s.replace("{}",e):n,a++}),n?e.attr(n,s):e.html(s)}},noTranslationState=function(){return"true"==window.localStorage.getItem("noTranslationState")},noTranslationStateToggle=function(){window.localStorage.setItem("noTranslationState",!noTranslationState())},addNoTranslationStateButton=function(){var e=`
		
		<button style="
			float: right;
			font-size: 16px;
			padding: 4px 12px;
		"
		onclick="
		window.location.replace('gmmt://'+document.location.hash)
		"
		>打开编辑器</button>

		<button style="
			float: right;
			font-size: 16px;
			padding: 4px 12px;
		"
		onclick="
		noTranslationStateToggle();
		location.reload();
    	event.stopPropagation();
		"
		>切换翻译</button>
		`;$(".header").length?$(".header").append(e):($(".topic-header").append(e),$(".topic-header button").css("position","relative").css("top","44px"))},removeExtensionFromHash=function(e){return e.replaceAll("#t=","").replaceAll("%2F","/").replaceAll(".htm","")};let json_global,json_file={"After all Step events are complete, GameMaker executes the Draw events for all instances, in the same game step. Within a particular event (e.g. Draw End), the order in which instances run that event depends on the layer order, e.g. the layer with the highest depth has its instances drawn first, and the layer with the lowest depth is drawn last.":"当所有步事件完成后，GameMaker 会在同一个游戏步骤中为所有实例执行绘制事件。在一个特定的事件(例如绘制结束)中，实例运行该事件的顺序取决于图层的顺序，例如深度最高的图层的实例最先绘制，深度最低的图层最后绘制。","After all Step events come all Draw events. These are also always dealt with in the same order as follows (except for the {}Window Resize {}event, which is triggered differently):":"在所有Step事件之后，是所有Draw事件。这些事件也总是按照以下相同的顺序处理(除了{}Window Resize{}事件，它的触发方式不同)：","All instances are created one after the other, according to the room's&nbsp;{}Instance Creation Order{}. More specifically, for every instance:&nbsp; {} {}It is created (equivalent to calling&nbsp;{}{}instance_create_depth{}{}/{}{}instance_create_layer{}{}&nbsp;in code):&nbsp; {} {}The instance's&nbsp;{}Object Variables{}&nbsp;are initialised.{} {}The&nbsp;{}Create Event{} is executed for the instance.{} {} {} {}It executes its&nbsp;{}Instance Creation Code{}, if it has any.{} {} ":"根据房间的 {}实例创建顺序 {}，依次创建所有实例。具体来说，对于每个实例： {} {}它被创建(相当于调用     {}{}instance_create_depth{}{} /  {}{}instance_create_layer{}{}   在代码中)：     {}  {}初始化实例的 {}对象变量 {}。 {} {}   将为实例执行 {}创建事件 {}。 {} {} {} {} 它执行它的 {}实例创建代码 {}(如果有的话)。 {} {}","All of the events for drawing are also always dealt with in the same order as follows (except for the {}Window Resize {}event, which is triggered differently):":"所有绘制事件也总是以相同的顺序处理，如下所示({}窗口调整大小{}事件除外，它的触发方式不同)：","As a general rule, you can rely on the order of the events listed below, but not on the order in which the instances in the room execute one event.":"作为一般规则，您可以依赖下面列出的事件顺序，但不能依赖房间中的实例执行某个事件的顺序。","Each Draw event draws instances in this order (based on the {}depth{} value), and then moves on to the next event, repeating the same instance order (e.g. Draw Begin moving to Draw and then Draw End).":'每个绘制事件都按此顺序(基于 {}depth{} 值)绘制实例，然后继续到下一个事件，重复相同的实例顺序(例如，从"绘制开始"移动到"绘制"，然后移动到"绘制结束")。',"Event Order":"事件顺序","Every Step/Frame":"每一步/帧",'For example, you will see below that the "Step" event always executes after the "Begin Step" event, however you cannot guarantee that, for example, Object2 will always execute its Step event after Object1. If you require such an execution order, then making use of a different event is recommended (e.g. putting Object2\'s Step code in End Step, if you need it to execute after Object1\'s Step).':'例如，您将在下面看到"步"事件总是在"步开始"事件之后执行，但是您不能保证，例如，Object2 总是在 Object1 之后执行其步事件。如果您需要这样的执行顺序，则建议使用不同的事件(例如，如果您需要在 Object1 的步之后执行它，则将 Object2 的步代码放在步结束中)。',"For more detailed information on how these events are related to {}GameMaker{}'s drawing, see&nbsp;{}Draw Events{}.":"有关这些事件如何与 {}GameMaker{} 的绘制相关的更多详细信息，请参阅{}绘制事件{}。","It is also worth noting that you can also set the order in which specific instances are created within the room editor itself by moving them up or down the list of the {}Instance Layer Properties{}&nbsp;window.":"还值得注意的是，您还可以通过在 {} 实例层属性 {} 窗口的列表中上下移动特定实例来设置在房间编辑器本身中创建特定实例的顺序。","Other than those specific events, events in a game step also always occur in the same order no matter what.":"除了这些特定事件之外，游戏步骤中的事件也总是以相同的顺序发生。","Other than those specific events, events in a game step also always occur in the same order. However, the order of the instances within an event is not always guaranteed, and may vary between different GameMaker versions and target platforms.":"除了这些特定事件之外，游戏步骤中的事件也总是以相同的顺序发生。但是，事件中实例的顺序并不总是得到保证，并且可能会在不同的 GameMaker 版本和目标平台之间有所不同。","Other than those specific events, the only known order that will always occur in the same way no matter what belongs to the three {}step {}events and the different {}draw {}events. These will always remain consistent, so if you have code that relies on specific timing during each step of your game, you should use:":"除了这些特定事件之外，唯一已知的顺序将始终以相同的方式发生，无论属于三个 {} 步骤 {} 事件和不同的 {} 绘制 {} 事件。这些将永远保持一致，所以如果您的代码在游戏的每一步都依赖于特定的时间，您应该使用：","So when you have code that relies on specific timing during each step of your game, make use of the events as listed below. To put it simply, first all Begin Step events are executed, then all Step events are executed, after that all End Step events are executed, then all Draw events, etc.":"因此，当您的代码依赖于游戏中每个步骤的特定时间时，请使用下面列出的事件。简单地说，首先执行所有开始步骤事件，然后执行所有步骤事件，然后执行所有结束步骤事件，然后执行所有绘制事件，等等。","The first set of events that will always happen the same way are those that occur when a room is first entered. The order that the different events will fire is:":"第一组总是以同样的方式发生的事件是第一次进入房间时发生的事件。不同事件触发的顺序是：","The first set of events that will always happen the same way are those that occur when a room is first entered. The order that the different events will fire is:&nbsp;":"总是以相同方式发生的第一组事件是第一次进入房间时发生的事件。不同事件的触发顺序是：",'They will always remain consistent, so if you have code that relies on specific timing during each step of your game, you should use the below list. The list should be read as "first all Begin Step events are executed, then all Step events are executed, after that all End Step events are executed, then all Draw events, etc."':'它们将始终保持一致，因此如果您的代码在游戏的每一步都依赖于特定的时间，您应该使用下面的列表。该列表应该读作"首先执行所有开始步骤事件，然后执行所有步骤事件，之后执行所有结束步骤事件，然后执行所有绘制事件，等等"。',"This is the order of the Draw events:":"这是绘制事件的顺序：","Upon Entering a Room":"进入房间后","When considering Events in {}GameMaker{}, it should be noted that {}the exact order that ALL the events are going to occur in each step cannot be clearly stated{}, simply because it depends on the internal workings of {}GameMaker{} and this is subject to change as the software develops or based on the platform where the game is running. However there are certain events that will {}always {}run in the same order.":"在考虑 {}GameMaker{} 中的事件时，应注意{}无法清楚说明每个步骤中所有事件将发生的确切顺序{}，这仅仅是因为它取决于 {}GameMaker{} 的内部工作方式，并且随着软件的开发，这可能会随着软件的开发或基于运行游戏的平台而发生变化。但是，某些事件将{}始终{}以相同的顺序运行。","When considering Events in {}GameMaker{}, it should be noted that {}the exact order that ALL the events are going to occur in each step cannot be clearly stated{}, simply because it depends on the internal workings of {}GameMaker{} and this is subject to change as the software develops. However there are certain events that will {}always {}run in the same order.":"在考虑 {}GameMaker{} 中的事件时，应注意 {} 无法清楚说明每个步骤中所有事件将发生的确切顺序 {}，这仅仅是因为它取决于 {}GameMaker{} 的内部工作方式，并且随着软件的开发，这可能会发生变化。但是，某些事件将 {} 始终 {} 以相同的顺序运行。",'{}"Ticks" (updates){}':'{}"瞬间" (更新){}',"{}Alarms{}":"{}计时器{}","{}Begin Step Event{}":"{}开始步事件{}","{}Callbacks{} {} {}Children of {}time_source_global{} (see&nbsp;{}Built-In Time Sources{}){} {}Time sources spawned by&nbsp;{}{}call_later{}{}{} {}Children of {}time_source_game{} (see&nbsp;{}Built-In Time Sources{}){} {} ":"{}回调{} {}{}{}time_source_global{} 的子项 (请参阅&nbsp;{}内置时间源{}){}{}由 {}{}call_later{}{}{}{} 派生的时间源{}time_source_game{} 的子项(请参阅&nbsp;{}内置时间源{}){}{}","{}Cr{}{}{}eate{} Event {}followed by the{} Instance Creation Code {}of {}each {}instance - so as each instance is created, it will run first its Create event and then its Instance Creation Code before moving on to the next instance to be created":"{}{}{}{}{} 创建事件 {}，然后是 {} 每个 {} 实例的 {} 实例创建代码 {}，因此在创建每个实例时，它将首先运行其创建事件，然后运行其实例创建代码在转移到要创建的下一个实例之前","{}Draw Begin Event{}":"{}绘制开始事件{}","{}Draw End Event{}":"{}绘制结束事件{}","{}Draw Event{}":"{}绘制事件{}","{}Draw GUI Begin Event{}":"{}绘制GUI开始事件{}","{}Draw GUI End Event{}":"{}绘制GUI结束事件{}","{}Draw GUI Event{}":"{}绘制GUI事件{}","{}End Step Event{}":"{}结束步事件{}","{}Event Order{}":"{}事件顺序{}","{}Game Start Event{} - this event is triggered once in the very first room of the game for all instances placed in the room from the room editor (note that calling game_restart() will trigger this event again.":"{} 游戏开始事件 {}- 此事件在游戏的第一个房间中触发一次，用于从房间编辑器放置在房间中的所有实例 (请注意，调用 game_restart() 将再次触发此事件。","{}Game Start Event{} - this event is triggered once in the very first room of the game for all instances placed in the room from&nbsp;{}The Room Editor{} (note that calling&nbsp;{}{}game_restart{}{} will trigger this event again).":"{}游戏开始事件{}-对于从{}房间编辑器{}放置在房间中的所有实例，此事件在游戏的第一个房间中触发一次(请注意，调用{}{}game_restart{}{}将再次触发此事件)。","{}Object Variables / Instance Variables are initialised{} (these are the variables that you can define in the {}IDE{} of the {}Object Editor{} or the {}Room Editor{}). If you have an object with variables attached then they will be created before anything else and then any instances that have variables attached will be defined after so you can overwrite object variables with instance specific ones in the room editor.":"{} 对象变量 / 实例变量被初始化 {}( 这些变量可以在 {} 对象编辑器 {} 或 {} 房间编辑器 {} 的 {2}IDE{3} 中定义)。如果您有一个附加了变量的对象，那么它们将在其他任何东西之前创建，然后任何附加了变量的实例将在之后定义，以便您可以使用房间中的实例特定变量覆盖对象变量编辑器。","{}Post Draw Event{}":"{}绘制后事件{}","{}Post-Draw Event{}":"{}绘制后事件{}","{}Pre Draw Event{}":"{}绘制前事件{}","{}Pre-Draw Event{}":"{}绘制前事件{}","{}Room Creation Code{} - this is the one-off code written in the Room Editor for when a room is first entered":"{} 房间创建代码 {}- 这是首次进入房间时在房间编辑器中编写的一次性代码","{}Room Creation Code{} - this is the one-off code written in&nbsp;{}The Room Editor{} for when a room is first entered.":"{}房间创建代码{}-这是在{}房间编辑器{}中编写的首次进入房间时的一次性代码。",'{}Room Start Event of all instances{} - one of the "Other" category of events and will fire for all instances, {}persistent{} or otherwise.':'{}所有实例的房间启动事件{}-事件的"其他"类别之一，将为所有实例触发，{}持久{}或其他。','{}Room Start Event of all instances{} - one of the "other" category of events and will fire for all instances, persistent or otherwise':'{} 所有实例的房间启动事件 {}-" 其他 " 类别的事件之一，将对所有实例触发，无论是持久的还是其他的',"{}Step Event{} (note that the Step event is executed just before instances are put in their new positions, including when following a path)":"{}步骤事件{}(注意，步骤事件在实例被放置到新位置之前执行，包括在跟随路径时)","{}Step Event{} (note that the step event is executed just before instances are put in their new positions)":"{}步事件{}(请注意，步骤事件是在实例放入新位置之前执行的)","{}Time Sources{}":"{}时间源{}",'{}Time Sources{} {} {}{}"Ticks" (updates){}{} {}{}Callbacks{} {} {}Children of {}time_source_global{} (see&nbsp;{}Built-In Time Sources{}){} {}Time sources spawned by&nbsp;{}{}call_later{}{}{} {}Children of {}time_source_game{} (see&nbsp;{}Built-In Time Sources{}){} {} {} {} ':'{}时间源{} {}\n{}{}"瞬间"(更新){}{}\n{}{}回调{}{}\n{}{}time_source_global{} 的子项 (请参阅 {}内置时间源{}){}\n{}由 {}{}call_later{}{} 派生的时间源{}\n{}{}time_source_game{} 的子项(请参阅 {}内置时间源{}){}{}{}{}',"{}Timelines{}":"{}时间线{}","{}{}NOTE{}{}&nbsp;The Step events are always executed before the Draw events.":'{}{}注意{}{}"步骤"事件始终在"绘制"事件之前执行。','{}{}NOTE{}{}&nbsp;The layer with the highest depth (which draws first) is displayed at the bottom of the Room Editor\'s&nbsp;{}layer list{}, while the lowest depth layer is at the top (as it is "closer" to the viewer).':'{}{}注意{}{} 深度最高的图层(首先绘制)显示在房间编辑器的{}图层列表{}的底部，而深度最低的图层显示在顶部(因为它"更接近"查看器)。',"{}{}NOTE{}{}&nbsp;You can also set the order in which specific instances are created within&nbsp;{}The Room Editor{} itself by moving them up or down the list of the {}Instance Layer Properties{}&nbsp;window.":"{}{}注意{}{}您还可以通过在{}实例层属性{}窗口的列表中上下移动特定实例来设置在{4}房间编辑器{5}中创建特定实例的顺序。"},get_json_global=$.ajax({url:"/global.json",type:"GET",dataType:"json",async:!1,success:function(e){json_global=e}});$(function(){if(addNoTranslationStateButton(),noTranslationState())return!1;$("div.footer a,h4,caption").each(function(){setTranslator($(this),json_global)}),$("p,h1,h2,h3,td,li,a,div.dropspotnote,figcaption").each(function(){setTranslator($(this),json_file)}),$("th,.warning,.important,.optional").each(function(){setTranslator($(this),json_global)}),$(".header").length&&(window.setInterval(function(){$("#toc-panel a:not('isTranslate')").each(function(){$(this).addClass("isTranslate"),setTranslator($(this),json_global)}),$(".GlossDefinitionText:not('isTranslate')").each(function(){$(this).addClass("isTranslate"),setTranslator($(this),json_global)})},250),console.log("成功啦!现在正在疯狂翻译菜单中!")),$(".tooltip").each(function(){setTranslator($(this),json_global,"title")})}),document.addEventListener("DOMContentLoaded",()=>{pangu.autoSpacingPage()})</script><script type="text/javascript" language="JavaScript">function reDo(){innerWidth==origWidth&&innerHeight==origHeight||location.reload()}4==parseInt(navigator.appVersion)&&"Netscape"==navigator.appName&&(origWidth=innerWidth,origHeight=innerHeight,onresize=reDo),onerror=null</script><style type="text/css">p.WebHelpNavBar{text-align:right}</style><script type="text/javascript">gCommonRootRelPath=gRootRelPath="../..",gTopicId="6.3.1.0_1"</script><script type="text/javascript" src="../../template/scripts/rh.min.js"></script><script type="text/javascript" src="../../template/scripts/common.min.js"></script><script type="text/javascript" src="../../template/scripts/topic.min.js"></script><script type="text/javascript" src="../../template/scripts/topicwidgets.min.js"></script><script type="text/javascript" src="../../whxdata/projectsettings.js"></script><link rel="stylesheet" type="text/css" href="../../template/styles/topic.min.css"><link rel="stylesheet" type="text/css" href="../../template/Charcoal_Grey/topicheader.css"><meta name="topic-status" content="Draft"><meta http-equiv="Content-Type" content="text/html; charset=utf-8"><title>Event Order</title><meta name="generator" content="Adobe RoboHelp 2022"><meta name="rh-authors" content="Mark Alexander"><meta name="topic-comment" content="Page detailing the async events."><meta name="rh-index-keywords" content="Objects - Event Order"><meta name="search-keywords" content="event order"><link rel="stylesheet" type="text/css" href="../../assets/css/default.css"><script src="../../assets/scripts/main_script.js" type="module"></script><meta name="brsnext" value="The_Asset_Editors/Object_Properties/Other_Events.htm"><meta name="brsprev" value="The_Asset_Editors/Object_Properties/Object_Events.htm"></head><body><div class="topic-header rh-hide" id="rh-topic-header"><div class="logo"></div><div class="nav"><div class="title" title="Event Order"><span>Event Order</span></div><div class="gotohome" title="Click here to see this page in full context"><a href="#" onclick="rh._.goToFullLayout()">Click here to see this page in full context</a></div></div></div><div class="topic-header-shadow rh-hide" id="rh-topic-header-shadow"></div><h1><span data-field="title" data-format="default">Event Order</span></h1><p>When considering Events in <span data-keyref="GameMaker Name">GameMaker</span>, it should be noted that <strong>the exact order that ALL the events are going to occur in each step cannot be clearly stated</strong>, simply because it depends on the internal workings of <span data-keyref="GameMaker Name">GameMaker</span> and this is subject to change as the software develops or based on the platform where the game is running. However there are certain events that will <em>always</em> run in the same order.</p><h2 id="upon_entering_a_room">Upon Entering a Room</h2><p>The first set of events that will always happen the same way are those that occur when a room is first entered. The order that the different events will fire is:&nbsp;</p><ul class="colour"><li>All instances are created one after the other, according to the room's&nbsp;<a href="../Room_Properties/Room_Properties.htm#creation_order">Instance Creation Order</a>. More specifically, for every instance:&nbsp;<ul><li>It is created (equivalent to calling&nbsp;<span class="inline3_func"><a href="../../GameMaker_Language/GML_Reference/Asset_Management/Instances/instance_create_depth.htm">instance_create_depth</a></span>/<span class="inline3_func"><a href="../../GameMaker_Language/GML_Reference/Asset_Management/Instances/instance_create_layer.htm">instance_create_layer</a></span>&nbsp;in code):&nbsp;<ul><li>The instance's&nbsp;<a href="Object_Variables.htm">Object Variables</a>&nbsp;are initialised.</li><li>The&nbsp;<strong>Create Event</strong> is executed for the instance.</li></ul></li><li>It executes its&nbsp;<strong>Instance Creation Code</strong>, if it has any.</li></ul></li><li><strong>Game Start Event</strong> - this event is triggered once in the very first room of the game for all instances placed in the room from&nbsp;<a href="../Rooms.htm">The Room Editor</a> (note that calling&nbsp;<span class="inline3_func"><a href="../../GameMaker_Language/GML_Reference/General_Game_Control/game_restart.htm">game_restart</a></span> will trigger this event again).</li><li><strong>Room Creation Code</strong> - this is the one-off code written in&nbsp;<a href="../Rooms.htm">The Room Editor</a> for when a room is first entered.</li><li><strong>Room Start Event of all instances</strong> - one of the "Other" category of events and will fire for all instances, <a href="../../GameMaker_Language/GML_Reference/Asset_Management/Instances/Instance_Variables/persistent.htm">persistent</a> or otherwise.</li></ul><p class="note"><span data-conref="../../assets/snippets/Tag_note.hts"><span class="note">NOTE</span></span>&nbsp;You can also set the order in which specific instances are created within&nbsp;<a href="../Rooms.htm">The Room Editor</a> itself by moving them up or down the list of the <a href="../Room_Properties/Layer_Properties.htm">Instance Layer Properties</a>&nbsp;window.</p><h2 id="every_step_frame">Every Step/Frame</h2><p>Other than those specific events, events in a game step also always occur in the same order. However, the order of the instances within an event is not always guaranteed, and may vary between different GameMaker versions and target platforms.</p><p>As a general rule, you can rely on the order of the events listed below, but not on the order in which the instances in the room execute one event.</p><p>For example, you will see below that the "Step" event always executes after the "Begin Step" event, however you cannot guarantee that, for example, Object2 will always execute its Step event after Object1. If you require such an execution order, then making use of a different event is recommended (e.g. putting Object2's Step code in End Step, if you need it to execute after Object1's Step).</p><p>So when you have code that relies on specific timing during each step of your game, make use of the events as listed below. To put it simply, first all Begin Step events are executed, then all Step events are executed, after that all End Step events are executed, then all Draw events, etc.</p><ul class="colour"><li><strong>Begin Step Event</strong></li><li><a href="../Timelines.htm"><strong>Timelines</strong></a></li><li><a href="../../GameMaker_Language/GML_Reference/Time_Sources/Time_Sources.htm"><strong>Time Sources</strong></a><ul><li><strong>"Ticks" (updates)</strong></li><li><strong>Callbacks</strong><ul><li>Children of <span class="inline2">time_source_global</span> (see&nbsp;<a href="../../GameMaker_Language/GML_Reference/Time_Sources/Built_In_Time_Sources.htm">Built-In Time Sources</a>)</li><li>Time sources spawned by&nbsp;<span class="inline2"><a href="../../GameMaker_Language/GML_Reference/Time_Sources/call_later.htm">call_later</a></span></li><li>Children of <span class="inline2">time_source_game</span> (see&nbsp;<a href="../../GameMaker_Language/GML_Reference/Time_Sources/Built_In_Time_Sources.htm">Built-In Time Sources</a>)</li></ul></li></ul></li><li><a href="../../GameMaker_Language/GML_Reference/Asset_Management/Instances/Instance_Variables/alarm.htm"><strong>Alarms</strong></a></li><li><strong>Step Event</strong> (note that the Step event is executed just before instances are put in their new positions, including when following a path)</li><li><strong>End Step Event</strong></li></ul><p>After all Step events are complete, GameMaker executes the Draw events for all instances, in the same game step. Within a particular event (e.g. Draw End), the order in which instances run that event depends on the layer order, e.g. the layer with the highest depth has its instances drawn first, and the layer with the lowest depth is drawn last.</p><p class="note"><span data-conref="../../assets/snippets/Tag_note.hts"><span class="note">NOTE</span></span>&nbsp;The layer with the highest depth (which draws first) is displayed at the bottom of the Room Editor's&nbsp;<a href="../Room_Properties/Layer_Properties.htm">layer list</a>, while the lowest depth layer is at the top (as it is "closer" to the viewer).</p><p>Each Draw event draws instances in this order (based on the <a href="../../GameMaker_Language/GML_Reference/Asset_Management/Instances/Instance_Variables/depth.htm">depth</a> value), and then moves on to the next event, repeating the same instance order (e.g. Draw Begin moving to Draw and then Draw End).</p><p>This is the order of the Draw events:</p><ul class="colour"><li><strong>Pre-Draw Event</strong></li><li><strong>Draw Begin Event</strong></li><li><strong>Draw Event</strong></li><li><strong>Draw End Event</strong></li><li><strong>Post-Draw Event</strong></li><li><strong>Draw GUI Begin Event</strong></li><li><strong>Draw GUI Event</strong></li><li><strong>Draw GUI End Event</strong></li></ul><p>For more detailed information on how these events are related to <span data-keyref="GameMaker Name">GameMaker</span>'s drawing, see&nbsp;<a href="Draw_Events.htm">Draw Events</a>.</p><p>&nbsp;</p><p>&nbsp;</p><div class="footer"><div class="buttons"><div class="clear"><div style="float:left">Back:&nbsp;<a href="Object_Events.htm">Object Events</a></div><div style="float:right">Next:&nbsp;<a href="Other_Events.htm">Other Events</a></div></div></div><h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2024 All Rights Reserved</span></h5></div></body></html>