<!--?xml version="1.0" encoding="utf-8" ?--><!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml"><head><script type="text/javascript" src="../../assets/import/jquery-3.6.1.min.js"></script>
<script type="text/javascript" src="../../assets/import/layer/layer.js"></script>
<script type="text/javascript" src="../../assets/import/pangu.min.js"></script>
<link rel="stylesheet" type="text/css" href="../../assets/import/layer/layer.css">
<link rel="stylesheet" type="text/css" href="../../assets/import/layer/layui_btn.css">
<link rel="stylesheet" type="text/css" href="../../assets/import/layer/layui_col.css">
<link rel="stylesheet" type="text/css" href="../../assets/import/main.css">


<script>

	removeHtml=function(str){
		str=str.replace(/(<([^>]+)>)/ig, "{}");
		str=str.replace(/\r\n/g, '\n');
		str=str.replace(/\n/g, '');
		str=str.replace(/ {2,}/g, ' ');
		return str
	}
	retHtml=function(str){
		var regex = /(<([^>]+)>)/ig
		return str.match(regex);
	}
	setTranslator=function(ele,json,attr){
		if(!attr){
			var html=ele.html()
		}else{
			var html=ele.attr(attr)
		}
		var key=removeHtml(html)
		var val=json[key]
		if(val!=undefined && val.length){
			var f=retHtml(html)
			var i=0
			if(f)f.forEach(function(v,k){
				var tmp=val.replace("{"+i+"}",v)
				if(tmp===val){
					val=val.replace("{}",v)
				}else{
					val=tmp
				}
				i++
			})
			if(!attr){
				ele.html(val)
			}else{
				ele.attr(attr,val)
			}
		}
	}

	noTranslationState=function(){
		return (window.localStorage.getItem("noTranslationState")=="true")
	}

	noTranslationStateToggle=function(){
		window.localStorage.setItem("noTranslationState",!noTranslationState())
	}

	addNoTranslationStateButton=function(){

		//html
		var html=`
		<button style="
			float: right;
			font-size: 20px;
			padding: 4px 12px;
		"
		onclick="
		noTranslationStateToggle();
		location.reload();
    	event.stopPropagation();
		"
		>T</button>
		`

		//意味着触发这段代码的地方处于主页
		if($(".header").length){
		$(".header").append(html)
		}else{
		//否则就是页内
		$(".topic-header").append(html)
		$(".topic-header button").css("position","relative").css("top","44px")
		}
	}

	var json_global={
    "&nbsp;Type&nbsp;":"类型(Type)",
    "<span data-open-text=\"true\" data-skip-index=\"true\" class=\"rh-hide\" hidden=\"\">Quick Start Guide</span><span data-close-text=\"true\">Quick Start Guide</span>":"<span data-open-text=\"true\" data-skip-index=\"true\" class=\"rh-hide\" hidden=\"\">快速入门指南</span><span data-close-text=\"true\">快速入门指南</span>",
    "A Remote Worker is a special program that GameMaker Studio 2 will use on certain platforms to create your game executables without actually running the GameMaker Studio 2 IDE on that platform":"Remote Worker是一个特殊的程序，GameMaker Studio 2将使用它在特定平台上创建游戏可执行文件，而无需在该平台上实际运行GameMaker Studio 2 IDE",
    "A bitmap is the term used to describe any static image that is comprised of coloured pixels that are stored as bits (unlike vector images which are stored using mathematical algorithms). PNG, JPG and BMP are example of bitmap images, while SWF would be an example of a vector image.":"位图是用于描述任何静态图像的术语，该静态图像由以位存储的彩色像素组成（与使用数学算法存储的矢量图像不同）。 PNG，JPG和BMP是位图图像的示例，而SWF将是矢量图像的示例。",
    "A boolean is a type of variable that can return true or false based on its value, and can be used in conditions and expressions. The constants \u0027false\u0027 or \u0027true\u0027 can be applied to a boolean, which are the equivalent of the real values 0 and 1.":"布尔值是一种变量类型，可根据其值返回true或false，可用于条件和表达式中。常量\u0027false\u0027或\u0027true\u0027可以应用于布尔值，这相当于实值0和1。",
    "A byte is a unit of data that is eight binary digits long, and each of the digits that comprise a byte are called bits, ie: a byte is 8 bits, and a bit can be a 1 or a 0.":"字节是八位二进制数字长的数据单位，组成一个字节的每个数字都称为位，即：字节是8位，位可以是1或0。",
    "A callback is simply a function that runs and then triggers another function (or code block) when it has finished doing whatever it was assigned to do. For example, the funtion sprite_add() will trigger a callback in the asynchronous Image Loaded event when the sprite has been loaded.":"回调仅是一个函数，该函数先运行，然后在完成分配的工作后触发另一个函数（或代码块）。例如，功能sprite_add()将在加载精灵后在异步Image Loaded事件中触发回调。",
    "A constant is a term used to describe a named value that does not change throughout the execution of the program. GameMaker Studio 2 has a number of built-in constants - for example os_windows - but you can also create your own constant values for use in your projects (called Macros) and extensions.":"常量是一个术语，用于描述在程序执行期间不会更改的命名值。 GameMaker Studio 2具有许多内置常量（例如os_windows），但您也可以创建自己的常量值以用于项目（称为宏）和扩展。",
    "A font is a collection of graphical glyphs used to represent text in a language. Fonts can be different weights, sizes, and styles and are used to display any written content in a project.":"字体是用于表示语言文本的图形字形的集合。字体可以具有不同的粗细，大小和样式，并用于显示项目中的任何书面内容。",
    "A framework is a base foundation of code that may be altered and/or built upon by the user. A framework might include different software libraries, APIs, compilers and much more. In simpler terms, a framework provides a favorable environment for a certain type and level of programming for a project. In GameMaker Studio 2 you can, for example, create your own framework projects (via Local Asset Packages) that contain scripts and objects for general controls, stat management, networking, or anything else you commonly use in your projects, and then import these into new projects right at the beginning to give you the basic grounding to conntinue without having to reprogram these systems every time.":"框架是可由用户更改和/或构建的代码的基础。一个框架可能包括不同的软件库，API，编译器等等。简单来说，框架为项目的某种类型和级别的编程提供了良好的环境。例如，在GameMaker Studio 2中，您可以创建自己的框架项目（通过本地资源包），其中包含用于常规控件，统计信息管理，联网或项目中常用的其他内容的脚本和对象，然后将其导入新项目一开始就为您提供了基本的基础，而不必每次都对这些系统进行重新编程。",
    "A glyph is a particular visual appearance of a character. It is the appearance of a character using a given font.":"字形是字符的一种特殊的视觉外观。它是使用给定字体的字符的外观。",
    "A keyframe (also called a parameter key) is a point on the timeline in the dope sheet where a change in a parameter value is defined.":"一个关键帧(也称为参数键)是在时间轴上的一个点，在这个点上定义了一个参数值的变化。",
    "A package of files that are used to execute a program. In GameMaker Studio this can be a single file - like an installer for windows - or multiple files - like the HTML5 output.":"用于执行程序的文件包。在GameMaker Studio中，它可以是单个文件（例如Windows的安装程序），也可以是多个文件（例如HTML5输出）。",
    "A parameter key (also called a keyframe) is a point on the timeline in the dope sheet where a change in a parameter value is defined.":"参数键(也称为关键帧)是操作表中时间轴上定义参数值更改的点。",
    "A port number is a way to identify a specific process to which an Internet or other network message is to be forwarded when it arrives at a server.":"端口号是一种识别Internet或其他网络消息到达服务器时要转发到其上的特定进程的方法。",
    "A position on the timeline in the dope sheet where an asset has been placed. An asset key can be made to last multiple frames.":"在序列帧动画中时间轴上放置资源的位置。资源关键帧可以使用多个帧。",
    "A previous version of the GameMaker software (often called Legacy GameMaker) that is no longer available nor supported. ":"GameMaker软件的早期版本（通常称为Legacy GameMaker）不再可用或受支持。",
    "A pure function has no effect on the game, and does not create or change anything. It only returns a value. Given the same set of arguments, it always returns the same value.":"一个纯函数不会对游戏产生任何影响，也不会创造或改变任何内容。它只返回一个值。给定相同的参数集，它总是返回相同的值。",
    "A shader is a collection of small programs that run directly on the GPU to create graphics and graphical effects. These are very fast to run and free up the CPU to do other things.":"着色器是直接在GPU上运行以创建图形和图形效果的小程序的集合。这些都是非常快速的运行，可以释放CPU来做其他事情。",
    "A single data value that can either be 1 or 0 (true or false). Bits are combined in blocks of 8 to create a byte.":"单个数据值，可以是1或0（是或否）。将位组合为8个块以创建一个字节。",
    "A special, unexpected and anomalous condition encountered during the execution of a program is known as an exception. It can also be termed as an error or a condition which alters the way of the program or the microprocessor to a different path. An example of an exception can be the case when a program tries to access a variable, but the variable does not exist. Exceptions must be handled and eradicated in the program code to avoid any fatal error, a process called debugging.":"在程序执行过程中遇到的特殊、意外和异常情况称为异常。它也可以被称为一个错误或条件，改变了程序或微处理器的方式到一个不同的路径。异常的一个例子是，程序试图访问一个变量，但该变量不存在。必须在程序代码中处理和根除异常，以避免任何致命错误，这个过程称为调试。",
    "A spline is basically a smooth curve used to join points. Mathematically speaking it is deifned as a sufficiently smooth polynomial function that is piecewise-defined, and possesses a high degree of smoothness at the places where the polynomial pieces connect.":"样条基本上是用于连接点的平滑曲线。从数学上讲，它被定义为一个足够光滑的多项式函数，它是分段定义的，并且在多项式片段连接的地方具有高度的平滑。",
    "A sprite is a bitmap graphic that is designed to be part of a larger scene. It can either be a static image or an animated graphic.":"精灵是一种位图图形，被设计成更大场景的一部分。它可以是静态图像，也可以是动画图形。",
    "A swatch is simply a small square sample of a colour or a material used to illustrate how it will look.":"一个调色板就是一个小的正方形样本，其颜色或材料用于说明其外观。",
    "A texture page (also called a texture atlas) is a collection of images (sprites, tilesets, font characters, etc...) that are grouped together in an optimal way so that they take up the least amount of texture memory when your game is run.":"纹理页面（也称为纹理图集）是以最佳方式组合在一起的图像（精灵，图块集，字体字符等）的集合，以便在您的游戏时占用最少的纹理内存运行。",
    "A tile set is a collection of square or rectangular graphical assets laid out on a grid as a single image. Each item in the grid can then be placed multiple times in a room to create a larger scene called the \u0027tile map\u0027.":"图块图块集是作为单个图像布局在网格上的正方形或矩形图形资源的集合。网格中的每一项都可以在一个房间中放置多次，从而创建一个更大的场景，称为“图块地图”。",
    "A timeline in GameMaker Studio 2 is a linear collection of events that will be run in consecutive order. Each event can be given code or actions to perform a task and when the timeline is run, these tasks will be performed as each event in the tmeline is reached.":"在GameMaker Studio 2中，时间线是一系列事件的线性集合，它们将以连续的顺序运行。可以为每个事件提供执行任务的代码或操作，当运行时间线时，将在到达时间线中的每个事件时执行这些任务。",
    "A track in the sequences track panel that holds a single asset, either a sprite, a sound, an instance, or a sequence.":"序列轨道面板中的轨道包含单个资源，即精灵，声音，实例或序列。",
    "A track that has been assigned to an asset track in the track panel and that changes a single parameter for the asset track it\u0027s linked to, like the position, or the image index.":"在轨道面板中分配给资源轨道的轨道，并改变其链接到的资源轨道的单个参数，如位置或图像索引。",
    "A truth table is a mathematical table used in logic - specifically in connection with boolean algebra and boolean functions - which sets out the functional values of logical expressions on each of their functional arguments, that is, for each combination of values taken by their logical variables.":"真值表是在逻辑中使用的数学表-特别是与布尔代数和布尔函数结合使用的表-列出逻辑表达式在每个函数自变量上的函数值，即针对其逻辑变量取值的每种组合。",
    "A value that is considered \"false\" when used as a boolean, for example in an if() condition.":"当用作布尔值时被认为是“false”的值，例如在if()条件中。",
    "A value that is considered \"true\" when used as a boolean, for example in an if() condition.":"当用作布尔值时被认为是“true”的值，例如在if()条件中。",
    "A variable is a named value within a program which can be modified, stored and displayed whenever required. For example, if we have an integer variable with a name XYZ and it stores a value 10, we can then do things like A = XYZ + 10, which will set the value of the variable A to 20, since XYZ is 10 and we are adding 10 to it. You can also change variable values using operators, so doing XYZ = XYZ + 100 would modify the value of our XYZ variable to be equal to 110. Variables can also be used to store identifiers and references to different assets.":"变量是程序中的命名值，可以在需要时对其进行修改，存储和显示。例如，如果我们有一个名为XYZ的整数变量，并且它存储的值为10，则可以执行A = XYZ + 10之类的操作，这将把变量A的值设置为20，因为XYZ为10，我们正在添加10。您还可以使用运算符更改变量值，因此XYZ = XYZ + 100会将XYZ变量的值修改为等于110。变量也可以用于存储标识符和对不同资源的引用。",
    "A vector is a mathematical construct that has a size, called the magnitude, and a direction. In GameMaker, a vector is usually used to show the distance and direction something moved in. A vector can also be used to define images and certain image formats like SWF use vector maths to define the images they contain.":"向量是一种数学结构，它有大小和方向。在GameMaker中，矢量通常用来显示物体移动的距离和方向。矢量还可以用来定义图像，SWF等特定图像格式使用矢量数学来定义它们所包含的图像。",
    "A version number is a unique set of numbers assigned to a specific release of a software program, game or asset, normally with the format MAJOR.MINOR.MAINTENANCE, eg: v2.3.56. Typically, as updates and entirely new editions of a game or asset are released, the version number will increase.":"版本号是分配给软件程序，游戏或资源的特定版本的唯一编号集，通常以MAJOR.MINOR.MAINTENANCE(主要更新.小更新.维护)格式表示，例如：v2.3.56。通常，随着游戏或资源的更新和全新版本的发布，版本号会增加。",
    "A vertex is the name given to a single point of a polygon that contains various characteristics that define it\u0027s position, its colour and its texture. In computer graphics, this usually means a corner of a triangle that is used to create a primitive, and a combination of such primitives is what makes the graphics on the screen.":"顶点是一个多边形的单点的名称，它包含了定义它的位置、颜色和纹理的各种特征。在计算机图形学中，这通常指用于创建原语的三角形的一个角，而这些原语的组合构成了屏幕上的图形。",
    "A&nbsp;weak reference is a reference that does not protect the referenced object from collection by a garbage collector, and so can be used to check if a struct is still \"alive\" (referenced) or not somewhere in the game.":"弱引用是一种不保护被引用对象不被垃圾收集器收集的引用，因此可以用来检查一个结构是否仍然“活”(被引用)或在游戏中的某个地方。",
    "Accessors":"访问器",
    "Action Syntax:":"动作语法：",
    "Additional IDE Tools":"附加 IDE 工具",
    "Additional Information":"额外的信息",
    "Addressing Variables In Other Instances":"在其他实例中处理变量",
    "Alignment":"对齐",
    "An absolute value is one where the sign of the value is ignored, essentially converting all values into positive ones or zero. So - for example - an absolute value for -10 would be 10.":"绝对值是指忽略该值的符号的值，实际上将所有值都转换为正值或零。因此例如-10的绝对值为10。",
    "An algorithm is basically a set of instructions or rules designed to solve a definite problem. The problem can be simple like adding two numbers or a complex one, such as converting a video file from one format to another or compressing audio into a smaller file size..":"算法基本上是一组旨在解决确定问题的指令或规则。问题可能很简单，例如将两个数字相加或将其复杂化，例如将视频文件从一种格式转换为另一种格式，或者将音频压缩为较小的文件大小。",
    "An argument&nbsp;(also known as a parameter) is a value that is passed into a function. For example, the GameMaker Language function \u0027sqr(num)\u0027 is a function that will give you the square of a number that you provide as the argument, eg: \u0027a = sqr(4);\u0027 Here the argument is 4, and the function will return 16, which is stored in the variable \u0027a\u0027.":"也称为参数(parameter argument)是传递给函数的值。例如，GameMaker语言函数\u0027sqr(num)\u0027是将给您提供作为参数的数字平方的函数，例如：\u0027a=sqr(4);\u0027这里的参数是4，函数将返回16，该值存储在变量“ a”中。",
    "An assignment is simply the term used when we set (assign) a value to a variable.":"赋值只是我们为变量设置（赋值）时使用的术语。",
    "An explicit value written in code, e.g. when you write \"A TEXT STRING\" you are using a string literal, as opposed to returning a string through a variable or function. Similarly, [0, 1, 2] is an array literal.":"在代码中写入的显式值，例如，当您编写“A TEXT STRING”时，您使用的是字符串字面量，而不是通过变量或函数返回字符串。类似地，[0,1,2]是数组字面值。",
    "An expression is a combination of one or more constants, variables, operators, and/or functions that are interpreted according to particular rules of precedence and association to return another value. A simple expression would be (5 + 5), which returns 10.":"表达式是一个或多个常量，变量，运算符和/或函数的组合，这些常量根据特定的优先级和关联规则进行解释以返回另一个值。一个简单的表达式是（5 + 5），它返回10。",
    "An iteration is a single pass through a set of operations in your project code. One form of iteration in computer programming is via loops. A loop will repeat a certain segment of code until a condition is met and it can proceed further. Each time the computer runs a loop, it is known as an iteration. In simple terms, iteration is the process of repeating a particular snippet of code over and over again to perform a certain action.":"迭代是对项目代码中的一组操作的一次遍历。计算机编程中一种迭代形式是通过循环。循环将重复一段代码，直到满足条件为止，然后循环可以继续进行。每次计算机运行一个循环，就称为迭代。简单来说，迭代是一遍又一遍地重复执行特定代码段以执行特定操作的过程。",
    "An operand is a term used to denote the values which can be manipulated using different operators. In the expression A + B + C, A, B and C are the operands.":"是用来表示可以使用不同运算符操作的值的术语。在表达式A + B + C中，A, B和C是运算对象。",
    "An operator is a term used to denote something which can manipulate different operands. In the expression A + B - C, + and - are the operators. Examples of different operators are + (addition), - (subtrtaction), = (equals), != (not equal) and &gt;= (greater than or equal to), but there are many more.":"运算符是用来表示可以操作不同运算东西的东西的术语。在表达式A + B - C中，+和-是运算符。不同的运算符示例有+(加法)、-(减法)、=(等于)、!=(不等于)和>=(大于或等于)，但是还有更多。",
    "Android Extensions":"Android 扩展",
    "Angles And Distance":"角度和距离",
    "Animated Tiles":"动画图块",
    "Animation":"动画",
    "Animation Curve Editor Preferences":"动画曲线编辑器首选项",
    "Animation Curves":"动画曲线",
    "Another name for a texture page, which is simply a collection of images required by one or more sprites in your game, organised in an optimal way to use as little texture memory as possible.":"纹理页面的另一个名称，它只是游戏中一个或多个精灵所需的图像集合，以一种最佳方式进行组织，以使用尽可能少的纹理内存。",
    "Any":"任何",
    "Argument":"参数",
    "Arguments:":"参数：",
    "Array":"数组(Array)",
    "Array Functions":"数组函数",
    "Arrays":"数组",
    "Asset Browser":"资源浏览器",
    "Asset Browser Preferences":"资源浏览器首选项",
    "Asset Management":"资源管理",
    "Asset Type Constant":"资源类型常量",
    "Assets And Tags":"资源和标签",
    "Async Events":"异步事件",
    "Asynchronous Functions":"异步函数",
    "Attachments":"附件",
    "Attempt Connection Constant":"尝试连接常量",
    "Audio":"音频",
    "Audio Buffers":"音频缓冲区",
    "Audio Effects":"音效",
    "Audio Emitter ID":"音频发射器 ID",
    "Audio Emitters":"音频发射器",
    "Audio Groups":"音频组",
    "Audio LFO Types/Shapes":"音频 LFO 类型/形状",
    "Audio Listeners":"音频监听器",
    "Audio Loop Points":"音频循环点",
    "Audio Playback":"音频播放",
    "Audio Properties Overview":"音频属性概述",
    "Audio Recording":"录音",
    "Audio Synchronisation":"音频同步",
    "AudioBus Struct":"AudioBus 结构",
    "AudioEffect Struct":"AudioEffect 结构",
    "AudioEffectType Enum":"AudioEffectType 枚举",
    "AudioLFOType Enum":"AudioLFOType 枚举",
    "Auto Tiles":"自动图块",
    "Autocapitalization Type":"自动大写类型",
    "Background":"背景",
    "Background Layers":"背景图层",
    "Base Types":"基本类型",
    "Basic Code Structure":"基本代码结构",
    "Basic Forms":"基本绘制",
    "Best Practices When Programming":"编程时的最佳实践",
    "Bezier interpolation involves estimating a new value by connecting two adjacent known values with a mathematically generated spline curve which can be edited using \"handles\" attached to each point. You can then get the interpolated value by checking any point along the line.":"贝塞尔插值是通过将两个相邻的已知值与数学生成的样条曲线连接起来来估计一个新值，该样条曲线可以使用附加在每个点上的“句柄”进行编辑。然后你可以通过检查直线上的任意一点来得到插值值。",
    "Binary Files":"二进制文件",
    "Bit rate is measured in Kilobits-per-sec(kbps or k) and is the number of bits encoded per second or the number of bits transmitted or received per second. The higher the bit rate and sampling rate, the higher the audio quality but the more processing power and bandwidth it needs. Lower bit rates create a smaller file size and use less processing and bandwidth, but with a drop in audio quality. For good quality music usually a bit rate of 64–128kbps (96kbps+ recommended) is preferred.":"比特率以每秒千位数（kbps或k）为单位，是每秒编码的位数或每秒发送或接收的位数。比特率和采样率越高，音频质量越高，但所需的处理能力和带宽也就越高。较低的比特率可创建较小的文件大小，并使用较少的处理和带宽，但会降低音频质量。为了获得高质量的音乐，通常首选64–128kbps（建议96kbps +）的比特率。",
    "Bitwise Operators":"位运算和二进制",
    "Blend factor (Red, Green, Blue, Alpha)":"混合因子(红色、绿色、蓝色、透明度)",
    "Bones":"骨骼",
    "Bookmarks":"书签",
    "Bool":"布尔值(Bool)",
    "Boolean":"布尔型",
    "Broadcast Messages":"广播消息",
    "Brush Builder":"笔刷生成器",
    "Buffer Data Type Constant":"缓冲区数据类型常量",
    "Buffers":"缓冲区",
    "Build tools are external applications that GameMaker Studio 2 requires to generate executable packages for the different target platforms.":"生成工具是GameMaker Studio 2生成用于不同目标平台的可执行程序包所需的外部应用程序。",
    "Building via Command Line":"通过命令行构建",
    "Built-In Time Sources":"内置时间源",
    "CPU overhead measures the amount of work a computer\u0027s central processing unit can perform and the percentage of that capacity that\u0027s used by individual computing tasks.":"CPU开销衡量的是计算机中央处理器可以执行的工作量以及单个计算任务所使用的容量百分比。",
    "Cameras And Display":"相机及显示",
    "Cameras And View Ports":"相机和视口",
    "Clipping Masks":"剪切蒙版",
    "Cloning A Repository":"克隆一个仓库",
    "Cloud":"云",
    "Cloud Saving":"<del>云存储</del> (过时)",
    "Code":"代码",
    "Code Snippets":"代码片段",
    "Collision Compatibility Mode":"碰撞兼容模式",
    "Collisions":"碰撞",
    "Colour":"颜色",
    "Colour And Alpha":"颜色和 Alpha",
    "Command Line Parameters":"命令行参数",
    "Commenting Code":"代码注释",
    "Compatibility Functions":"兼容性函数",
    "Compatibility Scripts":"兼容性脚本",
    "Compiler Batch Files / Scripts":"编译器批处理文件/脚本",
    "Compiler Errors":"编译器错误",
    "Compiling":"编译",
    "Compiling Preferences":"编译首选项",
    "Compiling is when GameMaker takes your code and collects it together in such a way as to create an executable package that will run on a device as a game.":"编译是指GameMaker接受您的代码并将其收集在一起的方式，以创建可执行的程序包，该程序包将作为游戏在设备上运行。",
    "Compression is the use of mathematical algorithms to reduce the size of a file. This is used in particular for audio and image files, where formats like JPG (image) and MP3 (audio) are compressed formats. Compression usually results is much smaller file sizes, but with some data loss which may or may not be noticable depending on the type and strength of the compression used. Uncompressed formats would be BMP (image) or WAV (audio), which have larger file sizes, but no data loss.":"压缩是使用数学算法来减小文件的大小。这特别适用于音频和图像文件，其中JPG（图像）和MP3（音频）等格式是压缩格式。压缩通常会使得文件大小更小，但会导致一些数据丢失，这可能会或可能不会很明显，这取决于所使用压缩的类型和强度。未压缩的格式为BMP（图像）或WAV（音频），它们具有较大的文件大小，但不会丢失数据。",
    "Conditionals, conditional statements, and conditional expressions are features of general programming language, and they help the code make a choice whrere the result is either true or false. These can perform different actions depending on the need of the programmer, and multiple conditionals can be combined into a single condition, as long as the final value of the condition is either true or false. Examples of conditional statements are \u0027if\u0027 and \u0027while\u0027.":"条件，条件语句和条件表达式是通用编程语言的功能，它们可以帮助代码在结果为真或假的情况下做出选择。它们可以根据程序员的需要执行不同的操作，并且可以将多个条件组合为一个条件，只要条件的最终值为true或false。条件语句的示例是 if”和“ while”。",
    "Configurations":"配置",
    "Confirm Dialogs":"确认对话框",
    "Conflicts":"冲突",
    "Connection":"连接",
    "Constant":"常量",
    "Constants":"常量",
    "Content":"内容",
    "Create Event":"创建事件",
    "Create a Multiplayer Game":"创建一个多人游戏",
    "Creating A Marketplace Asset":"创建市场资源",
    "Creating A Publisher Account":"创建发布者账户",
    "Creating A Tutorial":"创建教程",
    "Creating An Extension":"创建扩展",
    "Creating Sound Effects":"创建声音效果",
    "Creating Sprites":"创建精灵",
    "Creating Tile Sets":"创建 Tilesets",
    "Cursor":"光标",
    "DEPRECATED":"已删除",
    "DS Grids":"网格 Grid",
    "DS Lists":"列表 List",
    "DS Maps":"映射 Map",
    "DS Priority Queues":"优先队列 Priority Queues",
    "DS Queues":"队列 Queues",
    "DS Stacks":"堆栈 Stacks",
    "Data Structures":"数据结构",
    "Data Type":"数据类型",
    "Data Type Constant":"数据类型常量",
    "Data Types":"数据类型",
    "Date And Time":"日期和时间",
    "Deactivating Instances":"停用实例",
    "Debugging":"调试",
    "Decimal Value":"十进制值",
    "Default (old to new)":"默认(从旧到新)",
    "Defining Inputs":"定义输入",
    "Description":"描述",
    "Device Input":"设备输入",
    "Dialog":"对话框",
    "Domain Name System - This system associates domain names (e.g. gamemaker.io) to other info, such as IP addresses. DNS records are returned from a DNS lookup.":"域名系统——该系统将域名(如gamemaker.io)与其他信息(如IP地址)相关联。DNS记录从DNS查找返回。",
    "Double Tap Event":"双击事件",
    "Downsampling is the process of reducing samples in audio and, more generally, in signals. For audio it means that samples are thrown away and less samples remain, leading to a loss of information. The sample frequency of the audio is lowered as well as the quality of the audio. This change distorts the audio.":"降采样是在音频和信号中减少样本的过程。对于音频来说，这意味着样本被丢弃，剩下的样本更少，导致信息丢失。音频的采样频率和音频的质量都降低了。这个改变会使音频失真。",
    "Drag End Event":"拖动结束事件",
    "Drag Start Event":"拖动开始事件",
    "Dragging Event":"正在拖动事件",
    "Draw Events":"绘制事件",
    "Drawing":"绘制",
    "Drawing And Miscellaneous":"绘制和其他",
    "Dynamic Textures":"动态纹理",
    "Editing Code":"编辑代码",
    "Effects (in-game only)":"特效(仅限于游戏中)",
    "Emitter Properties":"发射器属性",
    "Encoding And Hashing":"编码和哈希",
    "Encoding transforms data into another format using a scheme that is publicly available so that it can easily be reversed. This is not the same as encryption, as it does not require a key to decode it. Encoding is generally used to either change the data into a format for eaiser use by a different system (like sending data to a server), or for making data unreadable to the human eye.":"编码使用公开可用的方案将数据转换为另一种格式，以便可以轻松地将其反转。这与加密不同，因为它不需要密钥对其进行解码。编码通常用于将数据更改为易于由其他系统使用的格式（例如，将数据发送到服务器），或用于使人眼无法读取的数据。",
    "Error":"错误(Error)",
    "Error Reporting":"错误报告",
    "Escape Sequence":"转义字符串",
    "Evaluation Order":"运算顺序",
    "Event Order":"事件顺序",
    "Example":"示例",
    "Example 1:":"示例1：",
    "Example 1: Basic Movement":"例1：基本运动",
    "Example 1: Check if any of the given values is present in an array":"示例1：检查数组中是否存在任何给定值",
    "Example 1: Playing a basic sound (similar to audio_play_sound)":"示例 1：播放基本声音 (类似于 audio_play_sound)",
    "Example 1: Replace an object ID with another object ID":"示例 1：用另一个对象 ID 替换对象 ID",
    "Example 1: Showing the output&nbsp;":"示例1：显示输出",
    "Example 2:":"示例2：",
    "Example 2: Check if all values are present in an array":"示例2：检查数组中是否存在所有值",
    "Example 2: Playing a sound on an emitter (similar to audio_play_sound_on)":"示例 2：在发射器上播放声音 (类似于 audio_play_sound_on)",
    "Example 2: Pretty Print":"示例2：美化输出",
    "Example 2: Replace the first instance of an object ID with an instance ID":"示例 2：将对象 ID 的第一个实例替换为实例 ID",
    "Example 2: Reserved Strings":"示例2：保留字符串",
    "Example 2: Showing Instances Collided With":"例2：显示与之碰撞的实例",
    "Example 2: array of arrays":"示例2：数组的数组",
    "Example 2:&nbsp;Finding the top-left corner position of a tile":"示例2：查找拼贴的左上角位置",
    "Example 3: Playing a sound at a given position in 3D audio space (similar to audio_play_sound_at)":"示例 3：在 3D 音频空间中的给定位置播放声音 (类似于 audio_play_sound_at)",
    "Example:":"例子:",
    "Expressions And Operators":"表达式和运算符",
    "Extended Blend Mode":"扩展混合模式",
    "Extended Example":"拓展示例",
    "Extended Example 1":"扩展示例1",
    "Extended Example 2":"扩展示例2",
    "Extended Example:":"扩展示例：",
    "Extension Editor Preferences":"扩展编辑器首选项",
    "Extensions":"扩展",
    "External Call Type Constants":"外部调用类型常量",
    "External Data Type Constants":"外部数据类型常量",
    "External Merge/Diff Tools":"外部合并/差异工具",
    "FX Types &amp; Parameters":"滤镜效果类型和参数",
    "Feather Data Types":"羽毛数据类型",
    "Feather Features":"羽毛功能",
    "Feather Preferences":"羽毛首选项",
    "File Directories":"文件目录",
    "File Handling":"文件处理",
    "File System":"文件系统",
    "File Watcher":"文件监视器",
    "Filter and Effect Functions":"过滤器和效果函数",
    "Filters":"滤镜",
    "Filters and Effects":"滤镜和效果",
    "Fixtures":"装置",
    "Flick Event":"轻击事件",
    "Floating point numbers are numbers that contain decimal points. For example, the numbers 5.5, 0.001, and -2,345.6789 are floating point numbers. Numbers that do not have decimal places are called integers (e.g. 2, 56, 1400).":"浮点数是包含浮点小数的数字。例如，数字5.5、0.001和-2,345.6789是浮点数。没有小数位的数字称为整数。",
    "Font Editor Preferences":"字体编辑器首选项",
    "Fonts":"字体",
    "For sprites, the bounding-box is the name given to the edges of the area that collisions will initially be detected in, and it doesn\u0027t have to be the same size as the sprite it\u0027s being applied to. For sequences, the bounding box is the outer edge of the total space that one or more assets occupy in the canvas.":"对于精灵来说，边界框是用于最初检测碰撞区域边缘的名称，它不必与它所应用的精灵大小相同。对于序列，边界框是画布中一个或多个资源占用的总空间的外缘。",
    "Forces":"力",
    "Formats":"格式",
    "Function":"函数(Function)",
    "Function Return":"函数返回",
    "Function Returns:&nbsp;":"函数返回:",
    "Function Syntax:":"函数语法:",
    "Functions":"函数",
    "GML Code":"GML 代码",
    "GML Code Overview":"GML 代码概述",
    "GML Code Preferences":"GML 代码首选项",
    "GML Code Reference":"GML 代码参考",
    "GML Name":"GML 名称",
    "GML Visual":"GML 可视化",
    "GML Visual Preferences":"GML 可视化首选项",
    "GML Visual\u200B\u200B\u200B\u200B\u200B\u200B\u200B Overview":"GML 可视化概述",
    "GML Visual\u200B\u200B\u200B\u200B\u200B\u200B\u200B Reference":"GML 可视化参考",
    "GPU Control":"GPU 控制",
    "Gain":"增益",
    "Gain Calculation":"增益计算",
    "Game":"游戏",
    "Game Input":"游戏输入",
    "Game Options":"游戏设置",
    "Game Settings":"游戏设置",
    "GameMaker Help Center":"GameMaker 帮助中心",
    "GameMaker IDE":"GameMaker IDE",
    "GameMaker Language":"GameMaker 语言",
    "GameMaker Manual Index":"GameMaker手册索引",
    "GameMaker Runner":"GameMaker Runner",
    "GameMaker&nbsp;website":"GameMaker 网站",
    "Gamepad Input":"游戏手柄输入",
    "Garbage Collection":"垃圾回收",
    "General Game Control":"通用游戏控制",
    "General Layer Functions":"常规图层函数",
    "General Preferences":"常规首选项",
    "Generating Object Events":"生成对象事件",
    "Gesture Events":"手势事件",
    "Gesture Input":"手势输入",
    "Gizmo are directly manipulable, self contained, visual screen idioms - essentially anything that is visual and can be interacted with or manpulated by the user to generate an effect or a specific result. ":"Gizmo(小工具)是直接可操作的，独立的，可视的屏幕习语——本质上是任何可视的，可以与用户交互或由用户操作以产生效果或特定结果的东西。",
    "Global Pinch In /Pinch Out Event":"全局捏入/捏出事件",
    "Global Variables":"全局变量",
    "Go To":"转到",
    "Guide To Primitives And Vertex Building":"图元和顶点构建指南",
    "Guide To Using Blendmodes":"混合模式使用指南",
    "Guide To Using Buffers":"缓冲区使用指南",
    "Guide To Using Particles":"粒子使用指南",
    "Guide To Using Shaders":"着色器使用指南",
    "HTML5 Code Injection":"HTML5 代码注入",
    "Hashing is the method of creating a string or value that relates to a single source - usually a file - and ONLY that source. For example., in GameMaker you can generate a hash for a save file, then, before accessing it later, generate another hash for it and check the original hash and the new hash to determine if the file has been tampered with.":"哈希(散列)是一种创建与单个源（通常是文件）相关且仅与该源相关的字符串或值的方法。例如，在GameMaker中，您可以为保存文件生成一个哈希，然后在稍后对其进行访问之前，为其生成另一个哈希，并检查原始哈希和新哈希以确定文件是否已被篡改。",
    "Help":"帮助",
    "How to Disable Extensions?":"如何禁用扩展？",
    "IDE Error Reporting":"IDE 错误报告",
    "IDE Input And Navigation":"IDE 输入和导航",
    "IDE Parameters":"IDE 参数",
    "IDE Preferences":"IDE 首选项",
    "IMPORTANT":"重要",
    "Identifier":"标识符",
    "Image Editor":"图像编辑器",
    "Image Editor Preferences":"图像编辑器首选项",
    "Image Loaded":"图像已加载",
    "Images":"图像",
    "In App Purchases":"应用内购买",
    "In GameMaker, a method is the name given to a user-defined function that has been bound to an instance, so that the instance variable is the name of the funtion and what you use to call it.":"在GameMaker中，方法是绑定到实例的用户定义函数的名称，因此实例变量就是函数的名称和调用它的方法。",
    "In GameMaker, the The VM (Virtual Machine) is a compiling method that uses a generic runner for each platform and then uses that to interpret the code for your game.":"在GameMaker中，VM（虚拟机）是一种编译方法，该方法对每个平台使用通用运行程序，然后使用该运行程序解释游戏代码。",
    "In GameMaker, when we talk about an object, instance or room using \u0027physics\u0027 we mean it is using the built-in physics simulation functions, based on the Box2D physics library.":"在GameMaker中，当我们谈论一个使用“物理”的对象、实例或房间时，我们指的是它使用了基于Box2D物理库的内置物理模拟功能。",
    "In computer programming, the term hard-coded is used to describe code that is considered fixed and not likely to change. Hardcoded features are built into hardware or software in such a way that they cannot be modified later on. For example, if you are making a game and \u0027hard-code\u0027 the player health to 10, then you would be using the value 10 throughout the game code rather than using a variable.":"在计算机编程中，术语“硬编码”用于描述被认为是固定的并且不太可能更改的代码。硬编码功能以无法稍后修改的方式内置于硬件或软件中。例如，如果您要制作游戏并将玩家的健康状况“硬编码”为10，那么您将在整个游戏代码中使用值10，而不是使用变量。",
    "In computing, a server is a computer program or a device that provides functionality for other programs or devices, called \u0027clients\u0027.":"在计算中，服务器是为其他程序或设备提供功能的计算机程序或设备，称为“客户端”。",
    "In games, the HUD stands for the Heads-Up Display. This is the method by which information is visually relayed to the player as part of a game\u0027s user interface, so things like the health bar, status icons, score, etc... all form part of the HUD, and normally HUD elements do not require user interaction.":"在游戏中，HUD代表抬头显示器。这是一种将信息作为游戏用户界面的一部分可视地传递给玩家的方法，因此，诸如健康栏，状态图标，得分等之类的内容都构成了HUD的一部分，而通常HUD元素并不需要用户交互。",
    "In programming, a statement is a single line of code written legally in a programming language that expresses an action to be carried out. A statement might have internal components of its own, including expressions, operators and functions. An example of a statement is A = B + 5. A GameMaker Studio 2 program is nothing but a sequence of one or more statements that together perform a task (like move the player). ":"在编程中，语句是用编程语言合法编写的单行代码，表示要执行的操作。语句可能具有自己的内部组件，包括表达式，运算符和函数。语句的一个示例是A = B +5。GameMakerStudio 2程序不过是一系列一起执行任务（如移动玩家）的一个或多个语句的序列。",
    "In-Game":"游戏内",
    "Included Files":"包含文件",
    "Index":"索引",
    "Ini Files":"ini 文件",
    "Injection Path":"注入路径",
    "Input":"输入",
    "Input Type":"输入类型",
    "Installation Guide":"安装指南",
    "Instance Keywords":"实例关键字",
    "Instance Variables":"实例变量",
    "Instances":"实例",
    "Introduction To &lt;span data-keyref=\"GameMaker Name\"&gt;GameMaker&lt;/span&gt;":"导言 &lt; span data-keyref = “ GameMaker Name”&gt; GameMaker &lt;/span &gt;",
    "Introduction To <span data-keyref=\"GameMaker Name\">GameMaker</span>":"<span data-keyref=\"GameMaker Name\">GameMaker</span>导言",
    "Introduction To GameMaker":"GameMaker 简介",
    "Introduction To {}GameMaker{}":"介绍{}GameMaker{}",
    "Inverse Sawtooth":"反锯齿波",
    "JSDoc Script Comments":"JSDoc 脚本注释",
    "JSON stands for JavaScript Object Notatio, and is a lightweight format for storing data. JSON is often used when data is sent from a server to a web page and is considered \u0027self-describing\u0027 and easy to understand and follow when viewed.":"JSON代表JavaScript Object Notatio，并且是用于存储数据的轻量级格式。 JSON通常在将数据从服务器发送到网页时使用，并且被认为是“自我描述”的，易于查看和遵循。",
    "Joints":"关节",
    "Key":"键",
    "Keyboard Input":"键盘输入",
    "Keyboard Shortcuts":"键盘快捷键",
    "Keyword":"关键字",
    "Keywords are special words that are reserved by a programming language or a program as they have a special meaning. These keywords are reserved to perform certain tasks, and they can be either commands or parameters. Each programming language has a set of reserved keywords (also known as reserved names) which cannot be used as variable names, and the GameMaker Language is no exception, where words like return, while, if and break are all reserved kewords used in the programming language.":"关键字是编程语言或程序保留的特殊字，因为它们有特殊的意义。这些关键字被保留以执行某些任务，它们可以是命令或参数。每种编程语言都有一组不能用作变量名的保留关键字(也称为保留名称)，GameMaker语言也不例外，如return、while、if和break等词都是编程语言中使用的保留kewords。",
    "Language":"语文",
    "Language Features":"语言特点",
    "Language Preferences":"语言首选项",
    "Layer Properties":"图层属性",
    "Layer Types And Properties":"图层类型和属性",
    "Level":"等级",
    "Licencing &amp; Logging In":"许可及登录",
    "Licencing &amp; Versions":"授权 &amp; 版本",
    "Lighting":"光照",
    "Linear interpolation involves estimating a new value by connecting two adjacent known values with a straight line. You can then get the interpolated value by checking any point along the line. In graphics, linear interpolation refers to a basic method of smoothing pixel edges.":"线性插值是通过用一条直线连接两个相邻的已知值来估计一个新值。然后你可以通过检查直线上的任意一点来得到插值值。在图形学中，线性插值是指平滑像素边缘的一种基本方法。",
    "Listener Mask":"监听掩码",
    "Listing A Service":"列出服务",
    "Listing An Asset":"资源清单",
    "Local Asset Packages":"本地资源包",
    "Local Variables":"局部变量",
    "Machine code is code that is directly executed by a CPU without the need for interpretation by an interpreter. It is the lowest level of code and contains the instructions that the processor executes.It is specific to a processor architecture. As a consequence, it is optimized. It can also be generated from source code in a higher level programming language by a compiler.In GameMaker the YoYo Compiler can be used to generate an executable containing optimized machine code for a variety of platforms.":"机器代码是CPU直接执行的代码，不需要解释器解释。它是最低级别的代码，包含处理器执行的指令。它是特定于处理器架构的。因此，它是优化的。它也可以由编译器从高级编程语言的源代码生成。在GameMaker中，YoYo编译器可用于生成包含针对各种平台的优化机器代码的可执行文件。",
    "Making A Game Using <span data-keyref=\"GameMaker Name\">GameMaker</span>":"使用 <span data-keyref=\"GameMaker Name\">GameMaker</span> 制作游戏",
    "Marketplace Preferences":"市场首选项",
    "Marketplace Style Guide":"市场风格指南",
    "Match Making":"配对",
    "Maths And Numbers":"数学与数字",
    "Matrix Array":"矩阵数列",
    "Matrix Functions":"矩阵函数",
    "Member":"成员",
    "Menus":"菜单",
    "Message":"信息",
    "Method Variables":"方法变量",
    "Milliseconds":"毫秒",
    "Mipmapping":"纹理映射",
    "Motion Planning":"运动规划",
    "Mouse Input":"鼠标输入",
    "Movement":"运动",
    "Movement And Collisions":"运动与碰撞",
    "Movement And Controls":"移动及控制",
    "Multicast is network communication where multiple receivers are addressed instead of a single receiver in a single transmission.":"组播是一种网络通信，在这种通信中，多个接收者被寻址，而不是单个传输中的单个接收者。",
    "Networking":"网络",
    "Nine Slice":"九宫格",
    "Non-Bitmap Sprites":"非位图精灵",
    "Notes":"笔记",
    "Number Functions":"数字函数",
    "OPTIONAL":"可选",
    "OS And Compiler":"操作系统和编译器",
    "Object Editor Preferences":"对象编辑器首选项",
    "Object Events":"对象事件",
    "Object Variables":"对象变量",
    "Objects":"对象",
    "Objects And Instances":"对象和实例",
    "Obsolete Functions":"过时的函数",
    "Offset":"偏移量",
    "Operating System":"操作系统",
    "Operation":"类型",
    "Other Events":"其他事件",
    "Our Knowledge Base":"我们的知识库",
    "Our Social Links":"我们的联系方式",
    "Output Windows":"输出窗口",
    "Overview":"概述",
    "Parameters":"参数",
    "Parent Objects":"父对象",
    "Particle Draw Order":"粒子绘制顺序",
    "Particle Emitters":"粒子发射器",
    "Particle Systems":"粒子系统",
    "Particle Types":"粒子类型",
    "Particles":"粒子",
    "Path Manipulation":"路径操控",
    "Path Variables":"路径变量",
    "Paths":"路径",
    "Peers":"端",
    "Physics":"物理",
    "Physics Joint Constants":"物理关节常量",
    "Physics Objects":"物理对象",
    "Physics Variables":"物理变量",
    "Pinch End Event":"捏停止事件",
    "Pinch Start Event":"捏开始事件",
    "Pitch":"音高",
    "Platform":"平台",
    "Platform Preferences":"平台首选项",
    "Player Preferences":"玩家首选项",
    "Plugin Preferences":"插件首选项",
    "Pointer":"指针(Pointer)",
    "Power Saving":"节能",
    "Preferences &amp; Features":"偏好及功能",
    "Prefix":"前缀",
    "Primitives&nbsp;And Vertex Formats":"基元和顶点格式",
    "Project Image Generator":"项目图像生成器",
    "Purchasing An Asset":"购买资源",
    "Push Notifications":"推送通知",
    "Quick Start Guide":"快速入门指南",
    "Rating And Flagging Assets":"评级和资源标志",
    "Read Only":"只读",
    "Real":"实数(Real)",
    "Recent Windows":"最近窗口",
    "Redefine Keys Preferences":"重定义快捷键首选项",
    "Reference":"参考文献",
    "Release Notes":"发行说明",
    "Replacement key":"替换键",
    "Repository Options":"仓库选项",
    "Required SDKs":"所需的 SDK",
    "Resources":"资源",
    "Return Value (examples)":"返回值(示例)",
    "Returns":"返回",
    "Returns:":"返回:",
    "Reversed (new to old)":"反转(从新到旧)",
    "Reverting Files":"回滚文件",
    "Rollback Constraints":"回滚约束",
    "Rollback Errors":"回滚错误",
    "Rollback Events":"回滚事件",
    "Rollback Functions":"回滚函数",
    "Rollback Multiplayer":"回滚多人游戏",
    "Rollback System":"回滚系统",
    "Rollback Variables":"回滚变量",
    "Room Editor Preferences":"房间编辑器首选项",
    "Room Inheritance":"房间继承",
    "Room Properties":"房间属性",
    "Rooms":"房间",
    "Rotate End Event":"旋转结束事件",
    "Rotate Start Event":"旋转开始事件",
    "Rotating Event":"正在旋转事件",
    "Runner &amp; Compiler":"运行器和编译器",
    "Runner Errors":"运行器错误",
    "Runtime Feeds Preferences":"运行时源首选项",
    "Runtime Functions":"运行时函数",
    "Runtime Parameters":"运行时参数",
    "SCM stands for Source Control Management, which is a program (or suite of programs) responsible for maintining versions of the source code for a project. SCM permits you to store a running history of code changes, as well as review and undo any changes made to the source code, among other things.":"SCM代表源代码控制管理，它是负责维护项目源代码版本的一个程序(或一组程序)。SCM允许您存储代码更改的运行历史，以及检查和撤销对源代码所做的任何更改，以及其他事情。",
    "SDK stands for \u0027Software Development Kit\u0027. This usually refers to a collection of software and/or packages used for developing applications for a specific device or operating system.":"SDK代表“软件开发包\u0027Software Development Kit\u0027”。这通常是指用于为特定设备或操作系统开发应用程序的软件和/或软件包的集合。",
    "SDL Name":"SDL 名称",
    "Sample rate is the number of samples of audio carried per second, measured in Hz or kHz (one kHz being 1000 Hz). The higher the sample rate, the more a sound will approximate the original analog waveform, but the larger the file size will be. In general sound effects are fine with a lower sample rate than music.":"采样率是每秒携带的音频样本的数量，以赫兹或kHz测量(1khz等于1000hz)。采样率越高，声音将越接近原始模拟波形，但文件大小将越大。一般来说，声音效果在采样率较低的情况下比音乐效果好。",
    "Save / Load":"保存 / 加载",
    "Saving Data":"保存数据",
    "Sawtooth":"锯齿波",
    "Scale":"比例",
    "Scope":"范围",
    "Script Functions And Variables":"脚本函数和变量",
    "Script Functions vs. Methods":"脚本函数与方法",
    "Scripts":"脚本",
    "Sequence Direction Constant":"序列方向常量",
    "Sequence Events, Moments and Broadcast Messages":"事件、时刻和广播消息的序列",
    "Sequence Layers":"序列图层",
    "Sequences":"序列",
    "Sequences Preferences":"序列首选项",
    "Setting Up The Git Plugin":"设置 Git 插件",
    "Shader Language":"着色器语言",
    "Shader Uniforms":"着色器 Uniforms 常量",
    "Shaders":"着色器",
    "Shaders.htm":"着色器",
    "Short for \u0027Graphical User Interface\u0027, which is a user interface that includes graphical elements, such as windows, icons and buttons. In GameMaker you have a specific set of object events (Draw GUI Events) that can draw to this layer specifically designed for things like score, lives, inventories, etc...":"“图形用户界面”（Graphical User Interface）的缩写，它是一个包含图形元素（例如窗口，图标和按钮）的用户界面。在GameMaker中，您有一组特定的对象事件（绘制GUI事件），可以将其吸引到专门为得分，生命，存货等事物设计的这一层。",
    "Short for \u0027Rich Site Summary\u0027, and is a standardized system for the distribution of content from an online publisher to Internet users.":"是“丰富网站摘要\u0027Rich Site Summary\u0027”的缩写，是一个用于将内容从在线出版商分发给互联网用户的标准化系统。",
    "Short for \u0027Universal Resource Locator\u0027, and is basically the address of something on the internet.":"“通用资源定位器”的缩写，基本上是互联网上某物的地址。统一资源定位符 (Uniform Resource Locator, URL)",
    "Similar to human languages, programming languages have their own set of rules on how statements can be conveyed, and this set of rules is known as the syntax. While a number of programming languages share many features, functions, and capabilities, they generally differ in syntax. Without the proper use of syntax, one cannot write an executable program, and wrong syntax will lead to errors when compiling.":"与人类语言类似，编程语言在如何传达语句方面也有自己的一套规则，这套规则称为语法。尽管许多编程语言共享许多功能，特性和功能，但是它们通常在语法上有所不同。如果没有正确使用语法，则无法编写可执行程序，并且错误的语法将导致编译时出错。",
    "Sine":"正弦波",
    "Skeletal Animation":"骨骼动画",
    "Skins":"皮肤",
    "Slots":"插槽",
    "Smooth interpolation involves estimating a new value by connecting two adjacent known values with a mathematically generated spline curve . You can then get the interpolated value by checking any point along the line.":"平滑插值包括通过将两个相邻的已知值与数学上生成的样条曲线连接来估计新值。然后，您可以通过检查直线上的任意点来获得内插值。",
    "Social":"社交",
    "Soft Body Particles":"柔体粒子",
    "Sound Effects":"音效",
    "Sound Mixer":"混音器",
    "Sounds":"声音",
    "Source Control":"源码控制",
    "Source Examples":"示例代码",
    "Source code is the fundamental component of a computer program that is required for the program to run.":"源代码是计算机程序运行所必需的基本组件。",
    "Specifier Examples{}*{}":"说明符示例{}*{}",
    "Spline Editor":"样条线编辑器",
    "Sprite Editor Preferences":"精灵编辑器首选项",
    "Sprite Information":"精灵信息",
    "Sprite Instance Variables":"精灵实例变量",
    "Sprite Layers":"精灵图层",
    "Sprite Manipulation":"精灵操作",
    "Sprites":"精灵",
    "Sprites And Tiles":"精灵和 Tiles",
    "Square":"方波",
    "Standard Workflow":"标准工作流程",
    "Start Screen Preferences":"开始屏幕首选项",
    "Static Struct":"静态结构",
    "Static Variables":"静态变量",
    "Stats And Leaderboards":"统计数据和排行榜",
    "Status Value":"状态值",
    "Step Event":"步事件",
    "String":"字符串(String)",
    "String Escape Characters":"字符串转义字符",
    "Strings":"字符串",
    "Strip Images":"条带图像",
    "Struct":"结构(Struct)",
    "Struct Forbidden Variables":"结构禁止的变量",
    "Struct Member":"结构成员",
    "Structs &amp; Constructors":"结构与构造函数",
    "Submission Guidelines":"提交指引",
    "Summary":"总结",
    "Surfaces":"表面",
    "Syntax":"语法",
    "Syntax Errors (Feather Messages)":"语法错误(羽毛信息)",
    "Syntax:":"语法:",
    "System":"系统",
    "TIP":"提示",
    "Tag Type":"标签类型",
    "Tap Event":"点击事件",
    "Target":"目标",
    "Target Platform":"目标平台",
    "Template Info":"模板信息",
    "Texel (or texture element) is the fundamental unit of texture space, much like a pixel is the fundamental element of picture space. Textures are represented by arrays of Texels, just as pictures are represented by arrays of pixels. When texturing a 3D surface (a process known as texture mapping) the renderer maps texels to appropriate pixels in the output picture.":"Texel（或纹理元素）是纹理空间的基本单位，就像像素是图片空间的基本元素一样。纹理由纹素阵列表示，就像图片由像素阵列表示一样。对3D表面进行纹理化（一种称为纹理贴图的过程）时，渲染器将纹理像素映射到输出图片中的适当像素。",
    "Text":"文本",
    "Text Editor Preferences":"文本编辑器首选项",
    "Text Files":"文本文件",
    "Text Rendering (Regular)":"文本呈现(常规)",
    "Text Rendering (SDF Enabled)":"文本呈现(启用 SDF)",
    "Text in Sequences":"序列文本",
    "Texture Groups":"纹理组",
    "Texture Pages":"纹理页",
    "Textures":"纹理",
    "The Animation Curve Library":"动画曲线库",
    "The Asset Browser":"资源浏览器",
    "The Asset Editors":"资源编辑器",
    "The Build Menu":"构建菜单",
    "The Debugger":"调试器",
    "The Device Manager":"设备管理器",
    "The Dope Sheet is the visual representation of the sequence timeline, and where you can add, remove and edit the different asset keys and parameter keys that affect how the different tracks in the sequence will behave over time.":"关键帧清单“摄影表”是序列时间轴的直观表示，您可以在其中添加，删除和编辑不同的资源键和参数键，这些键会影响序列中不同音轨随时间的行为。",
    "The Edit Menu":"编辑菜单",
    "The End User Licence Agreement (EULA) is a legal document that outlines the licence for a product that you are getting.":"最终用户许可协议（EULA）是一份法律文件，概述了您所获得产品的许可。",
    "The File Menu":"文件菜单",
    "The File System":"文件系统",
    "The Font Editor":"字体编辑器",
    "The Game Window":"游戏窗口",
    "The Help Menu":"帮助菜单",
    "The IDE, or Integrated Development Environment, is a software application that provides comprehensive facilities to computer programmers for software development. In this case, the entire frontend of GameMaker Studio 2 is considered the IDE, and includes sections to create graphics, add sounds, and add code to make your games.":"IDE，或集成开发环境，是一个软件应用程序，为计算机程序员提供软件开发的全面设施。在这种情况下，GameMaker Studio 2的整个前端都被认为是 IDE，包括创建图形、添加声音和添加代码以制作游戏的部分。",
    "The Inspector":"检查器",
    "The Layouts Menu":"布局菜单",
    "The Marketplace":"<del>市场(重制中)",
    "The Marketplace Menu":"市场菜单",
    "The Micro Web Server":"微型 Web 服务器",
    "The Nine Slice Struct":"九宫格结构",
    "The Output Window":"输出窗口",
    "The Path Editor":"路径编辑器",
    "The Physics World":"物理世界",
    "The Profiler":"探查器",
    "The Room Manager":"房间管理器",
    "The Sequence Canvas":"序列画布",
    "The Sequence Object Struct":"序列对象结构",
    "The Start Page":"起始页",
    "The Tools Menu":"工具菜单",
    "The Track Panel":"轨道面板",
    "The Windows Menu":"窗口菜单",
    "The acronym \u0027API\u0027 stands for Application Programming Interface, and this refers to sets of rules, routines, and protocols used to build software applications. APIs help in communication with third party programs or services, which can be used to build different software. Companies such as Facebook and Twitter actively use APIs to help developers gain easier access to their services, and in GameMaker Studio 2 you\u0027ll see the API scronym used when talking about extensions - for example, the Google Play Services API or the Amazon Game On API.":"\"API”代表应用程序编程接口(Application Programming Interface)的首字母缩，是指用于构建软件应用程序的规则，例程和协议集。 API帮助与第三方程序或服务进行通信，这些程序或服务可用于构建不同的软件。诸如Facebook和Twitter之类的公司积极使用API\u200B\u200B来帮助开发人员更轻松地访问其服务，在GameMaker Studio 2中，您会看到谈论扩展时使用的API缩写-例如Google Play Services API或Amazon Game On API。",
    "The application surface is a special built-in surface that GameMaker Studio 2 will draw everything to in the Draw Events of a game (a surface is essentially an area of memory reserved for graphics). This surface is then drawn to the display buffer at the end of each game frame, displaying its contents to the player.":"应用程序表面是一种特殊的内置表面，GameMaker Studio 2将在游戏的“绘制事件”中将所有内容绘制到该表面（表面实际上是为图形保留的内存区域）。然后这个表面被绘制到每个游戏帧末尾的显示缓冲区，向玩家显示它的内容。",
    "The architecture of a processor chip (CPU) is a description of its basic components and of its basic operations. Each processor family has its own architecture, like ARM or x64.":"处理器芯片(CPU)的体系结构是对其基本组件和基本操作的描述。每个处理器家族都有自己的架构，比如 ARM 或 x64。",
    "The area of the sequence editor that shows you all the different tracks in a sequence - asset tracks, parameter tracks, track groups and clip mask groups.":"序列编辑器的区域，显示你在一个序列中所有不同的轨道-资源轨道，参数轨道，轨道组和剪切蒙版组。",
    "The backend is the part of a program that is performed in the background and is opaque to the user, usually without the need for any user interaction. For example, the server side of things when doing network programming over the internet, or the data processing that goes on behind the scenes in an RPG game. This is essentially the oppositre of the frontend.":"后端是程序的一部分，该程序在后台执行，并且对用户不透明，通常不需要任何用户交互。例如，在Internet上进行网络编程时的服务器端事物，或RPG游戏中幕后进行的数据处理。这本质上是前端的对立面。",
    "The bit depth refers to the number of bits in each sample of an audio file. Lower bit depth gives poorer quality sound but much smaller file size. Lower bit depths are usually used for small sound effects and patforms where memory may be an issue (like HTML5).":"比特深度是指音频文件的每个样本中的比特数。较低的位深度会产生较差的声音质量，但文件大小会小得多。低位深度通常用于可能会引起内存问题的小型声音效果和样式，例如HTML5。",
    "The cache is a collection of files that are generated by GameMaker once and then stored and re-used over multiple runs of a project. Note that this cache can sometimes become \u0027stale\u0027, meaning it must be cleared to force GameMaker to rebuild it from scratch, ensuring that no stale files corrupt your final game exectable.":"缓存是GameMaker临时生成的文件的集合，然后存储并在项目的多个运行中重复使用。请注意，此缓存有时可能会变成“陈旧的”，这意味着必须清除它以强制GameMaker从头开始重建它，以确保没有陈旧的文件破坏您的最终可执行游戏。",
    "The constants below can only be used&nbsp;with the&nbsp;DualSense gamepad on a PS4 or PS5":"以下常量只能与 PS4 或 PS5 上的 DualSense 游戏手柄一起使用",
    "The current \u0027play\u0027 position within the timeline in the Sequences dope sheet or the Sprite editor frame view. In sequences (and sprites), this will move as the animation is previewed, and you can place it on specific frames to see and edit the keys and keyframes at that position.":"序列文件或精灵编辑器帧视图中时间轴内的当前“播放”位置。在序列(和精灵)中，这将随着动画预览而移动，你可以将其放置在特定的帧上以查看和编辑该位置的键和关键帧。",
    "The deadzone is the distance you have to move an analog stick before the game recognizes it\u0027s being moved. A low deadzone will make any slight movement of the analog stick move your player or aim or whatever. A high deadzone value means that the analog stick needs a much greater movement before the game will detect it and move whatever is being controlled.":"盲区是指在游戏识别到你移动模拟杆之前你必须移动的距离。一个低盲区会使任何模拟杆的轻微移动移动你的玩家或目标或任何东西。高盲区值意味着模拟棒需要一个更大的移动，在游戏将检测它和移动任何被控制。",
    "The display buffer is the \u0027canvas\u0027 where everything is finally drawn. Some events target this directly (like the Pre Draw event), while others will first draw to the application surface and then draw that to the display buffer.":"显示缓冲区是最终绘制所有内容的“画布”。一些事件直接针对此事件（例如Pre Draw事件），而另一些事件将首先绘制到应用程序表面，然后将其绘制到显示缓冲区。",
    "The frontend is the part of a program that is \u0027front facing\u0027, ie: the part that the end user interacts with. For example, in GameMaker Studio 2 the interface where you do the programming and add assets, etc... is the frontend of the program, as it is where you interact with the program and input values and files and other things. This is essentially the oppositre of the backend.":"前端是程序的面向用户的部分，即：最终用户与之交互的部分。例如，在GameMaker Studio 2中，您可以在其中进行编程和添加资源等的界面是程序的前端，因为它是您与程序进行交互并输入值和文件等内容的界面。这本质上是后端的对立面。",
    "The garbage collector is an automated tool that is part of the game code and is used to remove certain things (like arrays and structs) from memory when they are no longer referenced in your code, without the need for you to explicitly remove them.":"垃圾回收是游戏代码中的一部分，是一种自动化工具，用于在代码中不再引用某些东西（如数组和结构）时从内存中删除它们，而无需您明确删除它们。",
    "The runtime in GameMaker is the collection of compiler assets that is required by the program to create a final executable package for a given target platform. These are installed seperately from the IDE, and can be changed and updated at any time.":"GameMaker Studio 2中的运行时是程序为给定目标平台创建最终可执行包所需的编译器资源的集合。它们是从IDE中独立安装的，并且可以在任何时候进行更改和更新。",
    "The tile map is the name given to a collection of tiles taken from a tile set and used to create levels in a game.":"图块地图是从图块图块集中获取的图块集合的名称，用于在游戏中创建关卡。",
    "The&nbsp;Keyframe Struct":"关键帧结构",
    "The&nbsp;Keyframe&nbsp;Data Struct":"关键帧数据结构",
    "The&nbsp;Sequence Instance Struct":"序列实例结构",
    "The&nbsp;Start Page":"起始页",
    "The&nbsp;Track Struct":"轨道结构",
    "This is a special compiler for creating executable packages that use native code instead of interepreted code and a runner (wich is what the GameMaker VM compile uses). Compiled code is faster to run, but takes more time to compile the executable.":"这是一个特殊的编译器，用于创建使用本机代码而不是解释性代码和运行程序的可执行程序包（由GameMaker VM编译使用）。编译后的代码运行速度更快，但是编译可执行文件需要更多时间。",
    "This is a technique used to smooth otherwise jagged lines or textures by blending the color of an edge with the color of the pixels around it. The result should be a more pleasing and realistic appearance, depending on the intensity of the effect.":"这是一种通过将边缘的颜色与周围像素的颜色混合来平滑锯齿状线条或纹理的技术。根据效果的强度，结果应该是更令人愉悦和逼真的外观。",
    "This is a type of non-linear interpolation based on mathematical splines. It is used to estimate a new value by connecting two adjacent known values using \u0027smooth\u0027 curves (splines), and a new value can be derived from any point along the line.":"这是一种基于数学样条的非线性插值。它通过使用“平滑”曲线（样条线）连接两个相邻的已知值来估计新值，并且可以从沿线的任何点导出新值。(catmull-rom interpolation卡特莫尔罗插值)",
    "This is an anacronym for Alpha, Red, Green, Blue, and is used to refer to the colour components specified as a hexadecimal value, eg: #FF53E270, where each set of two digits represents a single component. Breaking down the ARGB example above gives us the following component values: Alpha(FF), Red(53), Green(E2) and Blue(70). ":"这是Alpha，Red，Green，Blue的缩写，用于指代指定为十六进制值的颜色分量，例如：＃FF53E270，其中每两位数字代表一个分量。分解上面的ARGB示例可以得到以下分量值：Alpha（FF），Red（53），Green（E2）和Blue（70）。",
    "This stands for Hue, Saturation and Value and is a way of expressing a colour usually using values from 0 to 255. The hue is the colour hue value, the saturation is amount of the colour to be used, and the value is the brightness of the colour. ":"它代表“色相”，“饱和度”和“明度”，是一种通常使用0到255之间的值表示颜色的方式。色相是色相值，饱和度是要使用的颜色量，而明度是颜色明暗。",
    "Tile Map Layers":"贴图层",
    "Tile Set Editor Preferences":"图块集编辑器首选项",
    "Tile Sets":"图块集",
    "Tilesets":"图块",
    "Time Source Expiry Types":"时间源过期类型",
    "Time Source States":"时间源状态",
    "Time Source Units":"时间源单位",
    "Time Sources":"时间源",
    "Timeline Preferences":"时间线首选项",
    "Timelines":"时间线",
    "Triangle":"三角波",
    "Type":"类型",
    "Type Tables":"类型表",
    "Typographic error.":"印刷错误。",
    "UWP And Xbox Live":"<del>UWP 和 Xbox Live</del> (过时)",
    "Unavailable return key":"无法使用返回键",
    "Undefined":"未定义(Undefined)",
    "Unicode Escape Sequence":"Unicode 转义序列",
    "Updating Guide":"更新指引",
    "Users And Accounts":"用户及账户",
    "Using Animation Curves":"使用动画曲线",
    "Using The Dope Sheet":"使用关键帧表",
    "V-sync or vertical synchronisation is used to synchronise your game update speed to the refresh rate of the monitor. This can reduce screen tearing - which is when your screen displays portions of multiple frames in one go - but can also cause performance issues or problems on monitors with high refresh-rates.":"垂直同步用于将游戏更新速度与监视器的刷新率同步。这样可以减少屏幕撕裂（即屏幕一次显示多帧的一部分）的情况，但也会导致性能问题或刷新率较高的显示器出现问题。",
    "VRAM is the amount of memory available for video, ie: the memory space that can store textures and images.":"VRAM是视频可用的内存量，即：可以存储纹理和图像的内存空间。",
    "Value":"值",
    "Variable":"变量",
    "Variable Functions":"变量函数",
    "Variable Name":"变量名",
    "Variables And Variable Scope":"变量和变量范围",
    "Vectors":"向量",
    "Version &amp; Account Details":"版本和账户详细信息",
    "Version Name{} (version Number)":"版本名称{}(版本号)",
    "Video Playback":"视频播放",
    "Virtual Key Constant (vk_*)":"虚拟键常量 (vk_*)",
    "Virtual Key Constant (vk_*) (keyboard_check_direct only)":"虚拟键常量 (vk_*) (仅 keyboard_check_direct)",
    "Virtual Keys And Virtual Keyboards":"虚拟按键和虚拟键盘",
    "Watches":"监视器",
    "Web And HTML5":"Web 和 HTML5",
    "What Is Programming":"什么是编程",
    "What Is Programming?":"什么是编程？",
    "When something is rendered in GameMaker Studio 2, it generally means that it has simply been \u0027drawn to the display buffer\u0027 or \u0027drawn to a surface\u0027. Rendering can also refer to the process of turning some kind of vector source (like a font) into a bitmap image,.":"当一些东西在GameMaker Studio 2中呈现时，通常意味着它只是被“绘制到显示缓冲区”或“绘制到表面”。渲染也可以指将某种矢量源(如字体)转换为位图图像的过程。",
    "Whitespace Characters":"空格字符",
    "Windows Batch File Name":"Windows 批处理文件名",
    "Windows Key Binding":"Windows 键位绑定",
    "Workspace":"工作区",
    "Workspace Preferences":"工作区首选项",
    "Workspaces":"工作空间",
    "YUV Videos":"YUV 视频",
    "YoYo Compiler":"YoYo 编译器",
    "Your Marketplace Library":"你的市场库",
    "audio_bus_main":"",
    "compatibility scripts":"兼容性脚本",
    "description":"描述",
    "errorString / resultString":"错误字符串 / 结果字符串",
    "health":"<del>health</del>",
    "iOS / tvOS Extensions":"iOS / tvOS 扩展",
    "if / else and Conditional Operators":"If/else 和条件运算符",
    "json_decode":"json_decode (弃用)",
    "json_encode":"json_encode (弃用)",
    "lives":"<del>lives</del>",
    "macOS Key Binding":"macOS 键位绑定",
    "macOS/Linux Shell Script Name":"MacOS/Linux Shell 脚本名称",
    "physics_joint_wheel_create":"physics_joint_wheel_create",
    "score":"<del>score</del>",
    "value":"值",
    "{} Platform-Specific Notes":"{}平台专用注释",
    "{}Additional IDE Tools{}{}Additional IDE Tools{}":"{}其他 IDE 工具{}",
    "{}Additional Information{}{}Additional Information{}":"{}补充信息{}{}补充信息{}",
    "{}Asset Editors{}{}Asset Editors{}":"{}资源编辑{}{}资源编辑{}",
    "{}Example 1: Custom String{}":"{}示例1：自定义字符串{}",
    "{}Example:{}":"{}示例:{}",
    "{}Feather{} only":"{}羽毛{}专用",
    "{}GameMaker Language{}{}GameMaker Language{}":"{}GameMaker语言{}{}GameMaker语言{}",
    "{}IDE Navigation{}{}IDE Navigation{}":"{}IDE导航{}{}IDE导航{}",
    "{}IDE Preferences &amp; Features{}{}IDE Preferences &amp; Features{}":"{} IDE 首选项和特性{}{} IDE 首选项和特性{}",
    "{}Introduction to {}GameMaker{}{}{}Introduction to {}GameMaker{}{}":"{}{}GameMaker{}的介绍{}{}{}GameMaker{}的介绍{}",
    "{}Quick Start Guide{}{}Quick Start Guide{}":"{}快速入门指南{}{}快速入门指南{}",
    "{}Returns:{}":"{}返回:{}",
    "{}Setting Up And Version Information{}{}Setting Up And Version Information{}":"{}设置和版本信息{}{}设置和版本信息{}",
    "{}Syntax:{}":"{}语法:{}",
    "{}Texture Group Status Constant{}":"{}纹理组状态常量{}",
    "{}Video Format Constant{}":"{}视频格式常量{}",
    "{}Video Status Constant{}":"{}视频状态常量{}",
    "{}{}Blend Mode Factor Constant{}{}":"{}{}混合模式因子常量{}{}",
    "{}{}Device Type Constant{}{}":"{}{}设备类型常量{}{}",
    "{}{}Example:{}{}":"{}{}示例:{}{}",
    "{}{}Mouse Button Constant{}{}":"{}{}鼠标按钮常量{}{}"
}
	var json={
    "/// @description Your text here":"/// @description 描述文本放这",
    "And now in your Event Editor you\u0027ll see this:":"现在在你的事件编辑器中，你会看到这个：",
    "Asynchronous Events List":"异步事件列表",
    "At this point, you may be asked to choose between&nbsp;{}GML Visual{}&nbsp;and&nbsp;{}GML Code{}. See&nbsp;{}GameMaker Language{} for more information.":"在这一点上，你可能会被要求在&nbsp;{}GML Visual{}&nbsp;和&nbsp;{}GML Code{}之间选择。请参阅&nbsp;{}GameMaker语言{}了解更多信息。",
    "Event Order":"事件顺序",
    "Finally we have another section to the mouse events which is called the {}Global Mouse{}. In this sub-menu you will find a selection of events that are for recording mouse events in instances even when the mouse is not over them or even near them. These are events that are generated for {}all {}instances and if there are actions or code defined for the specified event then it will be run, regardless of the position of the mouse within the game room.":"最后，我们还有一个鼠标事件的部分，叫做{}全局鼠标{}。在这个子菜单中，你会发现有一些事件是用来记录实例中的鼠标事件的，即使鼠标不在它们上面，甚至不在它们附近。这些事件是为{}所有{}实例生成的，如果有为指定事件定义的动作或代码，那么它将被运行，无论鼠标在游戏中的位置如何。",
    "Finally, it should be noted that all collisions will be calculated once per game step before the collision event is triggered, such that when the collision event runs, all collisions will have been calculated already and pre-assigned. This means that if you create an instance in this event and then try to check for a collision with it, the collision wont be detected or resolved until the next {}iteration{} of the game loop.":"最后，应该注意的是，在碰撞事件被触发之前，所有的碰撞将在每个游戏步骤中被计算一次，这样，当碰撞事件运行时，所有的碰撞都已经被计算并预先分配了。这意味着，如果你在这个事件中创建了一个实例，然后试图用它来检查碰撞，那么在游戏循环的下一次{}迭代{}之前，碰撞将不会被检测到或解决。",
    "For&nbsp;{}GML Visual{} users, adding a comment requires the use of the&nbsp;{}Execute Code{}&nbsp;action, which should be placed at the very top of the actions for the event, before everything else. When you add this action, you then give it the same line of code that is shown above to name the event, e.g.:":"对于&nbsp;{}GML Visual{}用户来说，添加注释需要使用&nbsp;{}Execute Code{}&nbsp;动作，这个动作应该放在事件的动作的最上面，在所有其他动作之前。当你添加这个动作时，你再给它加上上面显示的那行代码，以命名该事件，例如。",
    "If you have {}Physics {}on, then the collision will be based on the type of {}collision shape{} ({}Fixture{}) that you have defined for the object in its physics properties, as will its reaction to the collision. This means you may not need any code to deal with the collision, but this event will still {}need to have at least a comment in it {}for the collisions to be detected.":"如果{}物理{}是启用的，那么碰撞将基于你在物体的物理属性中为其定义的{}碰撞形状{}（{}Fixture{}）的类型，以及它对碰撞的反应。这意味着你可能不需要任何代码来处理碰撞，但这个事件仍然{}需要至少有一个注释在里面{}，以便检测碰撞。",
    "In beta versions, this list also contains the {}Rollback Start{} and {}Rollback Event{} events.":"在测试版中，此列表还包含{}回滚开始{}和{}回滚事件{}事件。",
    "It is worth noting that an alarm with no actions or code in it in it will {}not {}count down. However, even with just a comment and no code or actions, then the alarm will continue to count down and can be set and checked as you would normally.":"值得注意的是，一个没有任何动作或代码的计时器将{}不会{}倒数。但是，如果 只有注释，没有代码或动作，那么计时器也会继续倒计时，可以像平时一样进行设置和检查。",
    "It should be noted that keyboard events are actually triggered in all active instances in a room whenever a key is used, but only those that have an event defined for that particular key will respond and you can create multiple keyboard events in any object and the instances of that object will respond to all of them while the game is running.":"应该注意的是，每当使用一个键时，键盘事件实际上会在房间里的所有活动实例中被触发，但只有那些为该特定键定义了事件的实例才会做出反应，你可以在任何对象中创建多个键盘事件，在游戏运行时，该对象的实例会对所有事件做出反应。",
    "Let\u0027s look at a typical object setup with events and code:":"让我们看看一个有事件和代码的典型对象设置。",
    "Letting the player control the different aspects of your game is very important, and to that end {}GameMaker{} provides you with a very comprehensive list of keyboard events that can be used in any of the three main keyboard categories. For the general Keyboard category, it is triggered continuously&nbsp;every step&nbsp;for as long as the selected key is pressed down, while the Press and Release category events will only be triggered once when the key is initially pressed down or released.":"让玩家控制你游戏的不同方面是非常重要的，为此{}GameMaker{}为你提供了一个非常全面的键盘事件列表，可以在三个主要的键盘类别中的任何一个使用。对于一般的键盘类别，只要选定的键被按下，它就会被连续触发&nbsp;每一步&nbsp;，而按压和释放类别的事件只会在最初按压或释放键时被触发一次。",
    "Note that the above is simply an overview of how the Asynchronous Event works, but for full details on all the available sub-events, please see the following section:":"请注意，以上只是对异步事件如何工作的概述，但关于所有可用的子事件的完整细节，请参见下面的章节。",
    "Note that the above is simply an overview of how the Draw Events work, but for full details on all the available sub-events, please see the following section:":"请注意，以上只是对Draw Events工作方式的概述，但关于所有可用的子活动的全部细节，请参见以下章节。",
    "Object Events":"对象事件",
    "Obviously when making a game, it is very important that you know when two (or more) instances of an object have collided, and for that we have the {}Collision Event{}. This is an event that you place in an object and then specify against which other object you should be checking for collisions.":"显然，在制作游戏时，你必须知道一个物体的两个（或多个）实例发生了碰撞，为此我们有{}碰撞事件{}。这是一个你放置在一个对象中的事件，然后指定你应该针对哪个其他对象来检查碰撞。",
    "Once the alarm has reached 0 and run the code, it will then count down to -1, where it will remain until set again (meaning you can check the value of an alarm to see if it is greater than -1, which will tell you if it\u0027s running or not). So, say you set {}alarm[0]{} in the create event of the object to 30, this means that {}GameMaker{} will count down 30 game steps before it runs the actions or code that are placed in the {}alarm[0]{} event. Note that setting an alarm to 0 will {}not {}run the alarm code, as the event is triggered, but the alarm is set to -1 immediately, so the code is skipped. If you need an alarm to run the very next step, then you should set it to 1.":"一旦计时器达到0并运行代码，它就会倒数到-1，在那里它将一直保持，直到再次设置（意味着你可以检查计时器的值是否大于-1，这将告诉你它是否正在运行）。所以，假设你在对象的创建事件中把{}alarm[0]{}设置为30，这意味着{}GameMaker{}将在运行放在{}alarm[0]{}事件中的动作或代码之前倒数30步。注意，将计时器设置为0将{}不会{}运行计时器代码，因为虽然事件被触发了，但计时器被立即设置为-1，所以代码被跳过。如果你需要一个计时器来运行下一个步骤，那么你应该把它设置为1。",
    "Once you have selected your event, the event\u0027s editor window&nbsp;will be chained to it and open up on the right.":"一旦你选择了你的事件，事件的编辑窗口&nbsp;将被链到它，并在右边打开。",
    "Please note that on mobile or touch-screen devices the left mouse button {}&nbsp;can also be used to check for a finger tab on a touch screen, and the right mouse button {}&nbsp;is triggered by a double tap on the screen (this behaviour can be changed using code).":"请注意，在移动或触摸屏设备上，鼠标左键{}&nbsp;也可以用来检查触摸屏上的手指，而鼠标右键{}&nbsp;是由双击屏幕触发的（这个行为可以用代码改变）。",
    "Remember that you can modify anything you set up in the Create Event from the {}Instance Creation Code{}&nbsp;in the Room Editor, as that is run directly after the create event for the instance and can be used to create {}Instance Variables{}&nbsp;or to override any variables added as Object Variables or in the actual Create Event.":"记住，你可以从房间编辑器中的{}实例创建代码{}&nbsp;中修改你在创建事件中设置的任何内容，因为那是在实例的创建事件之后直接运行的，可以用来创建{}实例变量{}&nbsp;或覆盖作为对象变量或在实际创建事件中添加的任何变量。",
    "So, say you want to add an image file to {}GameMaker{}. Well, you would code this in another event (maybe the Create Event) of an object and then have that object draw a loading bar while waiting (for example), polling the appropriate asynchronous event until the {}callback{} that tells {}GameMaker{} the file has loaded. You can then use the data returned in this event to do other things, like change room, or purchase an item.":"所以，说你想添加一个图像文件到{}GameMaker{}。那么，你可以在一个对象的另一个事件（也许是创建事件）中编码，然后让这个对象在等待时画一个加载条（例如），轮询适当的异步事件，直到告诉{4}GameMaker{5}文件已加载的{}回调{}。然后你可以使用这个事件中返回的数据来做其他事情，比如换房间，或者购买物品。",
    "So, what are object {}events{}? Basically, these are discreet moments in the game loop where things are made to happen based on what you have programmed for them. {}GameMaker{} works with cycles of these events - from the moment a room is started to the moment it is finished there is a game loop running where every {}step {}a series of events are run or checked, and you can choose to place code or GML Visual actions in your objects that respond to these events (a step is a moment in game time, governed by the room speed setting, and can also be called a {}frame{}) .":"那么，什么是对象{}事件{}？基本上，这些都是游戏循环中的独立时刻，在这些时刻，事情会根据你的编程而发生。{}GameMaker{}在这些事件的循环中工作--从一个房间开始到结束，有一个游戏循环在运行，每{}步{}都有一系列的事件被运行或检查，你可以选择在你的对象中放置代码或GML Visual动作来响应这些事件（一个步骤是游戏时间的一个时刻，由房间速度设置决定，也可以称为{}帧{}）。",
    "So, you could have something like this in - for example - an {}Alarm {}event:":"因此，你可以在--例如--一个{}计时器{}事件中拥有这样的东西。",
    "The Async Events":"异步事件",
    "The Draw Event":"绘制事件",
    "The Draw Events":"绘制事件",
    "The Gesture Event":"手势事件",
    "The Gesture Events":"手势事件",
    "The Mouse category is separated into a series of events that can be selected to give you a more precise control over what is happening in your game. Here you can see exactly what these events are:":"鼠标类别被分成一系列的事件，可以选择这些事件来给你一个更精确的控制你的游戏中发生的事情。在这里你可以看到这些事件到底是什么。",
    "The Other Events":"其他事件",
    "The alarm category is split into 12 events, one for each of the possible alarms that can be set in an instance. So, when you click on the {}Add Alarm {}category you are presented with this window:":"计时器类别被分成12个事件，每个事件对应一个实例中可能设置的计时器。因此，当你点击{}添加计时器{}类别时，你会看到这个窗口。",
    "The full list of events is given below:":"事件的完整列表如下:",
    "The gesture events&nbsp;detect&nbsp;the following:":"手势事件&nbsp;检测&nbsp;如下。",
    "The mouse enter and leave events are also similar to the button events in that they too rely on the mask of the instance to work, but this time they are triggered when the mouse first \"enters\" (touches) the instance or when the mouse \"leaves\" (stops touching) the instance. These events are not continuous however, and are triggered only once for each time the mouse enters or leaves the object - so they are an ideal method for creating, for example, buttons that need to change as the mouse hovers over them before going back to normal when the mouse is removed.":"鼠标进入和离开事件也与按钮事件类似，它们也依赖于实例的掩码来工作，但这次它们是在鼠标第一次 \"进入\"（触摸）实例或鼠标 \"离开\"（停止触摸）实例时触发的。然而，这些事件不是连续的，每当鼠标进入或离开对象时只被触发一次--所以它们是一种理想的方法，例如，创建需要在鼠标悬停时改变的按钮，当鼠标移开时又恢复正常。",
    "The standard draw events draw {}before {}the {}Draw GUI {}events and {}between {}the {}Pre Draw {}and {}Post Draw {}events, meaning that everything that is drawn in this event is drawn beneath that of the {}Draw GUI {}event, regardless of the layer (ie: anything drawn in the Draw GUI event will always be drawn over anything drawn in the normal draw event, regardless of layer order).":"标准的绘制事件是在{}绘制GUI{}事件{0}之前{1}和{}Pre Draw{}和{}Post Draw{}事件{4}之间{5}，这意味着在这个事件中绘制的所有东西都在{}绘制GUI{}事件的下面，而不考虑图层（即：在绘制GUI事件中绘制的东西总是在普通绘制事件中绘制的东西上面，而不考虑图层顺序）。",
    "The step event is actually comprised of three sub events that are outlined below:":"步骤事件实际上由三个子事件组成，概述如下。",
    "The {}Press {}and {}Release {}events for the keyboard are almost exactly the same as the regular keyboard event, except that instead of being triggered continuously, they are triggered once only. When the keyboard first registers that a key has been pressed it will generate a {}Keyboard Pressed{} event (as well as a regular Keyboard event), and the first time after that where a key is no longer being detected as pressed it will trigger a single {}Keyboard Release{} event.":"键盘的{}Press {}和{}Release {}事件与常规键盘事件几乎完全相同，只是它们不是连续触发，而是只触发一次。当键盘第一次记录到一个键被按下时，它将产生一个{}键盘按下{}事件（以及一个常规的键盘事件），之后第一次不再检测到一个键被按下时，它将触发一个{}键盘释放{}事件。",
    "There are a number of special events for use when making games with {}GameMaker{} and they are mostly grouped together under the Other event and can be selected from the pop up menu of sub events that comes up when you select this. Here is an image of all these other events:":"在用{}GameMaker{}制作游戏时，有一些特殊的事件，它们大多被分组在其他事件下，可以从你选择这个时出现的子事件的弹出菜单中选择。下面是所有这些其他事件的图片。",
    "This can be very useful as it allows you to set things in motion at precise moments, and you can even have them repeat as there is nothing to stop you setting an alarm in its own event. Imagine you have a monster and you want it to turn right every three seconds... well, you would set an alarm in its create event to the room speed * 3 (if the room speed is 30, that\u0027s 30 steps per second, so multiply that by 3 and you get 3 seconds!) and then in the alarm event you would have the code or action to set its direction, as well as the action (or code) to set its alarm to room speed * 3&nbsp;again. In this way, you can set up simple game loops where things only happen at specific intervals.":"这可能非常有用，因为它允许你用精确的时刻设置事物的运动，你甚至可以让它们重复，因为没有什么可以阻止你在计时器的事件中设置一个计时器。想象一下，你有一个怪物，你想让它每隔三秒钟向右转......好吧，你可以在它的创建事件中设置一个计时器，以room_speed*3（如果房间速度是30，那就是每秒30步，所以乘以3，你就得到了3秒！）然后在计时器事件中，你会有代码或动作来设置它的方向，以及动作（或代码）来设置其计时器为房间速度*3&nbsp；再者。通过这种方式，你可以设置简单的游戏循环，事情只在特定的时间间隔发生。",
    "This event category is special in that the events it contains are not triggered by default by {}GameMaker{}, but rather by the end of some other action, like the loading of a file, or the reply from a web server. The category is split into the following events:":"这个事件类别很特别，因为它所包含的事件不是由{}GameMaker{}默认触发的，而是由其他一些动作的结束而触发的，比如加载一个文件，或者来自网络服务器的回复。该类别被分割成以下事件。",
    "This event category is the one that governs what you see on the screen when you run your game, and is split into various discreet events:":"这个事件类别是支配你在运行游戏时在屏幕上看到的东西，它被分成各种不相关的事件。",
    "This event happens when an instance of the object is first created, and is the very first thing that happens within an instance placed in the room through the Room Editor when a room is entered. This means that this event is the ideal place to initialize {}variable{}{}s{}, start {}Timelines{}, set {}Paths{}&nbsp;etc... and do anything else that generally only needs to be done once or only when an instance is first created in the room. If your object has any {}Object Variables{} or {}Instance Variables{} added in either the Object Editor or the Room Editor, then these variables will be initialised first and then the {}Create Event{} will be run.":"这个事件发生在对象的一个实例被首次创建时，也是通过房间编辑器放置在房间里的实例在进入房间时发生的第一件事。这意味着该事件是初始化{}变量{}{}{}、启动{}时间线{}、设置{}路径{}&nbsp;等......以及其他任何通常只需要做一次或只在房间中首次创建实例时做的事情的理想场所。如果你的对象在对象编辑器或房间编辑器中添加了任何{}对象变量{}或{}实例变量{}，那么这些变量将首先被初始化，然后{}创建事件{}将被运行。",
    "This event is the event to be executed when an instance is destroyed. It is often overlooked when adding behaviours to objects, but it can be very useful, for example by creating explosion or particle effects when an enemy is killed, or for re-spawning a new instance of the object in another part of the room, or even for adding points onto a score.":"这个事件是一个实例被销毁时要执行的事件。在给对象添加行为时，它经常被忽略，但它可以非常有用，例如，当敌人被杀死时，它可以产生爆炸或粒子效果，或者在房间的另一个地方重新生成对象的新实例，甚至可以在分数上加分。",
    "This event is the one that will be triggered by the user touching the screen (on mobile) or clicking and moving the mouse (on all other platforms). These events are similar to the mouse events, in that you have regular versions and&nbsp;{}global{}&nbsp;versions. The regular versions of these events will only be triggered when the touches occur on an instance that has a sprite (or a mask) and the touches occur within its {}bounding box{}. The global versions of these events, however, will be triggered by the user touching {}anywhere {}on the screen.":"这个事件是由用户触摸屏幕（在手机上）或点击并移动鼠标（在所有其他平台上）而触发的。这些事件类似于鼠标事件，你有常规版本和{}全局{}&nbsp;版本。这些事件的常规版本只有在触摸发生在有精灵（或掩码）的实例上，并且触摸发生在其{}边界框{}内时才会被触发。然而，这些事件的全局版本将由用户在屏幕上的任何地方触摸{}而触发。",
    "What can the step event be used for? Well, it can be used for actions or code that needs to be executed continuously. For example, if one object should follow another, here you can adapt the direction of motion towards the object we are following to keep it moving smoothly behind. Be careful with this event though, and don\u0027t put many complicated actions in the step event of objects, especially if you are planning on having lots of instances of the object in your game room, as this might slow the game down. Many things can be placed into alarms, or set to trigger using some of the {}Other {}events, rather than happening all the time.":"步骤事件可以用来做什么？嗯，它可以用于需要连续执行的动作或代码。例如，如果一个物体应该跟随另一个物体，在这里你可以对我们所跟随的物体的运动方向进行调整，以保持它在后面平稳地移动。不过要小心处理这个事件，不要在物体的步骤事件中放入很多复杂的动作，尤其是当你打算在游戏室里有很多物体的实例时，因为这可能会使游戏变慢。许多事情都可以放入计时器，或者使用一些{}其他{}事件设置为触发，而不是一直发生。",
    "When removing events, you can use {}&nbsp;+ {}&nbsp;to select multiple events and then delete them all together.Each object you create has its own discreet list of events which are added into it from the {}Object Editor{}. These events fall into two categories:":"当删除事件时，你可以使用{}&nbsp;+ {}&nbsp;来选择多个事件，然后将它们全部删除。你创建的每个对象都有自己的事件列表，这些事件由{}对象编辑器{}添加到其中。这些事件可分为两类。",
    "When you add any keyboard event to an object, you will be presented with the keyboard sub event menu where you can specify the key you are to be checking for:":"当你向一个对象添加任何键盘事件时，你会看到键盘子事件菜单，你可以指定你要检查的键:",
    "When you don\u0027t have physics turned on, these collisions will be calculated based on the mask of the two objects (the mask is defined within the sprite properties, or can be assigned independently in the object properties) and whether they overlap or not. Note, that if one or the other instances in the collision does not have a mask assigned (or the sprite mask is set to nothing), {}even if it is drawing something{} no collisions will be detected.":"当你没有开启物理时，这些碰撞将根据两个物体的遮罩（遮罩在精灵属性中定义，或者可以在物体属性中独立分配）以及它们是否重叠来计算。请注意，如果碰撞中的一个或另一个实例没有分配掩码（或者精灵掩码被设置为无），{}即使它正在绘制什么东西{}也不会被检测到碰撞。",
    "You can click the right mouse button {}&nbsp;on any event that has been added to an object to get the following menu options:":"你可以在任何已添加到对象的事件上点击鼠标右键{}&nbsp;，以获得以下菜单选项。",
    "You can now edit the GML code (or blocks) to give your object a specific behaviour or reaction to that event.":"现在你可以编辑GML代码（或代码块），给你的对象一个特定的行为或对该事件的反应。",
    "You should also note that you can name events, or at least give them a short descriptive text that will be shown beside them in the Event Editor. To do this, simply add the following into the very first line of the code editor for the event (when using {}GML Code{}):":"你还应该注意，你可以给事件命名，或者至少给它们一个简短的描述性文本，在事件编辑器中显示在它们旁边。要做到这一点，只需在事件的代码编辑器的第一行添加以下内容（当使用{}GML代码{}时）。",
    "those that are \"triggered\" by a game event, like the instance reaching the room edge or a keyboard or mouse press.":"那些由游戏事件 \"触发 \"的事件，如实例到达房间边缘或按下键盘或鼠标。",
    "those that run every single game step":"那些运行每帧都运行的",
    "{}&nbsp;{}drags {}- when a user touches/clicks and maintains it then moves their finger/cursor":"{}&nbsp;{}拖动 {}- 当用户触摸/点击并保持，然后移动他们的手指/光标时",
    "{}&nbsp;{}flicks {}- when the user moves and releases a touch/click in one movement":"{}&nbsp;{}滑动{}- 当用户在一个动作中移动和释放触摸/点击时",
    "{}&nbsp;{}pinches {}- when the user has two fingers on the screen and then moves them together/apart":"{}&nbsp;{}夹开{}--当用户在屏幕上有两个手指，然后一起/分开移动它们时",
    "{}&nbsp;{}rotates {}- when the user has two fingers on the screen and then rotates them around a point":"{}&nbsp;{}旋转{}--当用户在屏幕上有两个手指，然后围绕一个点旋转时。",
    "{}&nbsp;{}taps {}- when a user clicks/touches and releases quickly":"{}&nbsp;{}点击 {}- 当用户点击/触摸并迅速释放时",
    "{}/// @description This is the AI Fight alarm{}":"{}/// @description 这个是AI战斗用的计时器{}",
    "{}Add Event{} - Add a new event from the event list.":"{}添加事件{} - 从事件列表中添加一个新事件。",
    "{}Alarm{}{}Alarm{}":"{}计时器{}{}计时器{}",
    "{}As you can see in our example object there are a number of events listed that it should respond to, but initially when you create an object this list is empty and you must decide which events you need and what instances of that object should do when those events are triggered. To add events into the object, you press the {}Add Event{} button found at the bottom of the events list which will bring up the following window:":"{}正如你所看到的，在我们的例子对象中，列出了一些它应该响应的事件，但最初当你创建一个对象时，这个列表是空的，你必须决定你需要哪些事件，以及当这些事件被触发时该对象的实例应该做什么。要将事件添加到对象中，你可以按下事件列表底部的{}添加事件{}按钮，这将带来以下窗口。",
    "{}As you can see, the draw event category has multiple different event types. {}Draw Begin{}, {}Draw {}and {}Draw End{} are the \"standard\" draw events which you will probably use most. By default the main Draw event is always called for every instance, regardless of whether it has a sprite or not, although if you flag the instance as invisible, the event will not be triggered (so keep this in mind if you have any game logic in the draw event of an invisible object, as it won\u0027t run). The main draw event is also where {}GameMaker{} default draws the instance sprite when there is no code nor actions in the event (ie: you haven\u0027t added it into the event list for the object). Default drawing uses the sprite associated with the instance and will draw that with any transforms set in code or actions applied.":"{}正如你所看到的，绘制事件类别有多种不同的事件类型。{}Draw Begin{}、{}Draw {}和{}Draw End{}是 \"标准 \"的绘制事件，你可能最常使用。默认情况下，每一个实例都会被调用主绘制事件，不管它是否有精灵，不过如果你将实例标记为不可见，该事件将不会被触发（所以如果你在不可见对象的绘制事件中设置了任何游戏逻辑，请记住这一点，因为它不会运行）。主绘制事件也是{}GameMaker{}默认绘制实例精灵的地方，当事件中没有代码或动作时（即：你没有把它添加到对象的事件列表中）。默认绘制使用与实例相关联的精灵，并将在代码中设置的任何转换或应用的动作中绘制。",
    "{}Asynchronous{}{}Asynchronous{}":"{}异步{}{}异步{}",
    "{}Change Event{} - Change the event. This will prompt you to choose another event category and once selected the contents of the current event will be changed to the new event (removing the original event in the process).":"{}更改事件{} - 更改事件。这将提示您选择另一个事件类别，一旦选定，当前事件的内容将被改变为新的事件（在此过程中删除原事件）。",
    "{}Clean Up{}{}Clean Up{}":"{}清理{}{}清理{}",
    "{}Collision{}{}Collision{}":"{}碰撞{}{}碰撞{}",
    "{}Convert To GML Visual / Code{} - Object events will be created using the method chosen when you created the project, either using GML Code or GML Visual actions. With this option you can convert from one to the other, regardless of the project type.":"{}转换为 GML 可视化 / 代码 {}- 对象事件将使用您在创建项目时选择的方法创建，使用 GML 代码或 GML 可视化操作。使用此选项，您可以从一个转换为另一个，而不考虑项目类型。",
    "{}Convert To GML Visual / Code{} - Object events will be created using the method chosen when you created the project, either using code or using GML Visual actions. With this option you can convert from one to the other, regardless of the project type.":"{}Convert To GML Visual / Code{} - 对象事件将使用你创建项目时选择的方法创建，可以使用代码或使用GML Visual动作。有了这个选项，你可以从一个转换到另一个，不管项目类型如何。",
    "{}Create{}{}Create{}":"{}创建{}{}创建{}",
    "{}Cut {}/ {}Copy {}/ {}Paste Events{} - Cut, copy or paste the selected event. You can use the standard keyboard shortcuts too: {}&nbsp;/&nbsp;{} + {}X{}, {}&nbsp;/&nbsp;{}&nbsp;+ {}C{}, and {}&nbsp;/&nbsp;{}&nbsp;+ {}V{}.":"{}剪切{}/ {}复制{}/ {}粘贴事件{} - 剪切、复制或粘贴所选事件。你也可以使用标准的键盘快捷键：{}&nbsp;/&nbsp;{}+ {}X{}, &nbsp，{}&nbsp;/&nbsp;{}&nbsp;+{}C{}，以及{}&nbsp;/&nbsp;{}&nbsp;+{}V{}。",
    "{}Delete Event{} - Delete the event (or events).":"{}删除事件{} - 删除事件（或多个事件）。",
    "{}Destroy{}{}Destroy{}":"{}销毁{}{}销毁{}",
    "{}Draw{}{}Draw{}":"{}绘制{}{}绘制{}",
    "{}Duplicate Event{} - Duplicate the chosen event. This will take the contents of the chosen event and duplicate them in another event that you specify.":"{}重复事件{} - 重复所选事件。这将把所选事件的内容复制到你指定的另一个事件中。",
    "{}For additional information on some of the above events and general event running order, please see the following sections:":"{}关于上述一些活动的其他信息和一般活动的运行顺序，请见以下章节：",
    "{}For more information on each of the events listed in the image above, please see the following section:":"{}关于上面图片中列出的每个事件的更多信息，请参见以下部分。",
    "{}For most things the standard step event will be fine to use, but sometimes you want a bit more control over what code runs and at what time, so for that you are provided with the {}Begin {}and {}End {}step events. All three are checked every step, but their order will never vary even if future updates to the {}GameMaker{} engine change other events, which means that this is the only reliable method of making sure that something always happens before something else.":"{}对于大多数事情来说，使用标准的步骤事件就可以了，但有时你想更多地控制什么代码在什么时间运行，所以我们为你提供了{}Begin {}和{}End {}step事件。这三个事件每一步都会被检查，但它们的顺序永远不会改变，即使将来{}GameMaker{}引擎的更新改变了其他事件，这意味着这是唯一可靠的方法，可以确保某些事情总是发生在其他事情之前。",
    "{}GameMaker{} splits time into {}steps {}with the room speed defining how many of these steps there are supposed to be per second (a step can also be called a {}frame{}). A single step, is basically the loop that runs constantly with all the events being checked and triggered as necessary while the game runs, so as you can imagine, the {}Step Event {}is an event that is checked every single step of the game while the instance exists.":"{}GameMaker{}将时间分成{}步{}，房间的速度定义了每秒应该有多少步（一个步骤也可以称为{}帧{}）。一个步骤，基本上是在游戏运行时不断检查和触发所有事件的循环，所以你可以想象，{}步骤事件{}是一个在实例存在时每一步游戏都要检查的事件。",
    "{}Gestures{}{}Gestures{}":"{}手势{}{}手势{}",
    "{}Here you select the alarm that you wish to create and, once that is done, you will see that it has been added to the event window allowing you to add code to it as normal. But what is an alarm? Well, it is a special event that does nothing unless the alarm has been previously set, and then it will wait until that alarm has counted down to 0 before running the actions or code that you have added into it.":"{}在这里，你选择你想创建的计时器，一旦完成，你会看到它已经被添加到事件窗口，允许你像平常一样向它添加代码。但什么是计时器打响？嗯，它是一个特殊的事件，除非事先设置了计时器，否则它不会做任何事情，它将等待计时器倒计时到0，然后再运行你添加到它的动作或代码。",
    "{}It is designed for you to use to \"clean up\" any dynamic resources that you may have in your game (like surfaces, data structures, etc...) or to perform any task that you need performed {}once {}when the instance is removed from the game in any way.{}":"{}它是为你设计的，用来 \"清理 \"你游戏中的任何动态资源（比如表面、数据结构等），或者执行任何你需要执行的任务，{}一旦{}实例以任何方式从游戏中删除。{}",
    "{}Keyboard Press,{}{}Keyboard Press,{}":"{}键盘按下,{}{}键盘按下,{}",
    "{}Keyboard Release{}{}Keyboard Release{}":"{}键盘松开{}{}键盘松开{}",
    "{}Keyboard,{}{}Keyboard,{}":"{}键盘,{}{}键盘,{}",
    "{}Most of them are fairly obvious, but let\u0027s just go through the sections briefly - at the top we have the arrow keys, followed by the most used modifier keys, then the rest of the keyboard (split into further sub-sections so you can get the exact key required like {}&nbsp;or&nbsp;{}) and finally two very special sub events, {}No Key{} and {}Any Key{}. As their names imply, these are sub events that check for when {}no {}key is pressed or for when {}any {}key is pressed. Please note that the keys on the numeric keypad only produce the corresponding events when {}Number Lock {}is enabled.":"{}它们中的大多数是相当明显的，但让我们简单地浏览一下这些部分--在顶部我们有方向键，其次是最常用的修改键，然后是键盘的其他部分（分成更多的子部分，这样你就可以得到所需的确切键，如{}&nbsp;或&nbsp;{}），最后是两个非常特殊的子事件，{}No Key{}和{}Any Key{}。正如它们的名字所暗示的，这些是检查{}无{}键被按下时或{}任何{}键被按下时的子事件。请注意，数字键盘上的按键只有在{}数字锁{}被启用时才会产生相应的事件。",
    "{}Mouse{}{}Mouse{}":"{}鼠标{}{}鼠标{}",
    "{}NOTE{}&nbsp;Instances in a room are created in a certain {}order{}, and their Create events are also executed as they are created one-by-one. This means that you must be careful when reading variables from other instances in the Create event, as that other instance may not have run its Create event yet!{} {} For example: let\u0027s say {}ObjectA{} is created before {}ObjectB{}, and you have the following code in those objects\u0027 Create events:{} {} {}ObjectA {}Create -&nbsp;{}myValue = objectB.myValue;{}{} {}ObjectB {}Create -&nbsp;{}myValue = 10;{}{} {} ObjectA is created first and its Create event runs, which then crashes the game:{} {} {}{}\"Variable objectB.myValue(100003, -2147483648) not set before reading it.\"{}{}{} {} That\u0027s simply because ObjectB has not even been created yet, so any variables initialised in its Create event do not yet exist. This is why you must take caution when referencing other instances&nbsp;like this in the Create event, including any code run inside {}{}with(){}{} blocks. ":"{}注意{}&nbsp;房间中的实例是按照一定的{}顺序{}创建的，它们的创建事件也是在逐一创建时执行的。这意味着，当你在创建事件中从其他实例中读取变量时，必须小心谨慎，因为其他实例可能还没有运行其创建事件！{} {} 例如：假设{}ObjectA{}在{}ObjectB{}之前被创建，而你在这些对象的创建事件里有以下代码：{} {} {}ObjectA {}Create -&nbsp;{}myValue = objectB.myValue;{}{} {}ObjectB {}Create -&nbsp;{}myValue = 10;{}{} {} ObjectA先被创建，它的创建事件运行，然后游戏崩溃：{} {} {}{}\"Variable objectB.myValue(100003, -2147483648) not set before reading it.\"{}{}{} {} 这只是因为ObjectB还没有被创建，所以在其创建事件中初始化的任何变量还不存在。这就是为什么当你在创建事件中引用其他实例&nbsp;时必须谨慎，包括在{}{}with(){}{}块内运行的任何代码。 ",
    "{}Note that this event will be called {}instantly {}after the event that triggered it, but the instance will not actually be removed from the game {}until the end of the current event{}. For example, if you call {}instance_destroy(){} in the Step Event, then the Destroy Event will be called, then the Clean Up Event, and then {}the rest of the Step Event will finish running{}. This means that any code you have after the call to {}instance_destroy(){} will still be run and be a potential cause for errors if you\u0027ve cleaned up a data structure or some other resource that the code requires, so care must be taken when using this event.{} ":"{}注意，这个事件将在触发它的事件之后{}立即{}被调用，但实例实际上不会被从游戏中移除{}，直到当前事件结束{}。例如，如果你在步骤事件中调用{}instance_destroy(){}，那么Destroy事件将被调用，然后是Clean Up事件，然后{}步骤事件的其余部分将完成运行{}。这意味着你在调用{}instance_destroy(){}之后的任何代码仍然会被运行，如果你已经清理了数据结构或其他一些代码需要的资源，则会成为潜在的错误原因，所以在使用这个事件时必须小心谨慎。{}",
    "{}Open Parent Event{} - Open the inherited event in the parent object.":"{}打开父事件 {}- 在父对象中打开继承的事件。",
    "{}Other{}{}Other{}":"{}其他{}{}其他{}",
    "{}Show Parent Event{} - View the inherited event from the parent in a read-only mode.":"{}显示父事件 {}- 以只读模式查看从父事件继承的事件。",
    "{}Step{}{}Step{}":"{}步{}{}步{}",
    "{}The different events will always contain a DS Map called the \"{}event_data{}\" map, which will contain a number of key/value pairs with data on the touch/click position and movement. For full details on all the available sub-events and how they work, please see the following section:":"{}不同的事件总是包含一个名为\"{}event_data{}\"的DS地图，它将包含一些带有触摸/点击位置和移动数据的键/值对。关于所有可用的子事件以及它们如何工作的全部细节，请参见以下章节。",
    "{}The left {}, right {}&nbsp;and middle {}&nbsp;button events (whether {}normal{}, {}pressed {}or {}released{}) all work on the mask of the instance that has the event. What this means is that {}GameMaker{} will check the position of the mouse in the room when those buttons are used against the collision masks of the instances that have a mouse event. If there is a \"collision\" with the instance {}bounding box{}&nbsp;then the event will be triggered, so make sure that any instance with these events has a sprite with a valid collision mask or that the object has a mask sprite selected in the object properties. As their names imply, these events will be triggered either once when the chosen mouse button is first pressed or released, or continuously each step while the button is maintained. ":"{}左{}、右{}&nbsp;和中{}&nbsp;按钮事件（无论是{}normal{}、{}pressed {}还是{}released{}）都对拥有该事件的实例的掩码起作用。这意味着，{}GameMaker{}在使用这些按钮时，会对照有鼠标事件的实例的碰撞掩码，检查鼠标在房间里的位置。如果与实例{}碰撞箱{}&nbsp;发生了 \"碰撞\"，那么事件就会被触发，所以要确保任何有这些事件的实例都有一个具有有效碰撞遮罩的精灵，或者该对象在对象属性中选择了一个遮罩精灵。正如它们的名字所暗示的，这些事件将在所选的鼠标按钮首次按下或释放时被触发一次，或者在按钮保持的每一步都被连续触发。",
    "{}These options are:":"{}这些选项是：",
    "{}This event will be called after any event that removes an instance of the object from the room. So, it will be triggered if:{}":"{}这个事件将在任何从房间中移除对象的实例的事件之后被调用。因此，它将被触发，如果：{}",
    "{}This is the list of all the basic events and event categories which an object can respond to, and within each category are sub events to further refine behaviours. For example, if you click on the {}K{}{}ey Press{} {}&nbsp;event category you will then get a further window popping up with the events that allow you to select {}which {}key the object should respond to.":"{}这是一个对象可以响应的所有基本事件和事件类别的列表，每个类别中都有子事件来进一步细化行为。例如，如果你点击{}K{}{}ey Press{} {}&nbsp;事件类别，你就会弹出一个进一步的窗口，让你选择{}对象应该对哪个{}键做出响应。",
    "{}the game ends{}":"{}游戏结束{}",
    "{}the instance is destroyed{}":"{}该实例被销毁{}",
    "{}the room ends{}":"{}进入别的房间{}"
}

	$(function(){

		//添加按钮
		addNoTranslationStateButton()
		//跳过翻译
		if(noTranslationState())return false

	//这么做只是为了方便移植修改
	const css1="div.footer a,h4,caption"
	const css2="p,h1,h2,h3,td,li,a,div.dropspotnote,figcaption"
	const css3="th,.warning,.important,.optional"

		$(css1).each(function(){
			setTranslator($(this),json_global)
		})

		$(css2).each(function(){
			setTranslator($(this),json)
		})

		$(css3).each(function(){
			setTranslator($(this),json_global)
		})

		//翻译主页
		if($(".header").length){
			window.setInterval(function(){
				//翻译菜单
				$("#toc-panel a:not('isTranslate')").each(function(){
					//区别于main.js,这个不管有没有翻译都将添加标记
					$(this).addClass("isTranslate")
					setTranslator($(this),json_global)
				})
				//翻译术语表
				$(".GlossDefinitionText:not('isTranslate')").each(function(){
					$(this).addClass("isTranslate")
					setTranslator($(this),json_global)
				})
			},250)
			console.log("成功啦!现在正在疯狂翻译菜单中!")
		}

		//翻译tooltip
		$(".tooltip").each(function(){
			setTranslator($(this),json_global,"title")
		})

	})

	document.addEventListener('DOMContentLoaded', () => {
		pangu.autoSpacingPage();
	})

</script>

  <script type="text/javascript" language="JavaScript">
    //<![CDATA[
    function reDo() {
      if (innerWidth != origWidth || innerHeight != origHeight)
        location.reload();
    }
    if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
      origWidth = innerWidth;
      origHeight = innerHeight;
      onresize = reDo;
    }
    onerror = null;
  //]]>
  </script>
  <style type="text/css">/*<![CDATA[*/

    < !-- div.WebHelpPopupMenu {
      position: absolute;
      left: 0px;
      top: 0px;
      z-index: 4;
      visibility: hidden;
    }

    p.WebHelpNavBar {
      text-align: right;
    }

    -->
  
/*]]>*/</style>

  <script type="text/javascript">//<![CDATA[

    gRootRelPath = "../..";
    gCommonRootRelPath = "../..";
    gTopicId = "6.3.1";
  
//]]></script>

  <script type="text/javascript" src="../../template/scripts/rh.min.js"></script>
  <script type="text/javascript" src="../../template/scripts/common.min.js"></script>
  <script type="text/javascript" src="../../template/scripts/topic.min.js"></script>
  <script type="text/javascript" src="../../template/scripts/topicwidgets.min.js"></script>
<script type="text/javascript" src="../../whxdata/projectsettings.js"></script>
  <link rel="stylesheet" type="text/css" href="../../template/styles/topic.min.css">
  <link rel="stylesheet" type="text/css" href="../../template/Charcoal_Grey/topicheader.css">
  <meta name="topic-status" content="Draft">

  <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
  <title>Object Events</title>
  <meta name="generator" content="Adobe RoboHelp 2020">
  <meta name="rh-authors" content="Mark Alexander">
  <meta name="topic-comment" content="Page detailing the events system and the different events in an object">
  <meta name="rh-index-keywords" content="Objects - Events">
  <meta name="search-keywords" content="events,object events,events list">
  <link rel="stylesheet" type="text/css" href="../../assets/css/default.css">
  <script src="../../assets/scripts/main_script.js" type="module"></script>
<meta name="brsnext" value="The_Asset_Editors/Object_Properties/Event_Order.htm"><meta name="brsprev" value="The_Asset_Editors/Objects.htm"></head>

<body>
  <div class="topic-header rh-hide" id="rh-topic-header">
    <div class="logo">
    </div>
    <div class="nav">
      <div class="title" title="Object Events">
        <span>Object Events</span>
      </div>
      <div class="gotohome" title="Click here to see this page in full context">
        <a href="#" onclick="rh._.goToFullLayout()">Click here to see this page in full context</a>
      </div>
    </div>
  </div>
  <div class="topic-header-shadow rh-hide" id="rh-topic-header-shadow"></div>



  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>Object Events</h1>
  <p>So, what are object <strong>events</strong>? Basically, these are discreet moments in the game loop where things are made to happen based on what you have programmed for them. <span data-keyref="GameMaker Name">GameMaker</span> works with cycles of these events - from the moment a room is started to the moment it is finished there is a game loop running where every <strong>step </strong>a series of events are run or checked, and you can choose to place code or GML Visual actions in your objects that respond to these events (a step is a moment in game time, governed by the room speed setting, and can also be called a <strong>frame</strong>) .</p>
  <p>Let's look at a typical object setup with events and code:</p>
  <p><img alt="Object Editor Events View" class="center" src="../../assets/Images/Asset_Editors/Editor_Objects_Events.png">As you can see in our example object there are a number of events listed that it should respond to, but initially when you create an object this list is empty and you must decide which events you need and what instances of that object should do when those events are triggered. To add events into the object, you press the <em>Add Event</em> button found at the bottom of the events list which will bring up the following window:</p>
  <p><img alt="Object Editor Events List" class="center" src="../../assets/Images/Asset_Editors/Editor_Objects_EventList.png">This is the list of all the basic events and event categories which an object can respond to, and within each category are sub events to further refine behaviours. For example, if you click on the <strong>K</strong><strong>ey Press</strong> <img alt="Key Press Icon" height="16" src="../../assets/Images/Icons/Icon_KeyboardPress.png" width="16">&nbsp;event category you will then get a further window popping up with the events that allow you to select <em>which </em>key the object should respond to.</p>
  <p>Once you have selected your event, the event's editor window&nbsp;will be chained to it and open up on the right.</p>
  <div data-conref="../../assets/snippets/Visual_Code_Choice.hts">
  <p class="note">At this point, you may be asked to choose between&nbsp;<span data-keyref="GML_Visual">GML Visual</span>&nbsp;and&nbsp;<span data-keyref="GML_Code">GML Code</span>. See&nbsp;<a href="../../GameMaker_Language.htm">GameMaker Language</a> for more information.</p>

</div>
  <p>You can now edit the GML code (or blocks) to give your object a specific behaviour or reaction to that event.</p>
  <p>You can click the right mouse button <img alt="RMB Icon" class="icon" src="../../assets/Images/Icons/Icon_RMB.png" style="">&nbsp;on any event that has been added to an object to get the following menu options:</p>
  <p><img alt="Object Editor Events Menu" class="center" src="../../assets/Images/Asset_Editors/Editor_Objects_RMBMenu.png">These options are:</p>
  <ul class="colour">
    <li><strong>Add Event</strong> - Add a new event from the event list.</li>
    <li><strong>Show Parent Event</strong> - View the inherited event from the parent in a read-only mode.</li>
    <li><strong>Open Parent Event</strong> - Open the inherited event in the parent object.</li>
    <li><strong>Cut </strong>/ <strong>Copy </strong>/ <strong>Paste Events</strong> - Cut, copy or paste the selected event. You can use the standard keyboard shortcuts too: <img alt="CTRL Icon" class="icon" height="20" src="../../assets/Images/Icons/Icon_Ctrl.png" width="55">&nbsp;/&nbsp;<img alt="CMD Icon" class="icon" height="20" src="../../assets/Images/Icons/Icon_Cmd.png" width="55"> + <span class="inline">X</span>, <img alt="CTRL Icon" class="icon" height="20" src="../../assets/Images/Icons/Icon_Ctrl.png" width="55">&nbsp;/&nbsp;<img alt="CMD Icon" class="icon" height="20" src="../../assets/Images/Icons/Icon_Cmd.png" width="55">&nbsp;+ <span class="inline">C</span>, and <img alt="CTRL Icon" class="icon" height="20" src="../../assets/Images/Icons/Icon_Ctrl.png" width="55">&nbsp;/&nbsp;<img alt="CMD Icon" class="icon" height="20" src="../../assets/Images/Icons/Icon_Cmd.png" width="55">&nbsp;+ <span class="inline">V</span>.</li>
    <li><strong>Duplicate Event</strong> - Duplicate the chosen event. This will take the contents of the chosen event and duplicate them in another event that you specify.</li>
    <li><strong>Change Event</strong> - Change the event. This will prompt you to choose another event category and once selected the contents of the current event will be changed to the new event (removing the original event in the process).</li>
    <li><strong>Convert To GML Visual / Code</strong> - Object events will be created using the method chosen when you created the project, either using GML Code or GML Visual actions. With this option you can convert from one to the other, regardless of the project type.</li>
    <li><strong>Delete Event</strong> - Delete the event (or events).</li>
  </ul>
  <p>When removing events, you can use <img alt="Shift Icon" class="icon" height="20" src="../../assets/Images/Icons/Icon_Shift.png" width="55">&nbsp;+ <img alt="LMB Icon" class="icon" src="../../assets/Images/Icons/Icon_LMB.png">&nbsp;to select multiple events and then delete them all together.Each object you create has its own discreet list of events which are added into it from the <strong>Object Editor</strong>. These events fall into two categories:</p>
  <ul class="colour">
    <li>those that run every single game step</li>
    <li>those that are "triggered" by a game event, like the instance reaching the room edge or a keyboard or mouse press.</li>
  </ul>
  <p>The full list of events is given below:</p>
  <p><img alt="Create Event Icon" src="../../assets/Images/Icons/Icon_Create.png"><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down8" href="#"><span data-open-text="true" data-skip-index="true">Create</span><span data-close-text="true">Create</span></a></p>
  <div class="droptext" data-targetname="drop-down8">
    <p class="dropspot">This event happens when an instance of the object is first created, and is the very first thing that happens within an instance placed in the room through the Room Editor when a room is entered. This means that this event is the ideal place to initialize <a class="tooltip" title="A variable is a named value within a program which can be modified, stored and displayed whenever required. For example, if we have an integer variable with a name XYZ and it stores a value 10, we can then do things like A = XYZ + 10, which will set the value of the variable A to 20, since XYZ is 10 and we are adding 10 to it. You can also change variable values using operators, so doing XYZ = XYZ + 100 would modify the value of our XYZ variable to be equal to 110. Variables can also be used to store identifiers and references to different assets.">variable</a><span class="glossextra">s</span>, start <a href="../Timelines.htm">Timelines</a>, set <a href="../Paths.htm">Paths</a>&nbsp;etc... and do anything else that generally only needs to be done once or only when an instance is first created in the room. If your object has any <strong>Object Variables</strong> or <strong>Instance Variables</strong> added in either the Object Editor or the Room Editor, then these variables will be initialised first and then the <strong>Create Event</strong> will be run.</p>
    <p class="dropspot">Remember that you can modify anything you set up in the Create Event from the <a href="../Room_Properties/Layer_Properties.htm">Instance Creation Code</a>&nbsp;in the Room Editor, as that is run directly after the create event for the instance and can be used to create <strong>Instance Variables</strong>&nbsp;or to override any variables added as Object Variables or in the actual Create Event.</p>
    <div data-conref="../../assets/snippets/Instance_creation_order_warning.hts">
  <p class="note"><span class="note">NOTE</span>&nbsp;Instances in a room are created in a certain <a href="../Room_Properties/Room_Properties.htm#creation_order">order</a>, and their Create events are also executed as they are created one-by-one. This means that you must be careful when reading variables from other instances in the Create event, as that other instance may not have run its Create event yet!<br>
    <br>
    For example: let's say <strong>ObjectA</strong> is created before <strong>ObjectB</strong>, and you have the following code in those objects' Create events:<br>
    <br>
    <strong>ObjectA </strong>Create -&nbsp;<span class="inline2">myValue = objectB.myValue;</span><br>
    <strong>ObjectB </strong>Create -&nbsp;<span class="inline2">myValue = 10;</span><br>
    <br>
    ObjectA is created first and its Create event runs, which then crashes the game:<br>
    <br>
    <em><strong>"Variable objectB.myValue(100003, -2147483648) not set before reading it."</strong></em><br>
    <br>
    That's simply because ObjectB has not even been created yet, so any variables initialised in its Create event do not yet exist. This is why you must take caution when referencing other instances&nbsp;like this in the Create event, including any code run inside <span class="inline"><a href="../../GameMaker_Language/GML_Overview/Language_Features/with.htm">with()</a></span> blocks.
  </p>

</div>
    <p class="dropspot">&nbsp;</p>
  </div>
  <p><img alt="Destroy Event Icon" src="../../assets/Images/Icons/Icon_Destroy.png"><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down9" href="#"><span data-open-text="true" data-skip-index="true">Destroy</span><span data-close-text="true">Destroy</span></a></p>
  <div class="droptext" data-targetname="drop-down9">
    <p class="dropspot">This event is the event to be executed when an instance is destroyed. It is often overlooked when adding behaviours to objects, but it can be very useful, for example by creating explosion or particle effects when an enemy is killed, or for re-spawning a new instance of the object in another part of the room, or even for adding points onto a score.</p>
    <p class="dropspot">&nbsp;</p>
  </div>
  <p><img alt="Clean Up Event Icon" src="../../assets/Images/Icons/Icon_Destroy.png"><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down10" href="#"><span data-open-text="true" data-skip-index="true">Clean Up</span><span data-close-text="true">Clean Up</span></a></p>
  <div class="droptext" data-targetname="drop-down10">
    <p class="dropspot"><span>This event will be called after any event that removes an instance of the object from the room. So, it will be triggered if:</span></p>
    <ul class="dropspotlist">
      <li class="dropspot"><span>the instance is destroyed</span></li>
      <li class="dropspot"><span>the room ends</span></li>
      <li class="dropspot"><span>the game ends</span></li>
    </ul>
    <p class="dropspot"><span>It is designed for you to use to "clean up" any dynamic resources that you may have in your game (like surfaces, data structures, etc...) or to perform any task that you need performed <em>once </em>when the instance is removed from the game in any way.</span></p>
    <p class="dropspot"><span>Note that this event will be called <em>instantly </em>after the event that triggered it, but the instance will not actually be removed from the game <strong>until the end of the current event</strong>. For example, if you call <span class="inline">instance_destroy()</span> in the Step Event, then the Destroy Event will be called, then the Clean Up Event, and then <em>the rest of the Step Event will finish running</em>. This means that any code you have after the call to <span class="inline">instance_destroy()</span> will still be run and be a potential cause for errors if you've cleaned up a data structure or some other resource that the code requires, so care must be taken when using this event.</span> </p>
    <p>&nbsp;</p>
  </div>
  <p><img alt="Alarm Event Icon" src="../../assets/Images/Icons/Icon_Alarm.png"><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down11" href="#"><span data-open-text="true" data-skip-index="true">Alarm</span><span data-close-text="true">Alarm</span></a></p>
  <div class="droptext" data-targetname="drop-down11">
    <p class="dropspot">The alarm category is split into 12 events, one for each of the possible alarms that can be set in an instance. So, when you click on the <em>Add Alarm </em>category you are presented with this window:</p>
    <p class="dropspot"><img alt="Object Editor Alarm Events" class="center" src="../../assets/Images/Asset_Editors/Editor_Objects_AlarmEvents.png">Here you select the alarm that you wish to create and, once that is done, you will see that it has been added to the event window allowing you to add code to it as normal. But what is an alarm? Well, it is a special event that does nothing unless the alarm has been previously set, and then it will wait until that alarm has counted down to 0 before running the actions or code that you have added into it.</p>
    <p class="dropspot">Once the alarm has reached 0 and run the code, it will then count down to -1, where it will remain until set again (meaning you can check the value of an alarm to see if it is greater than -1, which will tell you if it's running or not). So, say you set <span class="inline">alarm[0]</span> in the create event of the object to 30, this means that <span data-keyref="GameMaker Name">GameMaker</span> will count down 30 game steps before it runs the actions or code that are placed in the <span class="inline">alarm[0]</span> event. Note that setting an alarm to 0 will <em>not </em>run the alarm code, as the event is triggered, but the alarm is set to -1 immediately, so the code is skipped. If you need an alarm to run the very next step, then you should set it to 1.</p>
    <p class="dropspot">This can be very useful as it allows you to set things in motion at precise moments, and you can even have them repeat as there is nothing to stop you setting an alarm in its own event. Imagine you have a monster and you want it to turn right every three seconds... well, you would set an alarm in its create event to the room speed * 3 (if the room speed is 30, that's 30 steps per second, so multiply that by 3 and you get 3 seconds!) and then in the alarm event you would have the code or action to set its direction, as well as the action (or code) to set its alarm to room speed * 3&nbsp;again. In this way, you can set up simple game loops where things only happen at specific intervals.</p>
    <p class="dropspot">It is worth noting that an alarm with no actions or code in it in it will <em>not </em>count down. However, even with just a comment and no code or actions, then the alarm will continue to count down and can be set and checked as you would normally.</p>
    <p class="dropspot">&nbsp;</p>
  </div>
  <p><img alt="Step Event Icon" src="../../assets/Images/Icons/Icon_Step.png"><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down12" href="#"><span data-open-text="true" data-skip-index="true">Step</span><span data-close-text="true">Step</span></a></p>
  <div class="droptext" data-targetname="drop-down12">
    <p class="dropspot"><span data-keyref="GameMaker Name">GameMaker</span> splits time into <strong>steps </strong>with the room speed defining how many of these steps there are supposed to be per second (a step can also be called a <strong>frame</strong>). A single step, is basically the loop that runs constantly with all the events being checked and triggered as necessary while the game runs, so as you can imagine, the <strong>Step Event </strong>is an event that is checked every single step of the game while the instance exists.</p>
    <p class="dropspot">The step event is actually comprised of three sub events that are outlined below:</p>
    <p class="dropspot"><img alt="Object Editor Step Events" class="center" src="../../assets/Images/Asset_Editors/Editor_Objects_Step.png">For most things the standard step event will be fine to use, but sometimes you want a bit more control over what code runs and at what time, so for that you are provided with the <strong>Begin </strong>and <strong>End </strong>step events. All three are checked every step, but their order will never vary even if future updates to the <span data-keyref="GameMaker Name">GameMaker</span> engine change other events, which means that this is the only reliable method of making sure that something always happens before something else.</p>
    <p class="dropspot">What can the step event be used for? Well, it can be used for actions or code that needs to be executed continuously. For example, if one object should follow another, here you can adapt the direction of motion towards the object we are following to keep it moving smoothly behind. Be careful with this event though, and don't put many complicated actions in the step event of objects, especially if you are planning on having lots of instances of the object in your game room, as this might slow the game down. Many things can be placed into alarms, or set to trigger using some of the <strong>Other </strong>events, rather than happening all the time.</p>
    <p class="dropspot">&nbsp;</p>
    <p class="dropspot">&nbsp;</p>
  </div>
  <p><img alt="Collision Event Icon" src="../../assets/Images/Icons/Icon_Collision.png"><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down13" href="#"><span data-open-text="true" data-skip-index="true">Collision</span><span data-close-text="true">Collision</span></a></p>
  <div class="droptext" data-targetname="drop-down13">
    <p class="dropspot">Obviously when making a game, it is very important that you know when two (or more) instances of an object have collided, and for that we have the <strong>Collision Event</strong>. This is an event that you place in an object and then specify against which other object you should be checking for collisions.</p>
    <p class="dropspot">When you don't have physics turned on, these collisions will be calculated based on the mask of the two objects (the mask is defined within the sprite properties, or can be assigned independently in the object properties) and whether they overlap or not. Note, that if one or the other instances in the collision does not have a mask assigned (or the sprite mask is set to nothing), <em>even if it is drawing something</em> no collisions will be detected.</p>
    <p class="dropspot">If you have <strong>Physics </strong>on, then the collision will be based on the type of <strong>collision shape</strong> (<em>Fixture</em>) that you have defined for the object in its physics properties, as will its reaction to the collision. This means you may not need any code to deal with the collision, but this event will still <em>need to have at least a comment in it </em>for the collisions to be detected.</p>
    <p class="dropspot">Finally, it should be noted that all collisions will be calculated once per game step before the collision event is triggered, such that when the collision event runs, all collisions will have been calculated already and pre-assigned. This means that if you create an instance in this event and then try to check for a collision with it, the collision wont be detected or resolved until the next <a class="tooltip" title="An iteration is a single pass through a set of operations in your project code. One form of iteration in computer programming is via loops. A loop will repeat a certain segment of code until a condition is met and it can proceed further. Each time the computer runs a loop, it is known as an iteration. In simple terms, iteration is the process of repeating a particular snippet of code over and over again to perform a certain action.">iteration</a> of the game loop.</p>
    <p class="dropspot">&nbsp;</p>
    <p class="dropspot">&nbsp;</p>
  </div>
  <p><img alt="Keyboard Icon" src="../../assets/Images/Icons/Icon_Keyboard.png"><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down14" href="#"><span data-open-text="true" data-skip-index="true">Keyboard,</span><span data-close-text="true">Keyboard,</span></a>&nbsp;&nbsp;<img alt="Keyboard Press Icon" src="../../assets/Images/Icons/Icon_KeyboardPress.png"><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down14" href="#"><span data-open-text="true" data-skip-index="true">Keyboard Press,</span><span data-close-text="true">Keyboard Press,</span></a> &nbsp;<img alt="Keyboard Release Icon" height="16" src="../../assets/Images/Icons/Icon_KeyboardRelease.png" style="cursor: nwse-resize;" width="15"> <a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down14" href="#"><span data-open-text="true" data-skip-index="true">Keyboard Release</span><span data-close-text="true">Keyboard Release</span></a></p>
  <div class="droptext" data-targetname="drop-down14">
    <p class="dropspot">Letting the player control the different aspects of your game is very important, and to that end <span data-keyref="GameMaker Name">GameMaker</span> provides you with a very comprehensive list of keyboard events that can be used in any of the three main keyboard categories. For the general Keyboard category, it is triggered continuously&nbsp;every step&nbsp;for as long as the selected key is pressed down, while the Press and Release category events will only be triggered once when the key is initially pressed down or released.</p>
    <p class="dropspot">It should be noted that keyboard events are actually triggered in all active instances in a room whenever a key is used, but only those that have an event defined for that particular key will respond and you can create multiple keyboard events in any object and the instances of that object will respond to all of them while the game is running.</p>
    <p class="dropspot">When you add any keyboard event to an object, you will be presented with the keyboard sub event menu where you can specify the key you are to be checking for:</p>
    <p class="dropspot"><img alt="Object Editor Keyboard Events" class="center" src="../../assets/Images/Asset_Editors/Editor_Objects_Keyboard.png">Most of them are fairly obvious, but let's just go through the sections briefly - at the top we have the arrow keys, followed by the most used modifier keys, then the rest of the keyboard (split into further sub-sections so you can get the exact key required like <img alt="Escape Icon" class="icon" height="20" src="../../assets/Images/Icons/Icon_Escape.png" width="55">&nbsp;or&nbsp;<img alt="Insert Icon" class="icon" height="20" src="../../assets/Images/Icons/Icon_Insert.png" width="55">) and finally two very special sub events, <strong>No Key</strong> and <strong>Any Key</strong>. As their names imply, these are sub events that check for when <em>no </em>key is pressed or for when <em>any </em>key is pressed. Please note that the keys on the numeric keypad only produce the corresponding events when <strong>Number Lock </strong>is enabled.</p>
    <p class="dropspot">The <strong>Press </strong>and <strong>Release </strong>events for the keyboard are almost exactly the same as the regular keyboard event, except that instead of being triggered continuously, they are triggered once only. When the keyboard first registers that a key has been pressed it will generate a <strong>Keyboard Pressed</strong> event (as well as a regular Keyboard event), and the first time after that where a key is no longer being detected as pressed it will trigger a single <strong>Keyboard Release</strong> event.</p>
    <p class="dropspot">&nbsp;</p>
    <p class="dropspot">&nbsp;</p>
  </div>
  <p><img alt=" Mouse Icon" height="16" src="../../assets/Images/Icons/Icon_MouseEvent.png" width="16"><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down16" href="#"><span data-open-text="true" data-skip-index="true">Mouse</span><span data-close-text="true">Mouse</span></a></p>
  <div class="droptext" data-targetname="drop-down16">
    <p class="dropspot">The Mouse category is separated into a series of events that can be selected to give you a more precise control over what is happening in your game. Here you can see exactly what these events are:</p>
    <p class="dropspot"><img alt="Object Editor Mouse Events" class="center" src="../../assets/Images/Asset_Editors/Editor_Objects_Mouse.png">The left <img alt="LMB Icon" class="icon" src="../../assets/Images/Icons/Icon_LMB.png">, right <img alt="RMB Icon" class="icon" src="../../assets/Images/Icons/Icon_RMB.png">&nbsp;and middle <img alt="MMB Icon" class="icon" src="../../assets/Images/Icons/Icon_MMB.png">&nbsp;button events (whether <strong>normal</strong>, <strong>pressed </strong>or <strong>released</strong>) all work on the mask of the instance that has the event. What this means is that <span data-keyref="GameMaker Name">GameMaker</span> will check the position of the mouse in the room when those buttons are used against the collision masks of the instances that have a mouse event. If there is a "collision" with the instance <a class="tooltip" title="For sprites, the bounding-box is the name given to the edges of the area that collisions will initially be detected in, and it doesn't have to be the same size as the sprite it's being applied to. For sequences, the bounding box is the outer edge of the total space that one or more assets occupy in the canvas.">bounding box</a>&nbsp;then the event will be triggered, so make sure that any instance with these events has a sprite with a valid collision mask or that the object has a mask sprite selected in the object properties. As their names imply, these events will be triggered either once when the chosen mouse button is first pressed or released, or continuously each step while the button is maintained. </p>
    <p class="dropspot">The mouse enter and leave events are also similar to the button events in that they too rely on the mask of the instance to work, but this time they are triggered when the mouse first "enters" (touches) the instance or when the mouse "leaves" (stops touching) the instance. These events are not continuous however, and are triggered only once for each time the mouse enters or leaves the object - so they are an ideal method for creating, for example, buttons that need to change as the mouse hovers over them before going back to normal when the mouse is removed.</p>
    <p class="dropspot">Finally we have another section to the mouse events which is called the <strong>Global Mouse</strong>. In this sub-menu you will find a selection of events that are for recording mouse events in instances even when the mouse is not over them or even near them. These are events that are generated for <em>all </em>instances and if there are actions or code defined for the specified event then it will be run, regardless of the position of the mouse within the game room.</p>
    <p class="dropspot">Please note that on mobile or touch-screen devices the left mouse button <img alt="LMB Icon" class="icon" src="../../assets/Images/Icons/Icon_LMB.png">&nbsp;can also be used to check for a finger tab on a touch screen, and the right mouse button <img alt="RMB Icon" class="icon" src="../../assets/Images/Icons/Icon_RMB.png">&nbsp;is triggered by a double tap on the screen (this behaviour can be changed using code).</p>
    <p class="dropspot">&nbsp;</p>
    <p class="dropspot">&nbsp;</p>
  </div>
  <p><img alt="Gestures Icon" src="../../assets/Images/Icons/Icon_Gesture.png"><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down18" href="#"><span data-open-text="true" data-skip-index="true">Gestures</span><span data-close-text="true">Gestures</span></a></p>
  <div class="droptext" data-targetname="drop-down18">
    <p class="dropspot">This event is the one that will be triggered by the user touching the screen (on mobile) or clicking and moving the mouse (on all other platforms). These events are similar to the mouse events, in that you have regular versions and&nbsp;<em>global</em>&nbsp;versions. The regular versions of these events will only be triggered when the touches occur on an instance that has a sprite (or a mask) and the touches occur within its <a class="tooltip" title="For sprites, the bounding-box is the name given to the edges of the area that collisions will initially be detected in, and it doesn't have to be the same size as the sprite it's being applied to. For sequences, the bounding box is the outer edge of the total space that one or more assets occupy in the canvas.">bounding box</a>. The global versions of these events, however, will be triggered by the user touching <em>anywhere </em>on the screen.</p>
    <p class="dropspot">The gesture events&nbsp;detect&nbsp;the following:</p>
    <ul class="dropspotlist">
      <li class="dropspot"><img alt="Tap Icon" class="icon" src="../../assets/Images/Icons/Icon_Tap.png">&nbsp;<strong>taps </strong>- when a user clicks/touches and releases quickly</li>
      <li class="dropspot"><img alt="Drag Icon" class="icon" src="../../assets/Images/Icons/Icon_Drag.png">&nbsp;<strong>drags </strong>- when a user touches/clicks and maintains it then moves their finger/cursor</li>
      <li class="dropspot"><img alt="Flick Icon" class="icon" height="20" src="../../assets/Images/Icons/Icon_Flick.png" width="20">&nbsp;<strong>flicks </strong>- when the user moves and releases a touch/click in one movement</li>
      <li class="dropspot"><img alt="Pinch Icon" class="icon" src="../../assets/Images/Icons/Icon_Pinch.png">&nbsp;<strong>pinches </strong>- when the user has two fingers on the screen and then moves them together/apart</li>
      <li class="dropspot"><img alt="Rotate Icon" class="icon" src="../../assets/Images/Icons/Icon_Rotate.png">&nbsp;<strong>rotates </strong>- when the user has two fingers on the screen and then rotates them around a point</li>
    </ul>
    <p class="dropspot"><img alt="Object Editor Gesture Events" class="center" src="../../assets/Images/Asset_Editors/Editor_Objects_Gesture.png">The different events will always contain a DS Map called the "<span class="inline">event_data</span>" map, which will contain a number of key/value pairs with data on the touch/click position and movement. For full details on all the available sub-events and how they work, please see the following section:</p>
    <ul class="dropspotlist">
      <li class="dropspot"><a href="Gesture_Events.htm">The Gesture Event</a></li>
    </ul>
    <p class="dropspot">&nbsp;</p>
    <p class="dropspot">&nbsp;</p>
  </div>
  <p><img alt="Other Icon" height="16" src="../../assets/Images/Icons/Icon_Other.png" width="16"><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down19" href="#"><span data-open-text="true" data-skip-index="true">Other</span><span data-close-text="true">Other</span></a></p>
  <div class="droptext" data-targetname="drop-down19">
    <p class="dropspot">There are a number of special events for use when making games with <span data-keyref="GameMaker Name">GameMaker</span> and they are mostly grouped together under the Other event and can be selected from the pop up menu of sub events that comes up when you select this. Here is an image of all these other events:</p>
    <p class="dropspot"><img alt="Object Editor Other Events" class="center" src="../../assets/Images/Asset_Editors/Editor_Objects_OtherEvents.png">For more information on each of the events listed in the image above, please see the following section:</p>
    <ul class="dropspotlist">
      <li class="dropspot"><a href="Other_Events.htm">The Other Events</a></li>
    </ul>
    
    <p class="dropspot">&nbsp;</p>
  </div>
  <p><img alt="Draw Event" src="../../assets/Images/Icons/Icon_Draw.png"><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down20" href="#"><span data-open-text="true" data-skip-index="true">Draw</span><span data-close-text="true">Draw</span></a></p>
  <div class="droptext" data-targetname="drop-down20">
    <p class="dropspot">This event category is the one that governs what you see on the screen when you run your game, and is split into various discreet events:</p>
    <p class="dropspot"><img alt="Draw Events" class="center" src="../../assets/Images/Asset_Editors/Editor_Objects_Draw.png">As you can see, the draw event category has multiple different event types. <strong>Draw Begin</strong>, <strong>Draw </strong>and <strong>Draw End</strong> are the "standard" draw events which you will probably use most. By default the main Draw event is always called for every instance, regardless of whether it has a sprite or not, although if you flag the instance as invisible, the event will not be triggered (so keep this in mind if you have any game logic in the draw event of an invisible object, as it won't run). The main draw event is also where <span data-keyref="GameMaker Name">GameMaker</span> default draws the instance sprite when there is no code nor actions in the event (ie: you haven't added it into the event list for the object). Default drawing uses the sprite associated with the instance and will draw that with any transforms set in code or actions applied.</p>
    <p class="dropspot">The standard draw events draw <em>before </em>the <strong>Draw GUI </strong>events and <em>between </em>the <strong>Pre Draw </strong>and <strong>Post Draw </strong>events, meaning that everything that is drawn in this event is drawn beneath that of the <strong>Draw GUI </strong>event, regardless of the layer (ie: anything drawn in the Draw GUI event will always be drawn over anything drawn in the normal draw event, regardless of layer order).</p>
    <p class="dropspot">Note that the above is simply an overview of how the Draw Events work, but for full details on all the available sub-events, please see the following section:</p>
    <ul class="dropspotlist">
      <li class="dropspot"><a href="Draw_Events.htm">The Draw Event</a></li>
    </ul>
    <p>&nbsp;</p>
    <p>&nbsp;</p>
    <p class="dropspot">&nbsp;</p>
  </div>
  <p><img alt="Async Event" src="../../assets/Images/Icons/Icon_Async.png"><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down21" href="#"><span data-open-text="true" data-skip-index="true">Asynchronous</span><span data-close-text="true">Asynchronous</span></a></p>
  <div class="droptext" data-targetname="drop-down21">
    <p class="dropspot">This event category is special in that the events it contains are not triggered by default by <span data-keyref="GameMaker Name">GameMaker</span>, but rather by the end of some other action, like the loading of a file, or the reply from a web server. The category is split into the following events:</p>
    <p class="dropspot"><img alt="Object Editor Asynchronous Events" class="center" src="../../assets/Images/Asset_Editors/Editor_Objects_Async.png"></p>
    <p class="dropspot">So, say you want to add an image file to <span data-keyref="GameMaker Name">GameMaker</span>. Well, you would code this in another event (maybe the Create Event) of an object and then have that object draw a loading bar while waiting (for example), polling the appropriate asynchronous event until the <a class="tooltip" title="A callback is simply a function that runs and then triggers another function (or code block) when it has finished doing whatever it was assigned to do. For example, the funtion sprite_add() will trigger a callback in the asynchronous Image Loaded event when the sprite has been loaded.">callback</a> that tells <span data-keyref="GameMaker Name">GameMaker</span> the file has loaded. You can then use the data returned in this event to do other things, like change room, or purchase an item.</p>
    <p class="dropspot">Note that the above is simply an overview of how the Asynchronous Event works, but for full details on all the available sub-events, please see the following section:</p>
    <ul class="dropspotlist">
      <li class="dropspot"><a href="Async_Events.htm">Asynchronous Events List</a></li>
    </ul>
    <p class="dropspot">&nbsp;</p>
  </div>
  <p>&nbsp;</p>
  <p>You should also note that you can name events, or at least give them a short descriptive text that will be shown beside them in the Event Editor. To do this, simply add the following into the very first line of the code editor for the event (when using <span data-keyref="GML_Code">GML Code</span>):</p>
  <p class="code">/// @description Your text here</p>
  <p>So, you could have something like this in - for example - an <strong>Alarm </strong>event:</p>
  <p class="code">/// @description This is the AI Fight alarm</p>
  <p>And now in your Event Editor you'll see this:</p>
  <p><img alt="Object Editor Named Events" class="center" src="../../assets/Images/Asset_Editors/Editor_Objects_NamedEvents.png"></p>
  <p>For&nbsp;<span data-keyref="GML_Visual">GML Visual</span> users, adding a comment requires the use of the&nbsp;<strong>Execute Code</strong>&nbsp;action, which should be placed at the very top of the actions for the event, before everything else. When you add this action, you then give it the same line of code that is shown above to name the event, e.g.:</p>
  <p><img alt="Naming An Event In DnD" class="center" src="../../assets/Images/Asset_Editors/Editor_Object_DnD_NamedEvents.png" style="cursor: nwse-resize;">For additional information on some of the above events and general event running order, please see the following sections:</p>
  <ul class="colour">
    <li><a href="Event_Order.htm">Event Order</a></li>
    <li><a href="Other_Events.htm">The Other Events</a></li>
    <li><a href="Draw_Events.htm">The Draw Events</a></li>
    <li><a href="Async_Events.htm">The Async Events</a></li>
    <li><a href="Gesture_Events.htm">The Gesture Events</a></li>
  </ul>
  <p>&nbsp;</p>
  <p>&nbsp;</p>
  <p>&nbsp;</p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Back: <a href="../Objects.htm">The Object Editor</a></div>
        <div style="float:right">Next:&nbsp;<a href="Parent_Objects.htm">Parent Objects</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2023 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
Object Events
Named Events
-->
  <!-- TAGS
object_events
-->

</body></html>