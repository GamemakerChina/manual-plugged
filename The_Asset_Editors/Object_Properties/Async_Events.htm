<!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml"><head><script type="text/javascript" src="../../assets/import/jquery-3.6.1.min.js"></script><script type="text/javascript" src="../../assets/import/layer/layer.js"></script><script type="text/javascript" src="../../assets/import/pangu.min.js"></script><link rel="stylesheet" type="text/css" href="../../assets/import/layer/layui_btn.css"><link rel="stylesheet" type="text/css" href="../../assets/import/layer/layui_col.css"><link rel="stylesheet" type="text/css" href="../../assets/import/layer/theme/default/layer.css"><link rel="stylesheet" type="text/css" href="../../assets/import/main.css"><script>let str;removeHtml=function(e){return e=(e=(e=(e=e.replace(/(<([^>]+)>)/gi,"{}")).replace(/\r\n/g,"\n")).replace(/\n/g,"")).replace(/ {2,}/g," ")},retHtml=function(e){return e.match(/(<([^>]+)>)/gi)},setTranslator=function(e,t,n){let o;o=n?e.attr(n):e.html();let s=t[removeHtml(o)];if(null!=s&&s.length){t=retHtml(o);let a=0;t&&t.forEach(function(e,t){var n=s.replace("{"+a+"}",e);s=n===s?s.replace("{}",e):n,a++}),n?e.attr(n,s):e.html(s)}},noTranslationState=function(){return"true"==window.localStorage.getItem("noTranslationState")},noTranslationStateToggle=function(){window.localStorage.setItem("noTranslationState",!noTranslationState())},addNoTranslationStateButton=function(){var e=`
		
		<button style="
			float: right;
			font-size: 16px;
			padding: 4px 12px;
		"
		onclick="
		window.location.replace('gmmt://'+document.location.hash)
		"
		>打开编辑器</button>

		<button style="
			float: right;
			font-size: 16px;
			padding: 4px 12px;
		"
		onclick="
		noTranslationStateToggle();
		location.reload();
    	event.stopPropagation();
		"
		>切换翻译</button>
		`;$(".header").length?$(".header").append(e):($(".topic-header").append(e),$(".topic-header button").css("position","relative").css("top","44px"))},removeExtensionFromHash=function(e){return e.replaceAll("#t=","").replaceAll("%2F","/").replaceAll(".htm","")};let json_global,json_file={"An Asynchronous Event is one that is fired off when {}GameMaker{} receives a {}callback{}&nbsp;from some external source, which can be from the web or from the device running your game. Basically, you tell {}GameMaker{} to do something -&nbsp;like load an image -&nbsp;and it'll start to do this but continue doing whatever it else it has to do meanwhile its working. Then, when the request has been completed, a callback will be sent to GameMaker Studio 2 and any Asynchronous Events defined for that type of callback will be fired.":"异步事件是当 {}GameMaker{} 从某些外部来源 (可以来自 Web 或运行游戏的设备) 接收到 {} 回调 {} 时触发的事件。基本上，你告诉 {}GameMaker{} 做一些事情 —— 比如加载图像 —— 它会开始这样做，但在工作的同时继续做它必须做的任何事情。然后，当请求完成时，将向 GameMaker 发送回调Studio 2 和为该类型回调定义的任何异步事件都将被触发。","An Asynchronous Event is one that is fired when {}GameMaker{} receives a {}callback{}&nbsp;from some external source, which can be from the web or from the device running your game.":"异步事件是指当{}GameMaker{}从外部源(可以是Web或运行游戏的设备)接收到{}回调{}时触发的事件。","Async Image Loaded Event":"异步图像加载事件","Audio Playback":"音频回放","Audio Playback Ended":"音频播放结束","Audio Recording":"音频录制","Basically, you tell {}GameMaker{} to do something -&nbsp;like load an image -&nbsp;and it will start to do this. As an example, let's say you want to add a sprite from an external file. This can be done {}synchronously{} or&nbsp;{}asynchronously{}. To do this synchronously, you use the function&nbsp;{}{}sprite_add{}{}:&nbsp;":"基本上，你告诉{}GameMaker{}做一些事情-比如加载一个图像-它会开始这样做。作为一个例子，让我们假设你想从一个外部文件添加一个精灵。这可以{}同步{}或{}异步{}完成。要同步完成这一点，你使用函数{}{}sprite_add{}{}：",Cloud:"云",Dialog:"对话框","Image Loaded":"图像加载","In App Purchase":"在应用程序购买","In the example of&nbsp;{}{}sprite_add{}{}, you can use its asynchronous counterpart&nbsp;{}{}sprite_add_ext{}{}&nbsp;to just&nbsp;{}start{} loading the sprite and trigger an async event afterwards:&nbsp;":"在{}{}sprite_add{}{}的示例中，您可以使用其异步对应项{}{}sprite_add_ext{}{}来{}开始{}加载sprite，然后触发一个sprite事件：","It may be that if you are making extensions for different platforms you would like to target one or more of these asynchronous events for callbacks from your extension functions. To that end, you can find a table below that outlines each of the internal event name constants and their corresponding ID value.":"如果你正在为不同的平台做扩展，你可能希望从你的扩展函数中回调一个或多个异步事件。为此，你可以找到下面的表格，列出每个内部事件名称常量和它们对应的ID值。","It may be that if you are making extensions for different platforms you would like to target one or more of these asynchronous events for callbacks from your extension functions. To that end, you can find a table below that outlines each of the internal event name constants and their corresponding ID value. Note that these event constants are {}only{} for use with extensions!":"如果您正在为不同的平台进行扩展，您可能希望将这些异步事件中的一个或多个定位为扩展函数的回调。为此，您可以在下面找到一个表格，概述了每个内部事件名称常量及其对应的ID值。请注意，这些事件常量{}仅{}用于扩展！",Networking:"联网","Please note that the Asynchronous Events are fired for {}all {}instances that have them, much like the keyboard events, so you can - for example - do an {}http_get(){} call&nbsp;in one instance, yet have the {}Asynchronous HTTP Event{} in another to deal with the callback.":"请注意，异步事件是为 {} 所有 {} 具有它们的实例触发的，就像键盘事件一样，因此您可以在一个实例中执行 {}http_get(){} 调用，但在另一个实例中使用 {} 异步 HTTP 事件 {} 来处理回调。","Please note that the Asynchronous Events are fired for {}all {}instances that have them, much like the keyboard events, so you can - for example - do an&nbsp;{}{}http_get{}{} call&nbsp;in one instance, yet have the {}Asynchronous HTTP Event{} in another to deal with the callback.":"请注意，异步事件会为 {} 所有 {} 具有它们的实例触发，这与键盘事件非常相似，因此您可以在一个实例中执行 {}{}http_get{}{} 调用，但在另一个实例中使用 {} 异步 HTTP 事件 {} 来处理回调。","Push Notifications":"推送通知","Save / Load":"保存/加载",Social:"社交",System:"系统","The Async Events":"异步事件","The&nbsp;{}Async Events{}":"{}异步事件{}","There are various types of events associated with the Asynchronous event category, and they are all explained in the sections below:":"有多种类型的事件与异步事件类别相关联，它们都在以下部分中进行了解释：","There are&nbsp;other situations in which you don't want the game to wait until something that might take an amount of time to complete has finished, such as making HTTP requests to a web server.":"还有其他一些情况，您不希望游戏等待可能需要大量时间才能完成的事情完成，例如向Web服务器发出HTTP请求。","This function has a bit&nbsp;of a disadvantage, however, as it&nbsp;{}fully l{}oads the sprite immediately{}{}. The next line&nbsp;of code will&nbsp;only be executed after that's finished!&nbsp;This may barely be noticeable if you're just adding a single small sprite, but might freeze your game when loading&nbsp;one big sprite&nbsp;or many small&nbsp;ones.":"但是这个函数有一个缺点，因为它会立即{}完全加载精灵{}{}。下一行代码只有在加载完成后才会执行！如果你只是添加一个小精灵，这可能不会被注意到，但是当加载一个大精灵或许多小精灵时，可能会冻结你的游戏。","You don't always have to call a function yourself first in&nbsp;order to receive a callback in the form&nbsp;of an async event, for example the async&nbsp;{}System{}&nbsp;event will be triggered when a gamepad is connected&nbsp;or disconnected. For this you don't have to call a function first.":"您不必总是先自己调用函数才能接收异步事件形式的回调，例如，当游戏手柄连接或断开连接时，将触发异步 {}System{} 事件。 为此，您不必先调用函数。",'{}/// "The sprite you requested has finished loading"{}':'{}///"您请求的精灵已完成加载"{}',"{}GameMaker{} also has built-in functions that work {}asynchronously{} instead. Using these functions {}GameMaker{}&nbsp;only&nbsp;{}starts{} doing what you asked, but doesn't stop executing code until this has finished. It continues to process your async request \"in the background\" and continues to run the rest of your game's code normally. When the request completes, a callback will be sent to {}GameMaker{}&nbsp;and any Asynchronous Events defined for that type of callback will be fired.":"{}GameMaker{} 也有 {} 异步 {} 工作的内置函数。使用这些函数，{}GameMaker{} 只会 {} 开始 {} 执行您要求的操作，但不会停止执行代码，直到完成。它会继续在后台处理您的 GameMaker 请求，并继续正常运行游戏的其余代码。当请求完成时，一个回调将被发送到 {}GameMaker{}，并且为该类型的回调定义的任何异步事件将被触发。","{}NOTE{}: The variable {}{}{}async_load{}{}{}&nbsp; which is mentioned in the following sections is {}only valid in these events{}, as the DS map that it&nbsp;points to is created at the start of the event, then deleted again at the end, with this variable being reset to a value of -1 at all other times.":"{} 注意 {}：变量 {}{}{}async_load{}{}{}在以下部分中，{} 仅在这些事件 {} 中有效，因为它指向的 DS 映射是在事件开始时创建的，然后在结束时再次删除，此变量在所有其他时间都被重置为 -1 值。","{}NOTE{}: You should be aware that due to XSS protection in browsers, requests and attempts to load resources from across domains are blocked and may appear to return blank results when using any of the following events.":"{}注意{}：您应该知道，由于浏览器中的XSS保护，从跨域加载资源的请求和尝试会被阻止，并且在使用以下任何事件时可能会返回空白结果。",'{}var{} _new_big_sprite = {}sprite_add_ext{}({}"my_new_sprite_image.png"{}, {}1{}, {}0{}, {}0{}, {}true{});{} {} {}// A lot more code below this line that will be executed almost instantly after the call to sprite_add_ext {}':'{}var{} _new_big_sprite = {}sprite_add_ext{}({}"my_new_sprite_image.png"{}, {}1{}, {}0{}, {}0{}, {}true{});{} {} {}// 在这一行下面有更多的代码，在调用sprite_add_ext之后几乎立即执行{}','{}var{} _new_big_sprite = {}sprite_add{}({}"my_new_sprite_image.png"{}, {}1{}, {}false{}, {}true{}, {}0{}, {}0{});{} {} {}// A lot more code below this line that all needs to be executed&nbsp;on time to keep a steady FPS {}':'{}var{} _new_big_sprite = {}sprite_add{}({}"my_new_sprite_image.png"{}, {}1{}, {}false{}, {}true{}, {}0{}, {}0{});{} {} {}// 在这一行下面有很多代码，所有代码都需要按时执行，以保持稳定的FPS{}',"{}{}NOTE{}{}&nbsp;The variable&nbsp;{}{}async_load{}{} which is mentioned in the following sections is {}only valid in these events{}, as the {}DS map{} that it&nbsp;points to is created at the start of the event, then deleted again at the end, with this variable being reset to a value of {}-1{} at all other times.":"{}{}注意{}{}以下部分中提到的变量 {}{}async_load{}{} {}仅在这些事件中有效{}，因为它指向的 {}DS map{} 在事件开始时创建，然后在结束时再次删除，并且该变量在所有其他时间都会重置为值 {}-1{}。","{}{}NOTE{}{}&nbsp;These event constants are {}only{} for use with extensions!":"{}{}注意{}{}这些事件常量{}仅{}用于扩展！","{}{}NOTE{}{}&nbsp;You should be aware that due to XSS protection in browsers, requests and attempts to load resources from across domains are blocked and may appear to return blank results when using any of the following events.":"{}{}注意{}{}您应该注意，由于浏览器中的XSS保护，从跨域加载资源的请求和尝试会被阻止，并且在使用以下任何事件时可能会返回空白结果。"},get_json_global=$.ajax({url:"/global.json",type:"GET",dataType:"json",async:!1,success:function(e){json_global=e}});$(function(){if(addNoTranslationStateButton(),noTranslationState())return!1;$("div.footer a,h4,caption").each(function(){setTranslator($(this),json_global)}),$("p,h1,h2,h3,td,li,a,div.dropspotnote,figcaption").each(function(){setTranslator($(this),json_file)}),$("th,.warning,.important,.optional").each(function(){setTranslator($(this),json_global)}),$(".header").length&&(window.setInterval(function(){$("#toc-panel a:not('isTranslate')").each(function(){$(this).addClass("isTranslate"),setTranslator($(this),json_global)}),$(".GlossDefinitionText:not('isTranslate')").each(function(){$(this).addClass("isTranslate"),setTranslator($(this),json_global)})},250),console.log("成功啦!现在正在疯狂翻译菜单中!")),$(".tooltip").each(function(){setTranslator($(this),json_global,"title")})}),document.addEventListener("DOMContentLoaded",()=>{pangu.autoSpacingPage()})</script><script type="text/javascript" language="JavaScript">function reDo(){innerWidth==origWidth&&innerHeight==origHeight||location.reload()}4==parseInt(navigator.appVersion)&&"Netscape"==navigator.appName&&(origWidth=innerWidth,origHeight=innerHeight,onresize=reDo),onerror=null</script><style type="text/css">p.WebHelpNavBar{text-align:right}</style><script type="text/javascript">gCommonRootRelPath=gRootRelPath="../..",gTopicId="6.3.1.2"</script><script type="text/javascript" src="../../template/scripts/rh.min.js"></script><script type="text/javascript" src="../../template/scripts/common.min.js"></script><script type="text/javascript" src="../../template/scripts/topic.min.js"></script><script type="text/javascript" src="../../template/scripts/topicwidgets.min.js"></script><script type="text/javascript" src="../../whxdata/projectsettings.js"></script><link rel="stylesheet" type="text/css" href="../../template/styles/topic.min.css"><link rel="stylesheet" type="text/css" href="../../template/Charcoal_Grey/topicheader.css"><meta name="topic-status" content="Draft"><meta http-equiv="Content-Type" content="text/html; charset=utf-8"><title>Async Events</title><meta name="generator" content="Adobe RoboHelp 2022"><meta name="rh-authors" content="Mark Alexander"><meta name="topic-comment" content="Page detailing the async events."><meta name="rh-index-keywords" content="Objects - Async Events"><meta name="search-keywords" content="Async Events,asynchronous,image loaded,audio playback,audio recording,cloud,dialog,http,in-app-purchase,networking,push notification,save/load,social,steam,system,audio playback ended"><link rel="stylesheet" type="text/css" href="../../assets/css/default.css"><script src="../../assets/scripts/main_script.js" type="module"></script><meta name="brsnext" value="The_Asset_Editors/Object_Properties/Async_Events/Audio_Playback.htm"><meta name="brsprev" value="The_Asset_Editors/Object_Properties/Draw_Events.htm"></head><body><div class="topic-header rh-hide" id="rh-topic-header"><div class="logo"></div><div class="nav"><div class="title" title="Async Events"><span>Async Events</span></div><div class="gotohome" title="Click here to see this page in full context"><a href="#" onclick="rh._.goToFullLayout()">Click here to see this page in full context</a></div></div></div><div class="topic-header-shadow rh-hide" id="rh-topic-header-shadow"></div><h1>The&nbsp;<span data-field="title" data-format="default">Async Events</span></h1><p><img alt="The Async Event" class="center" height="322" src="../../assets/Images/Asset_Editors/Editor_Objects_Async.png" width="344"></p><p>An Asynchronous Event is one that is fired when <span data-keyref="GameMaker Name">GameMaker</span> receives a <a class="tooltip" title="A callback is simply a function that runs and then triggers another function (or code block) when it has finished doing whatever it was assigned to do. For example, the funtion sprite_add() will trigger a callback in the asynchronous Image Loaded event when the sprite has been loaded.">callback</a>&nbsp;from some external source, which can be from the web or from the device running your game.</p><p>Basically, you tell <span data-keyref="GameMaker Name">GameMaker</span> to do something -&nbsp;like load an image -&nbsp;and it will start to do this. As an example, let's say you want to add a sprite from an external file. This can be done <em>synchronously</em> or&nbsp;<em>asynchronously</em>. To do this synchronously, you use the function&nbsp;<span class="inline3_func"><a href="../../GameMaker_Language/GML_Reference/Asset_Management/Sprites/Sprite_Manipulation/sprite_add.htm">sprite_add</a></span>:&nbsp;</p><p class="code">var _new_big_sprite = sprite_add("my_new_sprite_image.png", 1, false, true, 0, 0);<br><br>// A lot more code below this line that all needs to be executed&nbsp;on time to keep a steady FPS</p><p>This function has a bit&nbsp;of a disadvantage, however, as it&nbsp;<em>fully l<em>oads the sprite immediately</em></em>. The next line&nbsp;of code will&nbsp;only be executed after that's finished!&nbsp;This may barely be noticeable if you're just adding a single small sprite, but might freeze your game when loading&nbsp;one big sprite&nbsp;or many small&nbsp;ones.</p><p><span data-keyref="GameMaker Name">GameMaker</span> also has built-in functions that work <em>asynchronously</em> instead. Using these functions <span data-keyref="GameMaker Name">GameMaker</span>&nbsp;only&nbsp;<em>starts</em> doing what you asked, but doesn't stop executing code until this has finished. It continues to process your async request "in the background" and continues to run the rest of your game's code normally. When the request completes, a callback will be sent to <span data-keyref="GameMaker Name">GameMaker</span>&nbsp;and any Asynchronous Events defined for that type of callback will be fired.</p><p>In the example of&nbsp;<span class="inline3_func"><a href="../../GameMaker_Language/GML_Reference/Asset_Management/Sprites/Sprite_Manipulation/sprite_add.htm">sprite_add</a></span>, you can use its asynchronous counterpart&nbsp;<span class="inline3_func"><a href="../../GameMaker_Language/GML_Reference/Asset_Management/Sprites/Sprite_Manipulation/sprite_add_ext.htm">sprite_add_ext</a></span>&nbsp;to just&nbsp;<em>start</em> loading the sprite and trigger an async event afterwards:&nbsp;</p><p class="code">var _new_big_sprite = sprite_add_ext("my_new_sprite_image.png", 1, 0, 0, true);<br><br>// A lot more code below this line that will be executed almost instantly after the call to sprite_add_ext</p><p class="code_heading">Async Image Loaded Event</p><p class="code">/// "The sprite you requested has finished loading"</p><p>There are&nbsp;other situations in which you don't want the game to wait until something that might take an amount of time to complete has finished, such as making HTTP requests to a web server.</p><p>You don't always have to call a function yourself first in&nbsp;order to receive a callback in the form&nbsp;of an async event, for example the async&nbsp;<a href="Async_Events/System.htm">System</a>&nbsp;event will be triggered when a gamepad is connected&nbsp;or disconnected. For this you don't have to call a function first.</p><p>Please note that the Asynchronous Events are fired for <em>all</em> instances that have them, much like the keyboard events, so you can - for example - do an&nbsp;<span class="inline3_func"><a href="../../GameMaker_Language/GML_Reference/Asynchronous_Functions/HTTP/http_get.htm">http_get</a></span> call&nbsp;in one instance, yet have the <strong>Asynchronous HTTP Event</strong> in another to deal with the callback.</p><p class="note"><span data-conref="../../assets/snippets/Tag_note.hts"><span class="note">NOTE</span></span>&nbsp;You should be aware that due to XSS protection in browsers, requests and attempts to load resources from across domains are blocked and may appear to return blank results when using any of the following events.</p><p>There are various types of events associated with the Asynchronous event category, and they are all explained in the sections below:</p><p class="note"><span data-conref="../../assets/snippets/Tag_note.hts"><span class="note">NOTE</span></span>&nbsp;The variable&nbsp;<span class="inline2"><a href="../../GameMaker_Language/GML_Overview/Variables/Builtin_Global_Variables/async_load.htm">async_load</a></span> which is mentioned in the following sections is <strong>only valid in these events</strong>, as the <a href="../../GameMaker_Language/GML_Reference/Data_Structures/DS_Maps/DS_Maps.htm">DS map</a> that it&nbsp;points to is created at the start of the event, then deleted again at the end, with this variable being reset to a value of <span class="inline2">-1</span> at all other times.</p><ul class="colour"><li><a href="Async_Events/Audio_Playback.htm">Audio Playback</a></li><li><a href="Async_Events/Audio_Playback_Ended.htm">Audio Playback Ended</a></li><li><a href="Async_Events/Audio_Recording.htm">Audio Recording</a></li><li><a href="Async_Events/Cloud.htm">Cloud</a></li><li><a href="Async_Events/Dialog.htm">Dialog</a></li><li><a href="Async_Events/HTTP.htm">HTTP</a></li><li><a href="Async_Events/IAP.htm">In App Purchase</a></li><li><a href="Async_Events/Image_Loaded.htm">Image Loaded</a></li><li><a href="Async_Events/Networking.htm">Networking</a></li><li><a href="Async_Events/Push_Notifications.htm">Push Notifications</a></li><li><a href="Async_Events/Save_Load.htm">Save / Load</a></li><li><a href="Async_Events/Social.htm">Social</a></li><li><a href="Async_Events/Steam.htm">Steam</a></li><li><a href="Async_Events/System.htm">System</a></li></ul><p>&nbsp;</p><p>It may be that if you are making extensions for different platforms you would like to target one or more of these asynchronous events for callbacks from your extension functions. To that end, you can find a table below that outlines each of the internal event name constants and their corresponding ID value.</p><p class="note"><span data-conref="../../assets/snippets/Tag_note.hts"><span class="note">NOTE</span></span>&nbsp;These event constants are <b>only</b> for use with extensions!</p><p>&nbsp;</p><table id="async_event_constants" style="caption-side:top"><caption>Async Event Constants</caption><tbody><tr><th width="40%">Constant</th><th>Value</th></tr><tr><td><b>EVENT_OTHER_WEB_IMAGE_LOAD&nbsp;</b></td><td style="text-align:center"><span style="text-align:center">60</span></td></tr><tr><td><span style="text-align:center"><b>EVENT_OTHER_WEB_SOUND_LOAD&nbsp;</b></span></td><td style="text-align:center"><span style="text-align:center">61</span></td></tr><tr><td><span style="text-align:center"><b>EVENT_OTHER_WEB_ASYNC&nbsp;</b></span></td><td style="text-align:center"><span style="text-align:center">62</span></td></tr><tr><td><span style="text-align:center"><b>EVENT_OTHER_DIALOG_ASYNC&nbsp;</b></span></td><td style="text-align:center"><span style="text-align:center">63</span></td></tr><tr><td><span style="text-align:center"><b>EVENT_OTHER_WEB_IAP&nbsp;</b></span></td><td style="text-align:center"><span style="text-align:center">66</span></td></tr><tr><td><span style="text-align:center"><b>EVENT_OTHER_WEB_CLOUD&nbsp;</b></span></td><td style="text-align:center"><span style="text-align:center">67</span></td></tr><tr><td><span style="text-align:center"><b>EVENT_OTHER_WEB_NETWORKING&nbsp;</b></span></td><td style="text-align:center"><span style="text-align:center">68</span></td></tr><tr><td><span style="text-align:center"><b>EVENT_OTHER_WEB_STEAM&nbsp;</b></span></td><td style="text-align:center">69</td></tr><tr><td><span style="text-align:center"><b>EVENT_OTHER_SOCIAL&nbsp;</b></span></td><td style="text-align:center"><span style="text-align:center">70</span></td></tr><tr><td><span style="text-align:center"><b>EVENT_OTHER_PUSH_NOTIFICATION&nbsp;</b></span></td><td style="text-align:center"><span style="text-align:center">71</span></td></tr><tr><td><span style="text-align:center"><b>EVENT_OTHER_ASYNC_SAVE_LOAD&nbsp;</b></span></td><td style="text-align:center"><span style="text-align:center">72</span></td></tr><tr><td><span style="text-align:center"><b>EVENT_OTHER_AUDIO_RECORDING&nbsp;</b></span></td><td style="text-align:center"><span style="text-align:center">73</span></td></tr><tr><td><span style="text-align:center"><b>EVENT_OTHER_AUDIO_PLAYBACK&nbsp;</b></span></td><td style="text-align:center"><span style="text-align:center">74</span></td></tr><tr><td><span style="text-align:center"><b>EVENT_OTHER_SYSTEM_EVENT&nbsp;</b></span></td><td style="text-align:center"><span style="text-align:center">75</span></td></tr><tr><td><strong>EVENT_OTHER_MESSAGE_EVENT&nbsp;</strong></td><td style="text-align:center">76</td></tr></tbody></table><p>&nbsp;</p><p>&nbsp;</p><div class="footer"><div class="buttons"><div class="clear"><div style="float:left">Back: <a href="Object_Events.htm">Object Events</a></div><div style="float:right">Next: <a href="Gesture_Events.htm">Gesture Events</a></div></div></div><h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2024 All Rights Reserved</span></h5></div></body></html>