<!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml"><head><script type="text/javascript" src="../assets/import/jquery-3.6.1.min.js"></script><script type="text/javascript" src="../assets/import/layer/layer.js"></script><script type="text/javascript" src="../assets/import/pangu.min.js"></script><link rel="stylesheet" type="text/css" href="../assets/import/layer/layui_btn.css"><link rel="stylesheet" type="text/css" href="../assets/import/layer/layui_col.css"><link rel="stylesheet" type="text/css" href="../assets/import/layer/theme/default/layer.css"><link rel="stylesheet" type="text/css" href="../assets/import/main.css"><script>let str;removeHtml=function(e){return e=(e=(e=(e=e.replace(/(<([^>]+)>)/gi,"{}")).replace(/\r\n/g,"\n")).replace(/\n/g,"")).replace(/ {2,}/g," ")},retHtml=function(e){return e.match(/(<([^>]+)>)/gi)},setTranslator=function(e,t,n){let a;a=n?e.attr(n):e.html();let i=t[removeHtml(a)];if(null!=i&&i.length){t=retHtml(a);let o=0;t&&t.forEach(function(e,t){var n=i.replace("{"+o+"}",e);i=n===i?i.replace("{}",e):n,o++}),n?e.attr(n,i):e.html(i)}},noTranslationState=function(){return"true"==window.localStorage.getItem("noTranslationState")},noTranslationStateToggle=function(){window.localStorage.setItem("noTranslationState",!noTranslationState())},addNoTranslationStateButton=function(){var e=`
		
		<button style="
			float: right;
			font-size: 16px;
			padding: 4px 12px;
		"
		onclick="
		window.location.replace('gmmt://'+document.location.hash)
		"
		>打开编辑器</button>

		<button style="
			float: right;
			font-size: 16px;
			padding: 4px 12px;
		"
		onclick="
		noTranslationStateToggle();
		location.reload();
    	event.stopPropagation();
		"
		>切换翻译</button>
		`;$(".header").length?$(".header").append(e):($(".topic-header").append(e),$(".topic-header button").css("position","relative").css("top","44px"))},removeExtensionFromHash=function(e){return e.replaceAll("#t=","").replaceAll("%2F","/").replaceAll(".htm","")};let json_global,json_file={"An extension you're using may have options, which will be displayed at the bottom of the Extension Editor window:":"你正在使用的扩展可能有选项，这些选项将显示在扩展编辑器窗口的底部。","An {}extension package{} can be used to add a number of additional functions and {}constant{}{}s{} to the GameMaker Language (GML) and easily transfer them between projects. Extension functions can also be linked to external {}SDK{}{}s{} or {}source code{} written in other languages (like Java for Android, Objective-C for iOS, etc.) which can be used to expand your game's functionality (usually used for implementing third party APIs, such as for ads, in-app purchases, and more).":"一个{}扩展包{}可以用来在GameMaker语言（GML）中添加一些额外的函数和{}常量{}{}{}，并在项目之间轻松转移它们。扩展函数也可以链接到外部{}SDK{}{}{}或用其他语言编写的{}源代码{}（如Android的Java，iOS的Objective-C等），可以用来扩展你的游戏功能（通常用于实现第三方API，如用于广告、应用内购买等）。","An {}extension package{} can be used to add a number of additional functions and {}constant{}{}s{} to the GameMaker Language (GML) and easily transfer them between projects. Extension functions can also be linked to external {}SDK{}{}s{} or {}source code{} written in other languages (like Java for Android, Objective-C for iOS, etc.), which can be used to expand your game's functionality (usually used for implementing third party APIs, such as for ads, in-app purchases, and more).":"一个{}扩展包{}可以用来在GameMaker语言（GML）中添加一些额外的函数和{}常量{}{}{}，并在项目之间轻松转移它们。扩展函数也可以链接到外部{}SDK{}{}{}或用其他语言编写的{}源代码{}（如Android的Java，iOS的Objective-C等），可以用来扩展你的游戏功能（通常用于实现第三方API，如用于广告、应用内购买等）。","Android Extensions":"Android 扩展","Calling Extension Functions":"调用扩展函数","Creating An Extension":"创建一个扩展","Extension Options":"扩展选项","Extensions can be used for creating a library of functions that you use frequently across all your projects, so&nbsp;instead of having to import the same scripts into every project, you can simply add one extension asset that holds a collection of your favourite functions and constants. Such functions can also be specific to a certain platform, and you can easily choose which platforms an extension can be used on.":"扩展可以用来创建一个在所有项目中经常使用的函数库，因此不必将相同的脚本导入到每个项目中，您可以简单地添加一个扩展资源，其中包含您最喜欢的函数和常量的集合。这些功能也可以特定于某个平台，您可以轻松地选择扩展可以在哪个平台上使用。","For a step-by-step example on creating an extension, see:&nbsp;{}Creating An Extension{}":"有关创建扩展的逐步示例，请参见: {}创建扩展{}","For example, if you enable this for a {}.zip{} file in your extension and then start a {}macOS {}build from Windows, that {}.zip{} archive will be copied over as-is from Windows to macOS and will then be uncompressed during compilation on the target platform (which, in this context, is macOS).":"例如，如果你对扩展中的{}.zip{}文件启用了这个功能，然后从Windows启动{}macOS {}构建，那么{}.zip{}存档将被原样从Windows复制到macOS，然后在目标平台（在这里是指macOS）上编译时被解压缩。","If you want to create your own extensions, then you can find the basic required information from the following pages:":"如果你想创建自己的扩展，那么你可以从以下网页中找到基本的所需信息。","Importing Extensions":"导入扩展插件","Legacy versions of GameMaker had a lot of 3rd party functionality built in, but this was inefficient and difficult to maintain, since if any specific functionality was changed by the third party, then the whole GameMaker {}IDE{} and {}Runtime{} would have to be updated. So, current versions have adopted the use of extensions packages to add third party support to your games. This means that you can add only those extra functions that you require and that you can even adapt and edit them to suit your specific needs.":"传统版本的GameMaker内置了很多第三方功能，但这是低效且难以维护的，因为如果第三方改变了任何特定的功能，那么整个GameMaker的{}IDE{}和{}Runtime{}就必须要更新。所以，目前的版本采用了使用扩展包来为你的游戏添加第三方支持。这意味着你可以只添加那些你需要的额外功能，你甚至可以调整和编辑它们以适应你的特定需求。","Most of these extensions will be downloaded and installed for you when you select a specific {}Game Options{} (like Facebook or Google Mobile Ads, for example), but you can find further information on them from the appropriate section for each platform on the GameMaker&nbsp;Knowledge Base:":"当你选择特定的{}游戏选项{}时，大多数这些扩展将为你下载和安装（例如Facebook或谷歌移动广告），但你可以从GameMaker&nbsp;知识库中每个平台的相应部分找到关于它们的进一步信息。","Normally 3rd party extensions will be from the {}GameMaker Marketplace{}, and those you have subscribed to will then be listed in the {}Marketplace Library{} window which can be installed from there.&nbsp;If you did not get your extension package from the Marketplace, you can still add it to a project by right-clicking {}&nbsp;anywhere in the {}Asset Browser{} and selecting {}Add Existing{}, then browsing to the location of the extension&nbsp;to select it.":"一般来说，第三方扩展将来自于{}GameMaker Marketplace{} ，那些你已经订阅的扩展将会在{}市场库{}窗口中列出，这个窗口可以从那里安装。如果您没有从 Marketplace 获得扩展包，您仍然可以通过在{5}资源浏览器{6}中的任何地方右键单击{}并选择{}添加现有{} ，然后浏览到扩展的位置来选择它来将其添加到项目中。","Note that for different platforms your extensions can share function names, so if you have an extension with distinct files to (for example) pop up a message on Windows and for Android, both extension files can share the same function names as long as they are both set to export only to their respective platforms.":"请注意，对于不同的平台，你的扩展可以共享功能名称，因此，如果你有一个不同的扩展文件，（例如）在Windows和Android上弹出一个消息，只要它们都被设置为只输出到各自的平台，这两个扩展文件可以共享相同的功能名称。","Note that these extensions come with a demo and a help file (in {}*.pdf{} format) that explain&nbsp;how to use them, and as such their functions are not covered in this manual.":"请注意，这些扩展程序都有一个演示和一个帮助文件（{}*.pdf{}格式），解释如何使用它们，因此它们的功能在本手册中没有涉及。","Official 3rd Party Extensions":"官方的第三方扩展","Official Marketplace Assets":"官方市场资源","Once you have added an extension to the Asset Browser, you should give it a name and a version number and also set which platforms you want to export it to. By unchecking selected platforms, you can tell {}GameMaker{} to not export the extension as part of the executable for those platforms. You should also ensure that the extension properties match up with the selected target platform(s), and select compatible&nbsp;export targets for the extension files based on the following:":"一旦你在资源浏览器中添加了一个扩展，你应该给它一个名字和一个版本号，同时设置你想把它导出到哪些平台。通过取消选中的平台，你可以告诉{}GameMaker{}不把扩展作为这些平台的可执行文件的一部分导出。你还应该确保扩展的属性与选定的目标平台相匹配，并根据以下内容为扩展文件选择兼容的导出目标。","Once you have set up your extension, you can use the functions and constants for it just as you would the built-in functions and constants used in the GameMaker Language. If your game is cross-platform (for example, it is designed to run on&nbsp;Windows and Android targets), then you should use the {}OS constants and functions{} to check the current platform before calling extension specific functions to prevent issues, for example:":"一旦你设置了你的扩展，你就可以像使用GameMaker语言中的内置函数和常量一样使用它的函数和常量。如果你的游戏是跨平台的（例如，它被设计为在&nbsp;Windows和Android目标上运行），那么你应该使用{}OS常量和函数{}，在调用扩展的特定函数之前检查当前的平台，以防止问题，例如：","Since an extension can have various associated files, it's possible to create a single extension for multiple platforms, in which case you want to specify {}all {}the compatible platforms in the main extension editor (i.e.: tick the checkbox beside them) and then in the individual file properties for each part of the extension, set the platform that those files should be exported to.":"由于一个扩展可以有各种相关的文件，所以有可能为多个平台创建一个扩展，在这种情况下，你要在主扩展编辑器中指定{}所有{}的兼容平台（即：勾选旁边的复选框），然后在扩展的每个部分的个别文件属性中，设置这些文件应该被导出的平台。","Source Examples":"示例代码","Target Platforms":"目标平台",'The "Uncompress on build" option can be used for compressed archive files that are intended for a specific target platform. If this option is enabled, the contents of that archive will be extracted into the Included Files directory of the built package, but only after being copied over to the target platform.':'"构建时解压 "选项可用于为特定目标平台准备的压缩档案文件。如果这个选项被启用，该归档文件的内容将被解压缩到已建软件包的包含文件目录中，但只有在被复制到目标平台之后。',"The Extension Editor":"扩展编辑器","To change the target platform for a specific extension file or placeholder you must first open the extension properties (double click {}&nbsp;the extension in {}The Asset Browser{}), and then once in the extension properties select the resource file from the right that you want to edit. In the window that opens, you can select the platforms to which that specific file is exported:":"要更改特定扩展文件或占位符的目标平台，必须首先打开扩展属性 (在 {}资源浏览器{} 中双击 {0} 扩展)，然后在扩展属性中从右侧选择要编辑的资源文件。在打开的窗口中，可以选择要将该特定文件导出到的平台：","To change the target platform for a specific extension file or placeholder you must first open the extension properties (double click {}&nbsp;the extension in&nbsp;the Asset Browser), and then once in the extension properties select the resource file from the right that you want to edit. In the window that opens, you can select the platforms to which that specific file is exported:":"要改变特定扩展文件或占位符的目标平台，你必须首先打开扩展属性（在资源浏览器中双击{}&nbsp;扩展），然后在扩展属性中从右边选择你要编辑的资源文件。在打开的窗口中，你可以选择该特定文件所导出的平台。","To disable extensions based on target platform, see:&nbsp;{}How to Disable Extensions?{}":"若要基于目标平台禁用扩展，请参见: {}如何禁用扩展? {}","To set up options for your own extension, see:&nbsp;{}Creating Extension Options{}":"要为自己的扩展设置选项，请参阅：&nbsp;{}创建扩展选项{}。","Uncompress on Build":"建立时解压","You can find the extensions themselves from the following Marketplace page:":"你可以从以下市场页面找到这些扩展程序：","iOS / tvOS Extensions":"iOS / tvOS 扩展","{}All targets{}: GML extensions. These are extensions made using the GameMaker Language (GML) and are compatible with all target platforms. ({}{}{}Note that this is the only extension type that the GX.games target currently supports.{})":"{}所有目标{}：GML扩展。这些是使用GameMaker语言（GML）制作的扩展，与所有目标平台兼容。({}{}注意，这是GX.games目标目前唯一支持的扩展类型。{})","{}Android{}: This platform requires an extension to be written in {}Java{} or an {}Android Framework SDK{}.":"{}Android{}：该平台需要用{}Java{}或{}Android框架SDK{}编写扩展。","{}GameMaker{} Platforms And Setup":"{}GameMaker{} 的平台和设置","{}HTML5{}: These platforms can use {}JavaScript{} extensions.":"{}HTML5{}：这些平台可以使用{}JavaScript{}扩展。",'{}NOTE{}&nbsp;If you have a {}.yymps{}/{}.yymp{}/{}.gmez{} package, you can drag it into the IDE to import it, or go under the "Tools" menu and select "Import Local Package".':'{}注意{}&nbsp;如果你有一个{}.yymps{}/{}.yymp{}/{}.gmez{}包，你可以把它拖到IDE中导入，或者到 "工具 "菜单下选择 "导入本地包"。',"{}NOTE{}&nbsp;Some extensions are required to follow specific naming conventions for GameMaker to correctly identify the platform and CPU architecture they are designed for. Please see&nbsp;{}Naming Conventions{} for more information.":"{}注意{}一些扩展需要遵循特定的命名规则，以便GameMaker正确识别它们所设计的平台和CPU架构。请参阅{}命名规则{}了解更多信息。","{}PlayStation{}: For PlayStation your extensions should be {}PRX{} files, with each target requiring a different {}PRX{} to conform to specifications of the target (PS3, PS4 or PS5). If working on a PSVita, the extension should be {}SUPRX{} instead.":"{}PlayStation{}：对于PlayStation，你的扩展名应该是{}PRX{}文件，每个目标需要不同的{}PRX{}，以符合目标（PS3、PS4或PS5）的规格。如果在PSVita上工作，扩展名应该是{}SUPRX{}。","{}The Extension Editor{}":"{}扩展编辑器{}","{}These will be different depending on the extension, and not all of them may have options. Look at the documentation of the extension you're using for information on its options.":"{}这些将是不同的，取决于扩展，而且不是所有的扩展都有选项。请看你所使用的扩展的文档，了解其选项的信息。","{}Ubuntu (Linux){}: For the Ubuntu target you need to make sure that your extension uses {}.so{} files.":"{}Ubuntu（Linux）{}：对于Ubuntu目标，你需要确保你的扩展使用{}.so{}文件。",'{}Windows and Xbox{}: You can use Windows {}DLL{} files (Dynamic Link Libraries). Please note that if you have checked the "Use x64 Windows Runtime" in the {}Windows Game Options{}, then all DLLs for the project&nbsp;{}must be 64-bit compatible{}. 32-bit DLLs will not work with a 64-bit executable.':'{}Windows 和 Xbox{}：你可以使用Windows {}DLL{}文件（动态链接库）。请注意，如果你在{}Windows游戏选项{}中勾选了 "使用x64 Windows运行时"，那么项目的所有DLL都{}必须是64位兼容的{}。32位的DLL将无法与64位的可执行文件一起使用。',"{}iOS{}&nbsp;/ {}&nbsp;tvOS{}: Extensions for this platform are written in Objective C and require an&nbsp;{}*.mm{} and an&nbsp;{}*.h{} file, or if using any frameworks, a pre-compiled native&nbsp;{}*.a{}&nbsp;file.":"{}iOS{} / {}tvOS{}：该平台的扩展是用Objective C编写的，需要一个{}*.mm{}和一个{}*.h{}文件，如果使用任何框架，则需要一个预编译的本地{}*.a{}文件。","{}macOS{}: The macOS target can use the standard {}DyLib{} files for extensions.":"{}macOS{}：macOS目标可以使用标准的{}DyLib{}文件进行扩展。",'{}{}NOTE{}{}&nbsp;If you have a {}.yymps{}/{}.yymp{}/{}.gmez{} package, you can drag it into the IDE to import it, or go under the "Tools" menu and select "Import Local Package".':'{}{}注意{}{} 如果您有 {}.yymps{}/{}.yymp{}/{}.gmez{} 包，则可以将其拖到 IDE 中以导入它，或者转到"工具"菜单下并选择"导入本地包"。',"{}{}NOTE{}{}&nbsp;Some extensions are required to follow specific naming conventions for&nbsp;{}GameMaker{} to correctly identify the platform and CPU architecture they are designed for. Please see&nbsp;{}Naming Conventions{} for more information.":"{}{}注意{}{}某些扩展需要遵循{}GameMaker{}的特定命名约定，以正确识别其设计所针对的平台和CPU体系结构。有关详细信息，请参阅{}命名约定{}。"},get_json_global=$.ajax({url:"/global.json",type:"GET",dataType:"json",async:!1,success:function(e){json_global=e}});$(function(){if(addNoTranslationStateButton(),noTranslationState())return!1;$("div.footer a,h4,caption").each(function(){setTranslator($(this),json_global)}),$("p,h1,h2,h3,td,li,a,div.dropspotnote,figcaption").each(function(){setTranslator($(this),json_file)}),$("th,.warning,.important,.optional").each(function(){setTranslator($(this),json_global)}),$(".header").length&&(window.setInterval(function(){$("#toc-panel a:not('isTranslate')").each(function(){$(this).addClass("isTranslate"),setTranslator($(this),json_global)}),$(".GlossDefinitionText:not('isTranslate')").each(function(){$(this).addClass("isTranslate"),setTranslator($(this),json_global)})},250),console.log("成功啦!现在正在疯狂翻译菜单中!")),$(".tooltip").each(function(){setTranslator($(this),json_global,"title")})}),document.addEventListener("DOMContentLoaded",()=>{pangu.autoSpacingPage()})</script><script type="text/javascript" language="JavaScript">function reDo(){innerWidth==origWidth&&innerHeight==origHeight||location.reload()}4==parseInt(navigator.appVersion)&&"Netscape"==navigator.appName&&(origWidth=innerWidth,origHeight=innerHeight,onresize=reDo),onerror=null</script><style type="text/css">p.WebHelpNavBar{text-align:right}</style><script type="text/javascript">gCommonRootRelPath=gRootRelPath="..",gTopicId="6.2"</script><script type="text/javascript" src="../template/scripts/rh.min.js"></script><script type="text/javascript" src="../template/scripts/common.min.js"></script><script type="text/javascript" src="../template/scripts/topic.min.js"></script><script type="text/javascript" src="../template/scripts/topicwidgets.min.js"></script><script type="text/javascript" src="../whxdata/projectsettings.js"></script><link rel="stylesheet" type="text/css" href="../template/styles/topic.min.css"><link rel="stylesheet" type="text/css" href="../template/Charcoal_Grey/topicheader.css"><meta name="topic-status" content="Draft"><meta http-equiv="Content-Type" content="text/html; charset=utf-8"><title>The Extension Editor</title><meta name="generator" content="Adobe RoboHelp 2022"><link rel="stylesheet" href="../assets/css/default.css" type="text/css"><script src="../assets/scripts/main_script.js" type="module"></script><meta name="rh-authors" content="Mark Alexander"><meta name="topic-comment" content="Page detailing how the extension editor works"><meta name="rh-index-keywords" content="Extension Editor"><meta name="search-keywords" content="extensions,extension editor"><meta name="brsnext" value="The_Asset_Editors/Extension_Creation/Disabling_Extensions.htm"><meta name="brsprev" value="The_Asset_Editors/Animation_Curve_Properties/Animation_Curve_Library.htm"></head><body><div class="topic-header rh-hide" id="rh-topic-header"><div class="logo"></div><div class="nav"><div class="title" title="The Extension Editor"><span>The Extension Editor</span></div><div class="gotohome" title="Click here to see this page in full context"><a href="#" onclick="rh._.goToFullLayout()">Click here to see this page in full context</a></div></div></div><div class="topic-header-shadow rh-hide" id="rh-topic-header-shadow"></div><h1><span data-field="title" data-format="default">The Extension Editor</span></h1><p>An <strong>extension package</strong> can be used to add a number of additional functions and <a class="tooltip" title="A constant is a term used to describe a named value that does not change throughout the execution of the program. GameMaker Studio 2 has a number of built-in constants - for example os_windows - but you can also create your own constant values for use in your projects (called Macros) and extensions.">constant</a><span class="glossextra">s</span> to the GameMaker Language (GML) and easily transfer them between projects. Extension functions can also be linked to external <a class="tooltip" title="SDK stands for 'Software Development Kit'. This usually refers to a collection of software and/or packages used for developing applications for a specific device or operating system.">SDK</a><span class="glossextra">s</span> or <a class="tooltip" title="Source code is the fundamental component of a computer program that is required for the program to run.">source code</a> written in other languages (like Java for Android, Objective-C for iOS, etc.), which can be used to expand your game's functionality (usually used for implementing third party APIs, such as for ads, in-app purchases, and more).</p><p><img alt="Extensions Properties" class="center" src="../assets/Images/Asset_Editors/Editor_Extensions.png"></p><p>Extensions can be used for creating a library of functions that you use frequently across all your projects, so&nbsp;instead of having to import the same scripts into every project, you can simply add one extension asset that holds a collection of your favourite functions and constants. Such functions can also be specific to a certain platform, and you can easily choose which platforms an extension can be used on.</p><p>For a step-by-step example on creating an extension, see:&nbsp;<a href="Extension_Creation/Creating_An_Extension.htm">Creating An Extension</a></p><p>To disable extensions based on target platform, see:&nbsp;<a href="Extension_Creation/Disabling_Extensions.htm">How to Disable Extensions?</a></p><h2 id="importing_extensions">Importing Extensions</h2><p>Normally 3rd party extensions will be from the <a href="https://marketplace.yoyogames.com/">GameMaker Marketplace</a>, and those you have subscribed to will then be listed in the <a href="../Introduction/The_Marketplace.htm">Marketplace Library</a> window which can be installed from there.&nbsp;If you did not get your extension package from the Marketplace, you can still add it to a project by right-clicking <img alt="RMB Icon" class="icon" src="../assets/Images/Icons/Icon_RMB.png">&nbsp;anywhere in the <a href="../Introduction/The_Asset_Browser.htm">Asset Browser</a> and selecting <em>Add Existing</em>, then browsing to the location of the extension&nbsp;to select it.</p><p class="note"><span data-conref="../assets/snippets/Tag_note.hts"><span class="note">NOTE</span></span>&nbsp;If you have a <span class="inline">.yymps</span>/<span class="inline">.yymp</span>/<span class="inline">.gmez</span> package, you can drag it into the IDE to import it, or go under the "Tools" menu and select "Import Local Package".</p><h2 id="target_platforms">Target Platforms</h2><p>Once you have added an extension to the Asset Browser, you should give it a name and a version number and also set which platforms you want to export it to. By unchecking selected platforms, you can tell <span data-keyref="GameMaker Name">GameMaker</span> to not export the extension as part of the executable for those platforms. You should also ensure that the extension properties match up with the selected target platform(s), and select compatible&nbsp;export targets for the extension files based on the following:</p><ul class="colour"><li class="dropspot"><strong>All targets</strong>: GML extensions. These are extensions made using the GameMaker Language (GML) and are compatible with all target platforms. (<em></em><em>Note that this is the only extension type that the GX.games target currently supports.</em>)</li><li class="dropspot"><strong>Windows and Xbox</strong>: You can use Windows <span class="inline">DLL</span> files (Dynamic Link Libraries). Please note that if you have checked the "Use x64 Windows Runtime" in the <a href="../Settings/Game_Options/Windows.htm">Windows Game Options</a>, then all DLLs for the project&nbsp;<strong>must be 64-bit compatible</strong>. 32-bit DLLs will not work with a 64-bit executable.</li><li class="dropspot"><strong>macOS</strong>: The macOS target can use the standard <span class="inline">DyLib</span> files for extensions.</li><li class="dropspot"><strong>Ubuntu (Linux)</strong>: For the Ubuntu target you need to make sure that your extension uses <span class="inline">.so</span> files.</li><li class="dropspot"><strong>HTML5</strong>: These platforms can use <span class="inline">JavaScript</span> extensions.</li><li class="dropspot"><strong>Android</strong>: This platform requires an extension to be written in <span class="inline">Java</span> or an <span class="inline">Android Framework SDK</span>.</li><li class="dropspot"><strong>iOS</strong>&nbsp;/ <strong>&nbsp;tvOS</strong>: Extensions for this platform are written in Objective C and require an&nbsp;<span class="inline">*.mm</span> and an&nbsp;<span class="inline">*.h</span> file, or if using any frameworks, a pre-compiled native&nbsp;<span class="inline">*.a</span>&nbsp;file.</li><li class="dropspot"><strong>PlayStation</strong>: For PlayStation your extensions should be <span class="inline">PRX</span> files, with each target requiring a different <span class="inline">PRX</span> to conform to specifications of the target (PS3, PS4 or PS5). If working on a PSVita, the extension should be <span class="inline">SUPRX</span> instead.</li></ul><p class="note"><span data-conref="../assets/snippets/Tag_note.hts"><span class="note">NOTE</span></span>&nbsp;Some extensions are required to follow specific naming conventions for&nbsp;<span data-keyref="GameMaker Name">GameMaker</span> to correctly identify the platform and CPU architecture they are designed for. Please see&nbsp;<a href="Extension_Creation/Creating_An_Extension.htm#h">Naming Conventions</a> for more information.</p><p>Since an extension can have various associated files, it's possible to create a single extension for multiple platforms, in which case you want to specify <em>all</em> the compatible platforms in the main extension editor (i.e.: tick the checkbox beside them) and then in the individual file properties for each part of the extension, set the platform that those files should be exported to.</p><p>To change the target platform for a specific extension file or placeholder you must first open the extension properties (double click <img alt="LMB Icon" class="icon" src="../assets/Images/Icons/Icon_LMB.png">&nbsp;the extension in <a href="../Introduction/The_Asset_Browser.htm">The Asset Browser</a>), and then once in the extension properties select the resource file from the right that you want to edit. In the window that opens, you can select the platforms to which that specific file is exported:</p><p class="dropspot"><img alt="Extension Target Platforms" class="center" src="../assets/Images/Asset_Editors/Editor_Extensions_Targets.png"></p><h2 id="extension_options">Extension Options</h2><p>An extension you're using may have options, which will be displayed at the bottom of the Extension Editor window:</p><p><img class="center" src="../assets/Images/Asset_Editors/Editor_Extensions_Options_UserFacing.png">These will be different depending on the extension, and not all of them may have options. Look at the documentation of the extension you're using for information on its options.</p><p>To set up options for your own extension, see:&nbsp;<a href="Extension_Creation/Creating_An_Extension.htm#h1">Creating Extension Options</a></p><h2 id="uncompress_on_build">Uncompress on Build</h2><p>The "Uncompress on build" option can be used for compressed archive files that are intended for a specific target platform. If this option is enabled, the contents of that archive will be extracted into the Included Files directory of the built package, but only after being copied over to the target platform.</p><p>For example, if you enable this for a <span class="inline">.zip</span> file in your extension and then start a <strong>macOS</strong> build from Windows, that <span class="inline">.zip</span> archive will be copied over as-is from Windows to macOS and will then be uncompressed during compilation on the target platform (which, in this context, is macOS).</p><h2 id="calling_extension_functions">Calling Extension Functions</h2><p>Once you have set up your extension, you can use the functions and constants for it just as you would the built-in functions and constants used in the GameMaker Language. If your game is cross-platform (for example, it is designed to run on&nbsp;Windows and Android targets), then you should use the <a href="../GameMaker_Language/GML_Reference/OS_And_Compiler/OS_And_Compiler.htm">OS constants and functions</a> to check the current platform before calling extension specific functions to prevent issues, for example:</p><p class="code">switch (os_type)<br>{<br>&nbsp; &nbsp; case os_android:<br>&nbsp; &nbsp; &nbsp; &nbsp; call_android_extension_function(x, y, z);<br>&nbsp; &nbsp; break;<br><br>&nbsp; &nbsp; case os_windows:<br>&nbsp; &nbsp; &nbsp; &nbsp; call_windows_extension_function(x, y, z);<br>&nbsp; &nbsp; break;<br>}</p><p>Note that for different platforms your extensions can share function names, so if you have an extension with distinct files to (for example) pop up a message on Windows and for Android, both extension files can share the same function names as long as they are both set to export only to their respective platforms.</p><p>If you want to create your own extensions, then you can find the basic required information from the following pages:</p><ul class="colour"><li><a href="Extension_Creation/Creating_An_Extension.htm">Creating An Extension</a></li><li><a href="Extension_Creation/Android_Extensions.htm">Android Extensions</a></li><li><a href="Extension_Creation/iOS_Extensions.htm">iOS / tvOS Extensions</a></li><li><a href="Extension_Creation/HTML5_Extensions.htm">HTML5 Code Injection</a></li><li><a href="Extension_Creation/Extended_Examples.htm">Source Examples</a></li></ul><p>&nbsp;</p><h1>Official 3rd Party Extensions</h1><p>Legacy versions of GameMaker had a lot of 3rd party functionality built in, but this was inefficient and difficult to maintain, since if any specific functionality was changed by the third party, then the whole GameMaker <a class="tooltip" title="The IDE, or Integrated Development Environment, is a software application that provides comprehensive facilities to computer programmers for software development. In this case, the entire frontend of GameMaker Studio 2 is considered the IDE, and includes sections to create graphics, add sounds, and add code to make your games.">IDE</a> and <a class="tooltip" title="The runtime in GameMaker is the collection of compiler assets that is required by the program to create a final executable package for a given target platform. These are installed seperately from the IDE, and can be changed and updated at any time.">Runtime</a> would have to be updated. So, current versions have adopted the use of extensions packages to add third party support to your games. This means that you can add only those extra functions that you require and that you can even adapt and edit them to suit your specific needs.</p><p>Most of these extensions will be downloaded and installed for you when you select a specific <a href="../Settings/Game_Options.htm">Game Options</a> (like Facebook or Google Mobile Ads, for example), but you can find further information on them from the appropriate section for each platform on the GameMaker&nbsp;Knowledge Base:</p><ul class="colour"><li><a href="https://help.yoyogames.com/hc/en-us/categories/204246668-GameMaker"><span data-keyref="GameMaker Name">GameMaker</span> Platforms And Setup</a></li></ul><p>You can find the extensions themselves from the following Marketplace page:</p><ul class="colour"><li><a href="https://marketplace.yoyogames.com/publishers/23/yoyo-games">Official Marketplace Assets</a></li></ul><p>Note that these extensions come with a demo and a help file (in <span class="inline">*.pdf</span> format) that explain&nbsp;how to use them, and as such their functions are not covered in this manual.</p><p>&nbsp;</p><p>&nbsp;</p><div class="footer"><div class="buttons"><div class="clear"><div style="float:left">Back:&nbsp;<a href="The_Asset_Editors.htm">The Asset Editors</a></div><div style="float:right">Next:&nbsp;<a href="Fonts.htm">The Font Editor</a></div></div></div><h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2024 All Rights Reserved</span></h5></div></body></html>