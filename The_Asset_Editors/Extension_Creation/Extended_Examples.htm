<!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml"><head><script type="text/javascript" src="../../assets/import/jquery-3.6.1.min.js"></script><script type="text/javascript" src="../../assets/import/layer/layer.js"></script><script type="text/javascript" src="../../assets/import/pangu.min.js"></script><link rel="stylesheet" type="text/css" href="../../assets/import/layer/layui_btn.css"><link rel="stylesheet" type="text/css" href="../../assets/import/layer/layui_col.css"><link rel="stylesheet" type="text/css" href="../../assets/import/layer/theme/default/layer.css"><link rel="stylesheet" type="text/css" href="../../assets/import/main.css"><script>let str;removeHtml=function(e){return e=(e=(e=(e=e.replace(/(<([^>]+)>)/gi,"{}")).replace(/\r\n/g,"\n")).replace(/\n/g,"")).replace(/ {2,}/g," ")},retHtml=function(e){return e.match(/(<([^>]+)>)/gi)},setTranslator=function(e,n,t){let a;a=t?e.attr(t):e.html();let i=n[removeHtml(a)];if(null!=i&&i.length){n=retHtml(a);let o=0;n&&n.forEach(function(e,n){var t=i.replace("{"+o+"}",e);i=t===i?i.replace("{}",e):t,o++}),t?e.attr(t,i):e.html(i)}},noTranslationState=function(){return"true"==window.localStorage.getItem("noTranslationState")},noTranslationStateToggle=function(){window.localStorage.setItem("noTranslationState",!noTranslationState())},addNoTranslationStateButton=function(){var e=`
		
		<button style="
			float: right;
			font-size: 16px;
			padding: 4px 12px;
		"
		onclick="
		window.location.replace('gmmt://'+document.location.hash)
		"
		>打开编辑器</button>

		<button style="
			float: right;
			font-size: 16px;
			padding: 4px 12px;
		"
		onclick="
		noTranslationStateToggle();
		location.reload();
    	event.stopPropagation();
		"
		>切换翻译</button>
		`;$(".header").length?$(".header").append(e):($(".topic-header").append(e),$(".topic-header button").css("position","relative").css("top","44px"))},removeExtensionFromHash=function(e){return e.replaceAll("#t=","").replaceAll("%2F","/").replaceAll(".htm","")};let json_global,json_file={"Here is an example of the {}AddTwoNumbers(){} function:":"下面是{}AddTwoNumbers(){}函数的一个例子。","Our example extension for Android will contain functions that do the following:":"我们为Android提供的扩展实例将包含做以下工作的函数。","Return a string consisting of an input string and value":"返回一个由输入字符串和值组成的字符串","Return a string consisting of two input strings":"返回由两个输入字符串组成的字符串","Return two numbers added together":"返回两个数字相加的结果","Source Examples":"示例代码","The example provided for iOS is the same as the Android example given above; only the source files differ, which we'll cover in this section.":"为iOS提供的例子与上面给出的Android例子相同；只有源文件不同，我们将在本节介绍。","The {}ReturnAsync(){} function will trigger the&nbsp;{}Async - Social{} event, so you will need to add that event to your object and read data from its {}async_load{} map (which is filled by the extension's source code given above).":"{}ReturnAsync(){}函数将触发&nbsp;{}Async - Social{}事件，所以你需要将该事件添加到你的对象中，并从其{}async_load{}映射中读取数据（该映射由上面给出的扩展的源代码填充）。","This extension will make use of a {}.java{} file, the contents of which are given&nbsp;below (click to open):":"这个扩展将利用一个{}.java{}文件，其内容在下面给出&nbsp;（点击可打开）。","This page contains examples and information on extension source code for Android and iOS, to help you create your own native extensions for those platforms.":"本页包含Android和iOS的扩展源代码的例子和信息，以帮助你为这些平台创建你自己的本地扩展。",'To add such a file to your extension, you need to go under its&nbsp;{}Android Properties{}&nbsp;and first enter a class name (for this example, "GenericTest"),&nbsp;then&nbsp;click on "Add Source" and select the {}.java{} file. This will add the selected file to your project directory --&nbsp;you can&nbsp;right-click on your extension, select "Open in Explorer" and see the source files there.':'要在你的扩展中添加这样的文件，你需要在它的&nbsp;{}Android Properties{}&nbsp;下，首先输入一个类名（在这个例子中，是 "GenericTest"），&nbsp;然后&nbsp;点击 "Add Source"，选择{}.java{}文件。这将把选中的文件添加到你的项目目录中--&nbsp;你可以&nbsp;右键点击你的扩展名，选择 "在资源管理器中打开"，并在那里看到源文件。','To add these files to your extension, you first need to go under its {}iOS Properties{} and enter a class name (for this example, "GenericTest").&nbsp;You can then use either the "Enter framework path" option (if the files are present on your macOS machine used for building) or the "Add Source" option (if they are on your development machine); regardless of the option you use, you will need to point them to the directory that contains your {}.h{} and {}.mm{} files.':'要将这些文件添加到你的扩展中，你首先需要在它的{}iOS Properties{}下，输入一个类名（在这个例子中是 "GenericTest"）。&nbsp;然后你可以使用 "输入框架路径 "选项（如果这些文件存在于你用于构建的macOS机器上）或 "添加源代码 "选项（如果它们在你的开发机器上）；无论你使用哪个选项，你都需要将它们指向包含{}.h{}和{}.mm{}文件的那个目录。',"Trigger the {}Async - Social{} event and fill values in its {}async_load{} map":"触发{}Async - Social{}事件，并在其{}async_load{}映射中填充数值。","You can add these source files to the same extension that was set up in the previous section for Android, meaning that any functions already defined in that extension will now work on iOS too (given that the {}External Names{} of all functions on Android and iOS are the same). If you are creating a new extension, you can simply create the functions&nbsp;in the same way as previously described.":"你可以将这些源文件添加到上一节为Android设置的同一个扩展中，这意味着该扩展中已经定义的任何函数现在也可以在iOS上使用（鉴于Android和iOS上所有函数的{}外部名称{}都是一样的）。如果你正在创建一个新的扩展，你可以简单地创建函数&nbsp;，与之前描述的方式相同。","You can now add a new placeholder file to your extension and create functions inside it&nbsp;with the following properties:":"现在你可以在你的扩展中添加一个新的占位符文件，并在其中创建具有以下属性的函数&nbsp;。","You can use the following callback functions in your {}.java{} extension files:":"你可以在你的{}.java{}扩展文件中使用以下回调函数。","You can use the following callback functions in your {}.mm{} extension files:":"你可以在你的{}.mm{}扩展文件中使用以下回调函数。","iOS extensions make use of an {}.h{} and an {}.mm{} file, and the contents of both are given below (click to open):":"iOS扩展使用一个{}.h{}和一个{}.mm{}文件，两者的内容如下（点击打开）。","{}You can now call these functions from your game code and use them like&nbsp;any other built-in function:":"{}你现在可以从你的游戏代码中调用这些函数，并像其他内置函数一样使用它们。"},get_json_global=$.ajax({url:"/global.json",type:"GET",dataType:"json",async:!1,success:function(e){json_global=e}});$(function(){if(addNoTranslationStateButton(),noTranslationState())return!1;$("div.footer a,h4,caption").each(function(){setTranslator($(this),json_global)}),$("p,h1,h2,h3,td,li,a,div.dropspotnote,figcaption").each(function(){setTranslator($(this),json_file)}),$("th,.warning,.important,.optional").each(function(){setTranslator($(this),json_global)}),$(".header").length&&(window.setInterval(function(){$("#toc-panel a:not('isTranslate')").each(function(){$(this).addClass("isTranslate"),setTranslator($(this),json_global)}),$(".GlossDefinitionText:not('isTranslate')").each(function(){$(this).addClass("isTranslate"),setTranslator($(this),json_global)})},250),console.log("成功啦!现在正在疯狂翻译菜单中!")),$(".tooltip").each(function(){setTranslator($(this),json_global,"title")})}),document.addEventListener("DOMContentLoaded",()=>{pangu.autoSpacingPage()})</script><script type="text/javascript" language="JavaScript">function reDo(){innerWidth==origWidth&&innerHeight==origHeight||location.reload()}4==parseInt(navigator.appVersion)&&"Netscape"==navigator.appName&&(origWidth=innerWidth,origHeight=innerHeight,onresize=reDo),onerror=null</script><style type="text/css">p.WebHelpNavBar{text-align:right}</style><script type="text/javascript">gCommonRootRelPath=gRootRelPath="../..",gTopicId="6.2.0_6"</script><script type="text/javascript" src="../../template/scripts/rh.min.js"></script><script type="text/javascript" src="../../template/scripts/common.min.js"></script><script type="text/javascript" src="../../template/scripts/topic.min.js"></script><script type="text/javascript" src="../../template/scripts/topicwidgets.min.js"></script><script type="text/javascript" src="../../whxdata/projectsettings.js"></script><link rel="stylesheet" type="text/css" href="../../template/styles/topic.min.css"><link rel="stylesheet" type="text/css" href="../../template/Charcoal_Grey/topicheader.css"><meta name="topic-status" content="Draft"><meta http-equiv="Content-Type" content="text/html; charset=utf-8"><title>Source Examples</title><meta name="generator" content="Adobe RoboHelp 2022"><link rel="stylesheet" href="../../assets/css/default.css" type="text/css"><script src="../../assets/scripts/main_script.js" type="module"></script><meta name="rh-authors" content="Gurpreet S. Matharoo"><meta name="topic-comment" content="Page containing extended examples for extensions"><meta name="rh-index-keywords" content="Source Extension Examples"><meta name="search-keywords" content="source android ios extensions native"><meta name="brsnext" value="The_Asset_Editors/Fonts.htm"><meta name="brsprev" value="The_Asset_Editors/Extension_Creation/HTML5_Extensions.htm"></head><body><div class="topic-header rh-hide" id="rh-topic-header"><div class="logo"></div><div class="nav"><div class="title" title="Source Examples"><span>Source Examples</span></div><div class="gotohome" title="Click here to see this page in full context"><a href="#" onclick="rh._.goToFullLayout()">Click here to see this page in full context</a></div></div></div><div class="topic-header-shadow rh-hide" id="rh-topic-header-shadow"></div><h1>Source Examples</h1><p>This page contains examples and information on extension source code for Android and iOS, to help you create your own native extensions for those platforms.</p><p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down" href="#"><span data-open-text="true" data-skip-index="true">Android (Base Example)</span><span data-close-text="true">Android (Base Example)</span></a></p><div class="droptext" data-targetname="drop-down"><p>Our example extension for Android will contain functions that do the following:</p><ul class="dropspotlist"><li>Return two numbers added together</li><li>Return a string consisting of an input string and value</li><li>Return a string consisting of two input strings</li><li>Trigger the <a href="../Object_Properties/Async_Events/Social.htm">Async - Social</a> event and fill values in its <span class="inline">async_load</span> map</li></ul><p>This extension will make use of a <span class="inline">.java</span> file, the contents of which are given&nbsp;below (click to open):</p><p class="note"><a data-height="800" data-rhwidget="HyperlinkPopover" data-width="1000" href="Source_Files/GenericTest.htm">GenericTest.java</a></p><p>To add such a file to your extension, you need to go under its&nbsp;<a href="Android_Extensions.htm">Android Properties</a>&nbsp;and first enter a class name (for this example, "GenericTest"),&nbsp;then&nbsp;click on "Add Source" and select the <span class="inline">.java</span> file. This will add the selected file to your project directory --&nbsp;you can&nbsp;right-click on your extension, select "Open in Explorer" and see the source files there.</p><p>You can now add a new placeholder file to your extension and create functions inside it&nbsp;with the following properties:</p><ul class="dropspotlist"><li><em>function / external name:</em><span class="inline">AddTwoNumbers</span><br><em>help:</em><span class="inline">AddTwoNumbers(value1, value2)</span><br><em>arguments:</em><span class="inline">double,&nbsp;</span><span class="inline">double</span><br><em>return type:</em><span class="inline">double</span></li><li><em>function / external name:</em><span class="inline">HowManyObjects</span><br><em>help:</em><span class="inline">HowManyObjects(value1, value2, string)</span><br><em>arguments:</em><span class="inline">double,&nbsp;</span><span class="inline">double,&nbsp;</span><span class="inline">string</span><br><em>return type:</em><span class="inline">string</span></li><li><em>function / external name:</em><span class="inline">BuildAString</span><br><em>help:</em><span class="inline">BuildAString(string1, string2)</span><br><em>arguments:</em><span class="inline">string,&nbsp;</span><span class="inline">string</span><br><em>return type:</em><span class="inline">string</span></li><li><em>function / external name:</em><span class="inline">ReturnAsync</span><br><em>help:</em><span class="inline">ReturnAsync(value1, value2)</span><br><em>arguments:</em><span class="inline">double,</span><span>&nbsp;</span><span class="inline">double</span><br><em>return type:</em><span class="inline">double</span></li></ul><p>Here is an example of the <span class="inline">AddTwoNumbers()</span> function:</p><p><img class="center" src="../../assets/Images/Asset_Editors/Editor_Extensions_EE1_Function.png">You can now call these functions from your game code and use them like&nbsp;any other built-in function:</p><p class="code">var result1 = string(AddTwoNumbers(irandom(100), 50));<br>var result2 = BuildAString("Hello", "World");<br>var result3 = HowManyObjects(irandom(1000), irandom(1000), "Targets");<br>ReturnAsync(irandom(1000), irandom(1000));</p><p>The <span class="inline">ReturnAsync()</span> function will trigger the&nbsp;<a href="../Object_Properties/Async_Events/Social.htm">Async - Social</a> event, so you will need to add that event to your object and read data from its <span class="inline">async_load</span> map (which is filled by the extension's source code given above).</p><p class="code">var type = async_load[? "type"];<br><br>if (type == "finished")<br>{<br>&nbsp; &nbsp; var result4 = "value1: " + string(async_load[? "argument0"]) + ", ";<br>&nbsp; &nbsp; result4 += "value2: " + string(async_load[? "argument1"]);<br>}</p><p>&nbsp;</p></div><p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down1" href="#"><span data-open-text="true" data-skip-index="true">iOS (Base Example)</span><span data-close-text="true">iOS (Base Example)</span></a></p><div class="droptext" data-targetname="drop-down1"><p>The example provided for iOS is the same as the Android example given above; only the source files differ, which we'll cover in this section.</p><p>iOS extensions make use of an <span class="inline">.h</span> and an <span class="inline">.mm</span> file, and the contents of both are given below (click to open):</p><p class="note"><a data-height="800" data-rhwidget="HyperlinkPopover" data-width="1000" href="Source_Files/GenericTest-iOS.htm">GenericTest iOS Source Files</a></p><p>To add these files to your extension, you first need to go under its <a href="iOS_Extensions.htm">iOS Properties</a> and enter a class name (for this example, "GenericTest").&nbsp;You can then use either the "Enter framework path" option (if the files are present on your macOS machine used for building) or the "Add Source" option (if they are on your development machine); regardless of the option you use, you will need to point them to the directory that contains your <span class="inline">.h</span> and <span class="inline">.mm</span> files.</p><p>You can add these source files to the same extension that was set up in the previous section for Android, meaning that any functions already defined in that extension will now work on iOS too (given that the <em>External Names</em> of all functions on Android and iOS are the same). If you are creating a new extension, you can simply create the functions&nbsp;in the same way as previously described.</p><p>&nbsp;</p></div><p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down5" href="#"><span data-open-text="true" data-skip-index="true">Android (Callbacks)</span><span data-close-text="true">Android (Callbacks)</span></a></p><div class="droptext" data-targetname="drop-down5"><p>You can use the following callback functions in your <span class="inline">.java</span> extension files:</p><p class="code">public void onStart()<br>public void onRestart()<br>public void onStop()<br>public void onDestroy()<br>public void onPause()<br>public void onResume()<br>public void onActivityResult(int requestCode, int resultCode, Intent data)<br>public void onRequestPermissionsResult(int requestCode, String permissions[], int[] grantResults)<br>public void onNewIntent(android.content.Intent newIntent)<br>public void onWindowFocusChanged(boolean hasFocus)<br>public void onConfigurationChanged(Configuration newConfig)<br></p><p><br></p></div><p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down7" href="#"><span data-open-text="true" data-skip-index="true">iOS (Callbacks)</span><span data-close-text="true">iOS (Callbacks)</span></a></p><div class="droptext" data-targetname="drop-down7"><p>You can use the following callback functions in your <span class="inline">.mm</span> extension files:</p><p class="code">-(void) Init<br>-(void) onLaunch:(NSDictionary*)launchOptions<br>-(void) onResume<br>-(void) onPause<br>-(void) applicationDidEnterBackground:(UIApplication *)application<br>-(void) applicationWillEnterForeground:(UIApplication *)application<br>-(void) onStop<br>-(void) applicationProtectedDataDidBecomeAvailable:(UIApplication *)application<br>-(void) applicationProtectedDataWillBecomeUnavailable:(UIApplication *)application<br>-(void) applicationDidReceiveMemoryWarning:(UIApplication *)application<br>-(void) applicationSignificantTimeChange:(UIApplication *)application<br>-(void) application:(UIApplication *)application willEncodeRestorableStateWithCoder:(NSCoder *)coder<br>-(void) application:(UIApplication *)application didDecodeRestorableStateWithCoder:(NSCoder *)coder<br>-(void) application:(UIApplication *)application didUpdateUserActivity:(NSUserActivity *)userActivity<br>-(void) application:(UIApplication *)application didFailToContinueUserActivityWithType:(NSString *)userActivityType error:(NSError *)error<br>-(void) application:(UIApplication *)application handleWatchKitExtensionRequest:(NSDictionary *)userInfo reply:(void (^)(NSDictionary *replyInfo))reply<br>-(void) applicationShouldRequestHealthAuthorization:(UIApplication *)application<br>-(void) openURL:(NSURL *)url sourceApplication:(NSString *) sourceApplication annotation:(id)annotation<br>-(void) application:(UIApplication *)application userDidAcceptCloudKitShareWithMetadata:(CKShareMetadata *)cloudKitShareMetadata</p><p>&nbsp;</p></div><p>&nbsp;</p><div class="footer"><div class="buttons"><div class="clear"><div style="float:left">Back: <a href="../Extensions.htm">The Extension Editor</a></div><div style="float:right">Next:&nbsp;<a href="Creating_An_Extension.htm">Creating An Extension</a></div></div></div><h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2024 All Rights Reserved</span></h5></div></body></html>