<!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml"><head><script type="text/javascript" src="../assets/import/jquery-3.6.1.min.js"></script><script type="text/javascript" src="../assets/import/layer/layer.js"></script><script type="text/javascript" src="../assets/import/pangu.min.js"></script><link rel="stylesheet" type="text/css" href="../assets/import/layer/layui_btn.css"><link rel="stylesheet" type="text/css" href="../assets/import/layer/layui_col.css"><link rel="stylesheet" type="text/css" href="../assets/import/layer/theme/default/layer.css"><link rel="stylesheet" type="text/css" href="../assets/import/main.css"><script>let str;removeHtml=function(e){return e=(e=(e=(e=e.replace(/(<([^>]+)>)/gi,"{}")).replace(/\r\n/g,"\n")).replace(/\n/g,"")).replace(/ {2,}/g," ")},retHtml=function(e){return e.match(/(<([^>]+)>)/gi)},setTranslator=function(e,o,t){let a;a=t?e.attr(t):e.html();let r=o[removeHtml(a)];if(null!=r&&r.length){o=retHtml(a);let n=0;o&&o.forEach(function(e,o){var t=r.replace("{"+n+"}",e);r=t===r?r.replace("{}",e):t,n++}),t?e.attr(t,r):e.html(r)}},noTranslationState=function(){return"true"==window.localStorage.getItem("noTranslationState")},noTranslationStateToggle=function(){window.localStorage.setItem("noTranslationState",!noTranslationState())},addNoTranslationStateButton=function(){var e=`
		
		<button style="
			float: right;
			font-size: 16px;
			padding: 4px 12px;
		"
		onclick="
		window.location.replace('gmmt://'+document.location.hash)
		"
		>打开编辑器</button>

		<button style="
			float: right;
			font-size: 16px;
			padding: 4px 12px;
		"
		onclick="
		noTranslationStateToggle();
		location.reload();
    	event.stopPropagation();
		"
		>切换翻译</button>
		`;$(".header").length?$(".header").append(e):($(".topic-header").append(e),$(".topic-header button").css("position","relative").css("top","44px"))},removeExtensionFromHash=function(e){return e.replaceAll("#t=","").replaceAll("%2F","/").replaceAll(".htm","")};let json_global,json_file={"Apart from these compile errors, you can also get syntax errors. These will be detected as you add your GML Visual actions or code and are shown in the {}Syntax Errors Output Window{}, similar to the image shown below:":"除了这些编译错误，你还可能遇到语法错误。这些将在您添加 GML 可视化操作或代码时被检测到，并显示在{}语法错误输出窗口{}中，如下图所示：","As an additional tool for debugging compiled games, there are certain {}command line parameters{} that can be used when you run the final game package on Windows. For information on how this works please see {}here{}.":"作为调试已编译游戏的额外工具，当您在 Windows 上运行最终游戏包时，可以使用某些{}命令行参数{}。有关其工作原理的信息，请在此处查看{}。",Debugging:"调试","Debugging Preferences":"调试首选项","If you need to check things more carefully, you can run the game in {}Debug Mode{} by clicking the debug run button {}. When you do, the {}Debug Module{} will open along with your game. This module permits you to monitor how everything is working in your game, from the global performance, right down to the values of individual variables in individual instances. You can find out further information about the Debug Module and its possibilities and how to use it from the following page:":"如果你需要更仔细地检查一下，你可以点击调试运行按钮{}在{}调试模式{}下运行游戏。完成后，{}调试模块{}将与您的游戏一起打开。这个模块允许你监控游戏中所有事物的运行情况，从全局性能到单个实例中单个变量的值。您可以从以下页面了解有关调试模块及其可能性以及如何使用它的更多信息：","Introduction To {}GameMaker{}":"{}GameMaker 简介{}",'Note that when you use the Debug Module, you can also add {}Breakpoints {}to your code or GML Visual. A breakpoint is a point in the game loop where you want the debug module to pause and let you step through the actual game code a line at a time. You can add breakpoints using the key "F9", and they will be shown in the {}Output Window{}&nbsp;where you can enable/disable them as required.':'请注意，在使用调试模块时，还可以在代码或 GML Visual 中添加{}Breakpoints{}。断点是游戏循环中的一个点，你希望调试模块暂停并让你逐行浏览实际的游戏代码。您可以使用密钥 "F9" 添加断点，它们将显示在{}输出窗口{}中，您可以根据需要启用/禁用断点。','Now, you can check a lot of these things yourself by adding in so-called "debug code" to your games to display on the screen the information you require, or you can have it that it shows messages when there is an error, but this is often a lot of work and if you aren\'t sure where the problem is in the first place then it can be a time consuming case of trial and error to track down your bug. For that, {}GameMaker{} has a special test mode called {}Debug Mode{} which will start the {}Debug Module{}, and there is also a comprehensive {}error reporting system{} which displays messages on {}Compiling{}&nbsp;to help you track down any problems with your game.':'现在，你可以通过在游戏中添加所谓的 "调试代码" 来在屏幕上显示你需要的信息，或者你可以让它在出现错误时显示消息，但这通常需要大量的工作，如果你一开始不确定问题出在哪里，那么追踪错误可能是一个耗时的反复试验。为此，{}GameMaker{}有一个名为{}调试模式{}的特殊测试模式，它将启动{}调试模块{}，还有一个全面的{}错误报告系统{}它在{}Comilil{}上显示消息，以帮助您追踪游戏中的任何问题。',"The Debugger":"调试器","The Output Window":"输出窗口","The sections below cover the different ways that you can debug your game:":"以下部分介绍了调试游戏的不同方式：","There are also a set of preferences related to debugging and using the debug tools. You can find more information from the following page:":"还有一组与调试和使用调试工具相关的首选项。您可以从以下页面找到更多信息：","When an error occurs during the compiling and execution of a project this is reported with a message in the {}Compile Errors Output Window{}, much like the one shown below:":"如果在编译和执行项目期间发生错误，则会在{}编译错误输出窗口{}中报告此错误并显示一条消息，如下所示：",'When programming your game, whether using {}GML Code{}&nbsp;or&nbsp;{}GML Visual{}, it can be very easy to make mistakes - using the wrong variables, passing the wrong arguments, or using the wrong functions are just some of the most common errors we all make - and these mistakes are not always detected by the {}syntax{} checker that is included with the script/action editor. That means that these mistakes will only become apparent when you actually run or compile your game, and even then it can sometimes be difficult to know exactly what is going wrong. It can therefore be of vital importance to know how your game is performing on the chosen device, as well as see what instances are in the room, what global variables have been created and a whole host of other details. Checking these things is called "{}debugging your code{}", and any errors or issues you may find are called "{}bugs{}".':'在编程游戏时，无论使用{}GML Code{}还是{}GML Visual{}，都很容易犯错误——使用错误的变量、传递错误的参数或使用错误的函数只是我们所有人犯的一些最常见的错误——而且脚本/动作编辑器附带的{}语法{}检查器并不总是能检测到这些错误。这意味着只有当你实际运行或编译游戏时，这些错误才会变得明显，即便如此，有时也很难确切知道出了什么问题。因此，了解游戏在所选设备上的表现以及查看房间里有哪些实例、创建了哪些全局变量以及大量其他细节可能至关重要。检查这些内容称为 "{}调试你的代码{}"，你可能发现的任何错误或问题都被称为 "{}bugs{}"。',"You can also generate a&nbsp;{}debug overlay{}&nbsp;when you are test running your game which will show additional debug information about the performance of your game as it is being run, and you can also output&nbsp;{}debug messages{}&nbsp;to the compile console where you can supply your own text to help debug the behaviour of your games. For more information see the following pages: {}{}":"您还可以在测试运行游戏时生成{}调试叠加层{}，该叠加层将在游戏运行时显示有关游戏性能的更多调试信息，还可以将{}调试消息{}输出到编译控制台，您可以在其中提供自己的文本来帮助调试游戏的行为。有关更多信息，请参阅以下页面：{}{}","{}Additional Tools{}{}Additional Tools{}":"{}其他工具{}{}其他工具{}","{}As with the compiler errors, the syntax errors window will direct you to the object, the event and the specific lines that are giving the issue, and will often be shown with a brief explanation of what the error is.":"{}与编译器错误一样，语法错误窗口将引导您找到对象、事件和出现问题的特定行，并且通常会显示错误的简要说明。","{}Debug Mode{}{}Debug Mode{}":"{}调试模式{}{}调试模式{}","{}Error Reporting{}{}Error Reporting{}":"{}错误报告{}{}错误报告{}","{}Most compiler error messages follow the same outline, with a message stating the object that the error has occurred in, then the Event along with the line number, and then finally a short description of the error itself. This type of information being provided by the error reporting is very important as it detects and reports the syntax and language related bugs that are going to cause your finished game to crash, but it won't report more subtle bugs, nor does it give feedback on performance. For those types of things you should use Debug Mode (explained below).":"{}大多数编译器错误消息遵循相同的大纲，一条消息说明错误发生在哪个对象，然后是事件和行号，最后是错误本身的简短描述。错误报告提供的此类信息非常重要，因为它可以检测并报告语法和语言相关的错误，这些错误会导致你完成的游戏崩溃，但它不会报告更细微的错误，也不会提供性能反馈。对于这些类型的东西，你应该使用调试模式(如下所述)。"},get_json_global=$.ajax({url:"/global.json",type:"GET",dataType:"json",async:!1,success:function(e){json_global=e}});$(function(){if(addNoTranslationStateButton(),noTranslationState())return!1;$("div.footer a,h4,caption").each(function(){setTranslator($(this),json_global)}),$("p,h1,h2,h3,td,li,a,div.dropspotnote,figcaption").each(function(){setTranslator($(this),json_file)}),$("th,.warning,.important,.optional").each(function(){setTranslator($(this),json_global)}),$(".header").length&&(window.setInterval(function(){$("#toc-panel a:not('isTranslate')").each(function(){$(this).addClass("isTranslate"),setTranslator($(this),json_global)}),$(".GlossDefinitionText:not('isTranslate')").each(function(){$(this).addClass("isTranslate"),setTranslator($(this),json_global)})},250),console.log("成功啦!现在正在疯狂翻译菜单中!")),$(".tooltip").each(function(){setTranslator($(this),json_global,"title")})}),document.addEventListener("DOMContentLoaded",()=>{pangu.autoSpacingPage()})</script><script type="text/javascript" language="JavaScript">function reDo(){innerWidth==origWidth&&innerHeight==origHeight||location.reload()}4==parseInt(navigator.appVersion)&&"Netscape"==navigator.appName&&(origWidth=innerWidth,origHeight=innerHeight,onresize=reDo),onerror=null</script><style type="text/css">p.WebHelpNavBar{text-align:right}</style><script type="text/javascript">gCommonRootRelPath=gRootRelPath="..",gTopicId="1.0_5"</script><script type="text/javascript" src="../template/scripts/rh.min.js"></script><script type="text/javascript" src="../template/scripts/common.min.js"></script><script type="text/javascript" src="../template/scripts/topic.min.js"></script><script type="text/javascript" src="../template/scripts/topicwidgets.min.js"></script><script type="text/javascript" src="../whxdata/projectsettings.js"></script><link rel="stylesheet" type="text/css" href="../template/styles/topic.min.css"><link rel="stylesheet" type="text/css" href="../template/Charcoal_Grey/topicheader.css"><meta name="topic-status" content="Draft"><meta http-equiv="Content-Type" content="text/html; charset=utf-8"><title>Debugging</title><meta name="generator" content="Adobe RoboHelp 2022"><link rel="stylesheet" href="../assets/css/default.css" type="text/css"><script src="../assets/scripts/main_script.js" type="module"></script><meta name="rh-authors" content="Mark Alexander"><meta name="topic-comment" content="Debugging Projects In GameMaker"><meta name="rh-index-keywords" content="Debugging"><meta name="search-keywords" content="debugging,error reporting,debug mode,performance"><meta name="brsnext" value="Introduction/The_Output_Window.htm"><meta name="brsprev" value="Introduction/Compiling.htm"></head><body><div class="topic-header rh-hide" id="rh-topic-header"><div class="logo"></div><div class="nav"><div class="title" title="Debugging"><span>Debugging</span></div><div class="gotohome" title="Click here to see this page in full context"><a href="#" onclick="rh._.goToFullLayout()">Click here to see this page in full context</a></div></div></div><div class="topic-header-shadow rh-hide" id="rh-topic-header-shadow"></div><h1><span data-field="title" data-format="default">Debugging</span></h1><p>When programming your game, whether using <span data-keyref="GML_Code">GML Code</span>&nbsp;or&nbsp;<span data-keyref="GML_Visual">GML Visual</span>, it can be very easy to make mistakes - using the wrong variables, passing the wrong arguments, or using the wrong functions are just some of the most common errors we all make - and these mistakes are not always detected by the <a class="tooltip" title="Similar to human languages, programming languages have their own set of rules on how statements can be conveyed, and this set of rules is known as the syntax. While a number of programming languages share many features, functions, and capabilities, they generally differ in syntax. Without the proper use of syntax, one cannot write an executable program, and wrong syntax will lead to errors when compiling.">syntax</a> checker that is included with the script/action editor. That means that these mistakes will only become apparent when you actually run or compile your game, and even then it can sometimes be difficult to know exactly what is going wrong. It can therefore be of vital importance to know how your game is performing on the chosen device, as well as see what instances are in the room, what global variables have been created and a whole host of other details. Checking these things is called "<strong>debugging your code</strong>", and any errors or issues you may find are called "<strong>bugs</strong>".</p><p>Now, you can check a lot of these things yourself by adding in so-called "debug code" to your games to display on the screen the information you require, or you can have it that it shows messages when there is an error, but this is often a lot of work and if you aren't sure where the problem is in the first place then it can be a time consuming case of trial and error to track down your bug. For that, <span data-keyref="GameMaker Name">GameMaker</span> has a special test mode called <strong>Debug Mode</strong> which will start the <strong>Debug Module</strong>, and there is also a comprehensive <strong>error reporting system</strong> which displays messages on <a class="tooltip" title="Compiling is when GameMaker takes your code and collects it together in such a way as to create an executable package that will run on a device as a game.">Compiling</a>&nbsp;to help you track down any problems with your game.</p><p>The sections below cover the different ways that you can debug your game:</p><p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop_down6" href="#"><span data-open-text="true" data-skip-index="true">Error Reporting</span><span data-close-text="true">Error Reporting</span></a></p><div class="droptext" data-targetname="drop_down6"><p class="dropspot">When an error occurs during the compiling and execution of a project this is reported with a message in the <a href="The_Output_Window.htm">Compile Errors Output Window</a>, much like the one shown below:</p><p class="dropspot"><img alt="Compile Errors" class="center" src="../assets/Images/Introduction/QS_Debug_CompileError.png">Most compiler error messages follow the same outline, with a message stating the object that the error has occurred in, then the Event along with the line number, and then finally a short description of the error itself. This type of information being provided by the error reporting is very important as it detects and reports the syntax and language related bugs that are going to cause your finished game to crash, but it won't report more subtle bugs, nor does it give feedback on performance. For those types of things you should use Debug Mode (explained below).</p><p class="dropspot">Apart from these compile errors, you can also get syntax errors. These will be detected as you add your GML Visual actions or code and are shown in the <a href="The_Output_Window.htm">Syntax Errors Output Window</a>, similar to the image shown below:</p><p class="dropspot"><img alt="Syntax Errors" class="center" src="../assets/Images/Introduction/QS_Debug_SyntaxError.png">As with the compiler errors, the syntax errors window will direct you to the object, the event and the specific lines that are giving the issue, and will often be shown with a brief explanation of what the error is.</p><p class="dropspot">&nbsp;</p></div><p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop_down7" href="#"><span data-open-text="true" data-skip-index="true">Debug Mode</span><span data-close-text="true">Debug Mode</span></a></p><div class="droptext" data-targetname="drop_down7"><p class="dropspot">If you need to check things more carefully, you can run the game in <strong>Debug Mode</strong> by clicking the debug run button <img alt="Debug Icon" class="icon" src="../assets/Images/Icons/Icon_Debug.png">. When you do, the <strong>Debug Module</strong> will open along with your game. This module permits you to monitor how everything is working in your game, from the global performance, right down to the values of individual variables in individual instances. You can find out further information about the Debug Module and its possibilities and how to use it from the following page:</p><ul class="dropspotlist"><li class="dropspot"><a href="../IDE_Tools/The_Debugger.htm">The Debugger</a></li></ul><p class="dropspot">Note that when you use the Debug Module, you can also add <strong>Breakpoints</strong> to your code or GML Visual. A breakpoint is a point in the game loop where you want the debug module to pause and let you step through the actual game code a line at a time. You can add breakpoints using the key "F9", and they will be shown in the <a href="The_Output_Window.htm">Output Window</a>&nbsp;where you can enable/disable them as required.</p><p class="dropspot">&nbsp;</p></div><p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop_down8" href="#"><span data-open-text="true" data-skip-index="true">Additional Tools</span><span data-close-text="true">Additional Tools</span></a></p><div class="droptext" data-targetname="drop_down8"><p class="dropspot">As an additional tool for debugging compiled games, there are certain <strong>command line parameters</strong> that can be used when you run the final game package on Windows. For information on how this works please see <a href="../Settings/Command_Line_Parameters.htm">here</a>.</p><p class="dropspot">You can also generate a&nbsp;<strong>debug overlay</strong>&nbsp;when you are test running your game which will show additional debug information about the performance of your game as it is being run, and you can also output&nbsp;<strong>debug messages</strong>&nbsp;to the compile console where you can supply your own text to help debug the behaviour of your games. For more information see the following pages:<span class="inline"></span></p><ul class="dropspotlist"><li class="dropspot"><a href="../GameMaker_Language/GML_Reference/Debugging/show_debug_overlay.htm"><span class="inline">show_debug_overlay</span></a></li><li class="dropspot"><a href="../GameMaker_Language/GML_Reference/Debugging/show_debug_message.htm"><span class="inline">show_debug_message</span></a></li><li class="dropspot"><span class="inline"><a href="../GameMaker_Language/GML_Reference/Debugging/debug_event.htm">debug_event</a></span></li></ul><p>&nbsp;</p></div><p>&nbsp;</p><p>There are also a set of preferences related to debugging and using the debug tools. You can find more information from the following page:</p><ul class="colour"><li><a href="../Setting_Up_And_Version_Information/IDE_Preferences/General/Debugging.htm">Debugging Preferences</a></li></ul><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><div class="footer"><div class="buttons"><div class="clear"><div style="float:left">Back: <a href="Introduction_To_GameMaker_Studio_2.htm">Introduction To <span data-keyref="GameMaker Name">GameMaker</span></a></div><div style="float:right">Next: <a href="The_Output_Window.htm">The Output Window</a></div></div></div><h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2024 All Rights Reserved</span></h5></div></body></html>