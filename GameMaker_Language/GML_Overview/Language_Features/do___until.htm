<!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml"><head><script type="text/javascript" src="../../../assets/import/jquery-3.6.1.min.js"></script><script type="text/javascript" src="../../../assets/import/layer/layer.js"></script><script type="text/javascript" src="../../../assets/import/pangu.min.js"></script><link rel="stylesheet" type="text/css" href="../../../assets/import/layer/layui_btn.css"><link rel="stylesheet" type="text/css" href="../../../assets/import/layer/layui_col.css"><link rel="stylesheet" type="text/css" href="../../../assets/import/layer/theme/default/layer.css"><link rel="stylesheet" type="text/css" href="../../../assets/import/main.css"><script>let str;removeHtml=function(e){return e=(e=(e=(e=e.replace(/(<([^>]+)>)/gi,"{}")).replace(/\r\n/g,"\n")).replace(/\n/g,"")).replace(/ {2,}/g," ")},retHtml=function(e){return e.match(/(<([^>]+)>)/gi)},setTranslator=function(e,t,o){let a;a=o?e.attr(o):e.html();let i=t[removeHtml(a)];if(null!=i&&i.length){t=retHtml(a);let n=0;t&&t.forEach(function(e,t){var o=i.replace("{"+n+"}",e);i=o===i?i.replace("{}",e):o,n++}),o?e.attr(o,i):e.html(i)}},noTranslationState=function(){return"true"==window.localStorage.getItem("noTranslationState")},noTranslationStateToggle=function(){window.localStorage.setItem("noTranslationState",!noTranslationState())},addNoTranslationStateButton=function(){var e=`
		
		<button style="
			float: right;
			font-size: 16px;
			padding: 4px 12px;
		"
		onclick="
		window.location.replace('gmmt://'+document.location.hash)
		"
		>打开编辑器</button>

		<button style="
			float: right;
			font-size: 16px;
			padding: 4px 12px;
		"
		onclick="
		noTranslationStateToggle();
		location.reload();
    	event.stopPropagation();
		"
		>切换翻译</button>
		`;$(".header").length?$(".header").append(e):($(".topic-header").append(e),$(".topic-header button").css("position","relative").css("top","44px"))},removeExtensionFromHash=function(e){return e.replaceAll("#t=","").replaceAll("%2F","/").replaceAll(".htm","")};let json_global,json_file={'A {}do{} function is another way of iterating over one or more {}statement{}{}s{} multiple times, and is really a "{}do... until{}" statement as you cannot have one without the other since you are telling {}GameMaker{} to do something until a specific {}expression{} returns {}true{}. It has this form:':'{}do{}函数是对一个或多个{}语句{}{} {}进行多次迭代的另一种方式，它实际上是一个"{}do...until{}"语句，因为您要告诉{}GameMaker{}在特定的{}表达式{}返回{}true{}之前执行某些操作，所以不能只使用其中一个语句。它具有以下形式：',"An example of using continue in a {}do / until{} loop would be:":"在{}do/until{}循环中使用continue的一个例子是:","For more examples of loop keywords please see the sections on {}{}repeat{}{}, {}{}while{}{}, and {}{}for{}{}.":"更多关于循环关键字的例子，请参见{}{}repeat{}{},{}{}while{}{},和{}{}for{}{}章节。","In the above code, we create a local variable and set it to hold the keyword {}noone{}. We then perform a {}do / until{} loop checking the first position of a DS list to see if it holds a valid instance ID, and if it does then we {}break{} the loop, otherwise the value for the list position is deleted. After the loop is terminated (either by the {}break{} or because the list is empty) the local variable value is then assigned to the instance variable {}target{}.":"在上面的代码中，我们创建了一个局部变量，并将其设置为持有关键字{}noone{}。然后我们执行一个{}do/until{}循环，检查DS列表的第一个位置，看它是否有一个有效的实例ID，如果有，我们{}中断{}循环，否则列表位置的值被删除。循环结束后(无论是通过{}break{}还是因为列表为空)，本地变量的值被分配给实例变量{}target{}。","One final note: be careful with your {}do{} loops, as you can easily make them loop forever, in which case your game will hang and not react to any user input anymore and they will have to force close it.":"最后一个注意事项：小心{}do{}循环，因为您可以轻松地让它们永远循环，在这种情况下，您的游戏将挂起，不再对任何用户输入做出反应，它们将不得不强制关闭。","The above code tries to place the current object at a free position and will set the x/y variables at least once, and then perform as many {}iteration{}{}s{} as required until the {}place_free(){} expression returns {}true{}.":"上述代码试图将当前对象放置在一个自由的位置上，并将至少设置一次x/y变量，然后根据需要进行多次{}迭代{}{}s{}，直到{}place_free(){}表达式返回{}true{}。","The statement (which can be a code block of multiple statements within curly brackets {}{}{}) is executed until the expression is found to be {}true{}, and the initial statement is {}always executed at least once{}.&nbsp;Below you can find an example of a typical way to use {}do... until{}:":"语句(可以是大括号内的多个语句的代码块{}{})被执行，直到发现表达式为{}true{}，并且初始语句{}总是被至少执行一次{}。下面你可以看到一个使用{}do...until{}的典型方法的例子。","This code will generate a random room position then check if an instance of the object {}obj_Enemy{} exists at that position. If it does, the current loop iteration is terminated using {}continue{} and a new iteration is started, and if it doesn't then an instance of the object {}obj_Enemy{} is created at the random position. The loop will only terminate when there are 10 or more instances of the object in the room.":"此代码将生成随机房间位置，然后检查对象{}obj_Enemy{}的实例是否存在于该位置。如果是，则使用{}继续{}终止当前循环迭代，并启动新的迭代;如果不是，则在随机位置创建对象{}obj_Enemy{}的实例。只有当房间中有10个或更多对象实例时，循环才会终止。","You can also use the {}{}break{}{} and {}{}continue{}{} statements within your {}do{} loops.&nbsp;Using {}break{} will immediately exit the loop and move on to any code that is in the event or function after the loop should have finished, eg:":"你也可以在你的{}do{}循环中使用{0}{1}break{2}{3}和{4}{5}continue{6}{7}语句。使用{}break{}将立即退出循环，并在循环结束后继续处理事件或函数中的任何代码，例如。","{}When should you use a {}do{} / {}until{} loop?{} It should be used any time you want to repeat one or more statements, but don't actually know how many times it has to repeat, and want to ensure that the statements are run {}at least once{} before the loop ends.":"{}什么时候应该使用{}do{}/{}until{}循环？{}当您希望重复一个或多个语句，但不知道必须重复多少次时，应该使用该循环，并希望确保在循环结束之前至少运行{}次{}语句。","以上代码尝试将当前对象置于自由位置，并且将至少设置x/ y变量一次，然后根据需要执行多次{}迭代{}{}s{}，直到{}plac_free(){}表达式返回{}true{}。":"以上代码尝试将当前对象置于自由位置，并且将至少设置x/y变量一次，然后根据需要执行多次{}迭代{}{} {}，直到{}place_free(){}表达式返回{}true{}。","在上述代码中，我们创建一个局部变量并将其设置为保留关键字{}noone{}。然后执行{}do/直到{}循环检查DS列表的第一个位置，以查看它是否保留有效的实例ID，如果保留了，则我们将{}中断循环，否则将删除列表位置的值。循环终止后(通过{}中断{}或因为列表为空)，将局部变量值分配给实例变量{}target{}。{}":"在上述代码中，我们创建一个局部变量并将其设置为保留关键字{}noone{}。然后执行{}do/ 直到{}循环检查DS列表的第一个位置，以查看它是否保留有效的实例ID，如果保留了，则我们将{}中断循环，否则将删除列表位置的值。循环终止后( 通过{}中断{}或因为列表为空)，将局部变量值分配给实例变量{}目标{}。{}"},get_json_global=$.ajax({url:"/global.json",type:"GET",dataType:"json",async:!1,success:function(e){json_global=e}});$(function(){if(addNoTranslationStateButton(),noTranslationState())return!1;$("div.footer a,h4,caption").each(function(){setTranslator($(this),json_global)}),$("p,h1,h2,h3,td,li,a,div.dropspotnote,figcaption").each(function(){setTranslator($(this),json_file)}),$("th,.warning,.important,.optional").each(function(){setTranslator($(this),json_global)}),$(".header").length&&(window.setInterval(function(){$("#toc-panel a:not('isTranslate')").each(function(){$(this).addClass("isTranslate"),setTranslator($(this),json_global)}),$(".GlossDefinitionText:not('isTranslate')").each(function(){$(this).addClass("isTranslate"),setTranslator($(this),json_global)})},250),console.log("成功啦!现在正在疯狂翻译菜单中!")),$(".tooltip").each(function(){setTranslator($(this),json_global,"title")})}),document.addEventListener("DOMContentLoaded",()=>{pangu.autoSpacingPage()})</script><script type="text/javascript" language="JavaScript">function reDo(){innerWidth==origWidth&&innerHeight==origHeight||location.reload()}4==parseInt(navigator.appVersion)&&"Netscape"==navigator.appName&&(origWidth=innerWidth,origHeight=innerHeight,onresize=reDo),onerror=null</script><style type="text/css">p.WebHelpNavBar{text-align:right}</style><script type="text/javascript">gCommonRootRelPath=gRootRelPath="../../..",gTopicId="8.2.1.3.0_3"</script><script type="text/javascript" src="../../../template/scripts/rh.min.js"></script><script type="text/javascript" src="../../../template/scripts/common.min.js"></script><script type="text/javascript" src="../../../template/scripts/topic.min.js"></script><script type="text/javascript" src="../../../template/scripts/topicwidgets.min.js"></script><script type="text/javascript" src="../../../whxdata/projectsettings.js"></script><link rel="stylesheet" type="text/css" href="../../../template/styles/topic.min.css"><link rel="stylesheet" type="text/css" href="../../../template/Charcoal_Grey/topicheader.css"><meta name="topic-status" content="Draft"><meta http-equiv="Content-Type" content="text/html; charset=utf-8"><title>do / until</title><meta name="generator" content="Adobe RoboHelp 2022"><link rel="stylesheet" href="../../../assets/css/default.css" type="text/css"><script src="../../../assets/scripts/main_script.js" type="module"></script><meta name="rh-authors" content="Mark Alexander"><meta name="topic-comment" content="Page outlining the do / until functions"><meta name="rh-index-keywords" content="do,until"><meta name="search-keywords" content="do,until"><meta name="brsnext" value="GameMaker_Language/GML_Overview/Language_Features/for.htm"><meta name="brsprev" value="GameMaker_Language/GML_Overview/Language_Features/while.htm"></head><body><div class="topic-header rh-hide" id="rh-topic-header"><div class="logo"></div><div class="nav"><div class="title" title="do / until"><span>do / until</span></div><div class="gotohome" title="Click here to see this page in full context"><a href="#" onclick="rh._.goToFullLayout()">Click here to see this page in full context</a></div></div></div><div class="topic-header-shadow rh-hide" id="rh-topic-header-shadow"></div><h1>do / until</h1><p>A <span class="inline">do</span> function is another way of iterating over one or more <a class="tooltip" title="In programming, a statement is a single line of code written legally in a programming language that expresses an action to be carried out. A statement might have internal components of its own, including expressions, operators and functions. An example of a statement is A = B + 5. A GameMaker Studio 2 program is nothing but a sequence of one or more statements that together perform a task (like move the player). ">statement</a><span class="glossextra">s</span> multiple times, and is really a "<span class="inline">do... until</span>" statement as you cannot have one without the other since you are telling <span data-keyref="GameMaker Name">GameMaker</span> to do something until a specific <a class="tooltip" title="An expression is a combination of one or more constants, variables, operators, and/or functions that are interpreted according to particular rules of precedence and association to return another value. A simple expression would be (5 + 5), which returns 10.">expression</a> returns <span class="inline">true</span>. It has this form:</p><p class="code">do<br>{<br>&nbsp; &nbsp; &lt;statement&gt;;<br>&nbsp; &nbsp; &lt;statement&gt;;<br>&nbsp; &nbsp; ...<br>}<br>until (&lt;expression&gt;);</p><p>The statement (which can be a code block of multiple statements within curly brackets <span class="inline">{}</span>) is executed until the expression is found to be <span class="inline">true</span>, and the initial statement is <strong>always executed at least once</strong>.&nbsp;Below you can find an example of a typical way to use <span class="inline">do... until</span>:</p><p class="code">do<br>{<br>&nbsp;&nbsp;&nbsp;&nbsp;x = random(room_width);<br>&nbsp;&nbsp;&nbsp;&nbsp;y = random(room_height);<br>}<br>until (place_free(x, y));</p><p>The above code tries to place the current object at a free position and will set the x/y variables at least once, and then perform as many <a class="tooltip" title="An iteration is a single pass through a set of operations in your project code. One form of iteration in computer programming is via loops. A loop will repeat a certain segment of code until a condition is met and it can proceed further. Each time the computer runs a loop, it is known as an iteration. In simple terms, iteration is the process of repeating a particular snippet of code over and over again to perform a certain action.">iteration</a><span class="glossextra">s</span> as required until the <span class="inline">place_free()</span> expression returns <span class="inline">true</span>.</p><p><strong>When should you use a <span class="inline">do</span> / <span class="inline">until</span> loop?</strong> It should be used any time you want to repeat one or more statements, but don't actually know how many times it has to repeat, and want to ensure that the statements are run <em>at least once</em> before the loop ends.</p><p>You can also use the <a href="break.htm"><span class="inline">break</span></a> and <a href="continue.htm"><span class="inline">continue</span></a> statements within your <span class="inline">do</span> loops.&nbsp;Using <span class="inline">break</span> will immediately exit the loop and move on to any code that is in the event or function after the loop should have finished, eg:</p><p class="code">var _id = noone;<br>do<br>{<br>&nbsp; &nbsp; _id = list[| 0];<br>&nbsp; &nbsp; if (instance_exists(_id))<br>&nbsp; &nbsp; {<br>&nbsp; &nbsp; &nbsp; &nbsp; _break;<br>&nbsp; &nbsp; }<br>&nbsp; &nbsp; ds_list_delete(list, 0);<br>}<br>until (ds_list_empty(list));<br><br>target = _id;</p><p>In the above code, we create a local variable and set it to hold the keyword <a href="../Instance_Keywords.htm">noone</a>. We then perform a <span class="inline">do / until</span> loop checking the first position of a DS list to see if it holds a valid instance ID, and if it does then we <span class="inline">break</span> the loop, otherwise the value for the list position is deleted. After the loop is terminated (either by the <span class="inline">break</span> or because the list is empty) the local variable value is then assigned to the instance variable <span class="inline">target</span>.</p><p>An example of using continue in a <span class="inline">do / until</span> loop would be:</p><p class="code">do<br>{<br>&nbsp; &nbsp; var _x = random(room_width);<br>&nbsp; &nbsp; var _y = random(room_height);<br>&nbsp;&nbsp;&nbsp;&nbsp;if (instance_position(_x, y, obj_Enemy)<br>&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;continue;<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp; &nbsp; instance_create_layer(_x, _y, "Instances", obj_Enemy);<br>}<br>until (instance_count(obj_Enemy) &gt;= 10);</p><p>This code will generate a random room position then check if an instance of the object <span class="inline">obj_Enemy</span> exists at that position. If it does, the current loop iteration is terminated using <span class="inline">continue</span> and a new iteration is started, and if it doesn't then an instance of the object <span class="inline">obj_Enemy</span> is created at the random position. The loop will only terminate when there are 10 or more instances of the object in the room.</p><p>One final note: be careful with your <span class="inline">do</span> loops, as you can easily make them loop forever, in which case your game will hang and not react to any user input anymore and they will have to force close it.</p><p>For more examples of loop keywords please see the sections on <a href="repeat.htm"><span class="inline">repeat</span></a>, <a href="while.htm"><span class="inline">while</span></a>, and <a href="for.htm"><span class="inline">for</span></a>.</p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><div class="footer"><div class="buttons"><div class="clear"><div style="float:left">Back: <a href="../Language_Features.htm">Language&nbsp;Features</a></div><div style="float:right">Next: <a href="for.htm">for</a></div></div></div><h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2024 All Rights Reserved</span></h5></div></body></html>