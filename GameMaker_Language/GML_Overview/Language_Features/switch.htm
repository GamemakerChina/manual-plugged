<!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml"><head><script type="text/javascript" src="../../../assets/import/jquery-3.6.1.min.js"></script><script type="text/javascript" src="../../../assets/import/layer/layer.js"></script><script type="text/javascript" src="../../../assets/import/pangu.min.js"></script><link rel="stylesheet" type="text/css" href="../../../assets/import/layer/layui_btn.css"><link rel="stylesheet" type="text/css" href="../../../assets/import/layer/layui_col.css"><link rel="stylesheet" type="text/css" href="../../../assets/import/layer/theme/default/layer.css"><link rel="stylesheet" type="text/css" href="../../../assets/import/main.css"><script>let str;removeHtml=function(t){return t=(t=(t=(t=t.replace(/(<([^>]+)>)/gi,"{}")).replace(/\r\n/g,"\n")).replace(/\n/g,"")).replace(/ {2,}/g," ")},retHtml=function(t){return t.match(/(<([^>]+)>)/gi)},setTranslator=function(t,n,a){let e;e=a?t.attr(a):t.html();let l=n[removeHtml(e)];if(null!=l&&l.length){n=retHtml(e);let o=0;n&&n.forEach(function(t,n){var a=l.replace("{"+o+"}",t);l=a===l?l.replace("{}",t):a,o++}),a?t.attr(a,l):t.html(l)}},noTranslationState=function(){return"true"==window.localStorage.getItem("noTranslationState")},noTranslationStateToggle=function(){window.localStorage.setItem("noTranslationState",!noTranslationState())},addNoTranslationStateButton=function(){$(".header").length&&$(".header").append(`
		
		<button style="
			float: right;
			font-size: 16px;
			padding: 4px 12px;
		"
		onclick="
		window.location.replace('gmmt://'+document.location.hash)
		"
		>打开编辑器</button>

		<button style="
			float: right;
			font-size: 16px;
			padding: 4px 12px;
		"
		onclick="
		noTranslationStateToggle();
		location.reload();
    	event.stopPropagation();
		"
		>切换翻译</button>
		`)},removeExtensionFromHash=function(t){return t.replaceAll("#t=","").replaceAll("%2F","/").replaceAll(".htm","")},$(function(){if(addNoTranslationStateButton(),noTranslationState())return!1;$("div.footer a,h4,caption,blockquote").each(function(){setTranslator($(this),json_global)}),$("p,h1,h2,h3,td,li,a,div.dropspotnote,figcaption,.expandtext").each(function(){setTranslator($(this),json)}),$("th,.warning,.important,.optional").each(function(){setTranslator($(this),json_global)}),$(".header").length&&(window.setInterval(function(){$("#toc-panel a:not('isTranslate')").each(function(){$(this).addClass("isTranslate"),setTranslator($(this),json_global)}),$(".GlossDefinitionText:not('isTranslate')").each(function(){$(this).addClass("isTranslate"),setTranslator($(this),json_global)})},250),console.log("成功啦!现在正在疯狂翻译菜单中!")),$(".tooltip").each(function(){setTranslator($(this),json_global,"title")})}),document.addEventListener("DOMContentLoaded",()=>{pangu.autoSpacingPage()})</script><script type="text/javascript" language="JavaScript">function reDo(){innerWidth==origWidth&&innerHeight==origHeight||location.reload()}4==parseInt(navigator.appVersion)&&"Netscape"==navigator.appName&&(origWidth=innerWidth,origHeight=innerHeight,onresize=reDo),onerror=null</script><style type="text/css">p.WebHelpNavBar{text-align:right}</style><script type="text/javascript">gCommonRootRelPath=gRootRelPath="../../..",gTopicId="8.2.1.3.0_5"</script><script type="text/javascript" src="../../../template/scripts/rh.min.js"></script><script type="text/javascript" src="../../../template/scripts/common.min.js"></script><script type="text/javascript" src="../../../template/scripts/topic.min.js"></script><script type="text/javascript" src="../../../template/scripts/topicwidgets.min.js"></script><script type="text/javascript" src="../../../whxdata/projectsettings.js"></script><link rel="stylesheet" type="text/css" href="../../../template/styles/topic.min.css"><link rel="stylesheet" type="text/css" href="../../../template/Charcoal_Grey/topicheader.css"><meta name="topic-status" content="Draft"><meta http-equiv="Content-Type" content="text/html; charset=utf-8"><title>switch</title><meta name="generator" content="Adobe RoboHelp 2022"><link rel="stylesheet" href="../../../assets/css/default.css" type="text/css"><script src="../../../assets/scripts/main_script.js" type="module"></script><meta name="rh-authors" content="Mark Alexander"><meta name="topic-comment" content="Page outlining the switch function"><meta name="rh-index-keywords" content="switch,case"><meta name="search-keywords" content="switch,default"><meta name="brsnext" value="GameMaker_Language/GML_Overview/Language_Features/break.htm"><meta name="brsprev" value="GameMaker_Language/GML_Overview/Language_Features/for.htm"></head><body><div class="topic-header rh-hide" id="rh-topic-header"><div class="logo"></div><div class="nav"><div class="title" title="switch"><span>switch</span></div><div class="gotohome" title="Click here to see this page in full context"><a href="#" onclick="rh._.goToFullLayout()">Click here to see this page in full context</a></div></div></div><div class="topic-header-shadow rh-hide" id="rh-topic-header-shadow"></div><h1>switch</h1><p>In a number of situations you want to let your instances perform different actions depending on a particular value. You can do this using a number of consecutive <a href="If_Else_and_Conditional_Operators.htm"><span class="inline">if / else</span></a> statements, but when the possible choices gets above two or three it is usually easier to use the <span class="inline">switch</span> statement.</p><p>A <span class="inline">switch</span> statement has the following syntax:</p><p class="code">switch (&lt;expression&gt;)<br>{<br>&nbsp;&nbsp;&nbsp;&nbsp;case &lt;constant1&gt;:<br>&nbsp; &nbsp; &nbsp; &nbsp; &lt;code&gt;<br>&nbsp; &nbsp; break;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;case &lt;constant2&gt;:<br>&nbsp; &nbsp; &nbsp; &nbsp; &lt;code&gt;<br>&nbsp; &nbsp; break;<br>&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp; &nbsp; // more cases (with breaks)<br><br>&nbsp;&nbsp;&nbsp;&nbsp;default:<br>&nbsp; &nbsp; &nbsp; &nbsp; &lt;code&gt;;<br>}</p><p>This works as follows:</p><ul class="colour"><li>First the <a class="tooltip" title="An expression is a combination of one or more constants, variables, operators, and/or functions that are interpreted according to particular rules of precedence and association to return another value. A simple expression would be (5 + 5), which returns 10.">expression</a> is executed.</li><li>Next, its result is compared with the different constants after each of the <span class="inline">case</span> <a class="tooltip" title="In programming, a statement is a single line of code written legally in a programming language that expresses an action to be carried out. A statement might have internal components of its own, including expressions, operators and functions. An example of a statement is A = B + 5. A GameMaker Studio 2 program is nothing but a sequence of one or more statements that together perform a task (like move the player). ">statement</a><span class="glossextra">s</span>. When we say "constant" what we mean is that the value in the case cannot be a variable&nbsp;expression and must be a fixed value of any <a href="../Data_Types.htm">data type</a>, like <span class="inline2">"fight"</span> or <span class="inline2">3</span> or the keyword <span class="inline2"><span class="inline"><a href="../Instance_Keywords.htm">noone</a></span></span>.&nbsp;</li><li>The execution begins from the first <span class="inline">case</span> statement with the matching value, <i>until a <a href="break.htm">break</a> statement is encountered</i>.</li><li>If no <span class="inline">case</span> statement has the matching value, then the <span class="inline">default</span> statement will be executed. It is not required to have a <span class="inline">default</span> statement, and if none is supplied then no action will be taken when there are no matching cases. The <span class="inline">default</span> statement can be placed anywhere in a switch block, however it's traditionally placed at the bottom, after all the cases.</li></ul><p class="note"><span class="note">NOTE</span>&nbsp;The switch statement will continue to execute code within a <span class="inline">case</span>, until a <span class="inline">break</span> is encountered. If you do not use <span class="inline">break</span>s at the end of your cases, it will cause the switch to "leak" to the next <span class="inline">case</span>, and even to a <span class="inline">default</span> section, if there are no <span class="inline">break</span>s in the way. This can cause unintended behaviour as the execution of one <span class="inline">case</span> can result in multiple <span class="inline">case</span>s being executed, so ensure to use <span class="inline">break</span> where appropriate.</p><p>A simple example of using a switch statement would be something like this:</p><p class="code">switch (player_lives)<br>{<br>&nbsp; &nbsp; case 3:<br>&nbsp; &nbsp; &nbsp; &nbsp; draw_sprite(20, 20, spr_face_healthy);<br>&nbsp; &nbsp; break;<br><br>&nbsp; &nbsp; case 2:<br>&nbsp; &nbsp; &nbsp; &nbsp; draw_sprite(20, 20, spr_face_hurt);<br>&nbsp; &nbsp;&nbsp;break;<br><br>&nbsp; &nbsp; case 1:<br>&nbsp; &nbsp; &nbsp; &nbsp; draw_sprite(20, 20, spr_face_fatal);<br>&nbsp; &nbsp; break;<br><br>&nbsp; &nbsp; default:<br>&nbsp; &nbsp; &nbsp; &nbsp; draw_sprite(20, 20, spr_face_fainted);<br>&nbsp; &nbsp; break;<br>}</p><p>Note that multiple <span class="inline">case</span> statements can be used to execute the same statement, as the&nbsp;<span class="inline">break</span> is not always required for each and every <span class="inline">case</span>. If there is no <span class="inline">break</span> statement for a particular <span class="inline">case</span>, the execution simply continues with the code for the next case, e.g.:</p><p class="code">switch (keyboard_key)<br>{<br>&nbsp;&nbsp;&nbsp;&nbsp;case vk_left:<br>&nbsp;&nbsp;&nbsp;&nbsp;case ord("A"):<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x -= 4;<br>&nbsp;&nbsp;&nbsp;&nbsp;break;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;case vk_right:<br>&nbsp;&nbsp;&nbsp;&nbsp;case ord("D"):<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x += 4;<br>&nbsp;&nbsp;&nbsp;&nbsp;break;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;case vk_up:<br>&nbsp;&nbsp;&nbsp;&nbsp;case ord("W"):<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;y -= 4;<br>&nbsp;&nbsp;&nbsp;&nbsp;break;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;case vk_down:<br>&nbsp;&nbsp;&nbsp;&nbsp;case ord("S"):<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;y += 4;<br>&nbsp;&nbsp;&nbsp;&nbsp;break;<br>}</p><p>The above code uses <span class="inline">switch</span> to check for a keyboard event and then compares that to each <span class="inline">case</span>&nbsp;listed. If it meets any of the required values then the corresponding code is executed. Note how the&nbsp;<span class="inline">switch</span> can check multiple <span class="inline">cases</span> and execute code until the next&nbsp;<span class="inline">break</span>, to permit various keys to be used to get the same result.</p><p>Each <span class="inline">case</span> can have its own code, so you can set up a sort of "inheritance" system where a case executes its own code and then the code for the next case as well.</p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><div class="footer"><div class="buttons"><div class="clear"><div style="float:left">Back: <a href="../Language_Features.htm">Language&nbsp;Features</a></div><div style="float:right">Next: <a href="break.htm">break</a></div></div></div><h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2024 All Rights Reserved</span></h5></div></body></html>