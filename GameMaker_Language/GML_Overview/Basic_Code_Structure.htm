<!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml"><head><script type="text/javascript" src="../../assets/import/jquery-3.6.1.min.js"></script><script type="text/javascript" src="../../assets/import/layer/layer.js"></script><script type="text/javascript" src="../../assets/import/pangu.min.js"></script><link rel="stylesheet" type="text/css" href="../../assets/import/layer/layui_btn.css"><link rel="stylesheet" type="text/css" href="../../assets/import/layer/layui_col.css"><link rel="stylesheet" type="text/css" href="../../assets/import/layer/theme/default/layer.css"><link rel="stylesheet" type="text/css" href="../../assets/import/main.css"><script>let str;removeHtml=function(t){return t=(t=(t=(t=t.replace(/(<([^>]+)>)/gi,"{}")).replace(/\r\n/g,"\n")).replace(/\n/g,"")).replace(/ {2,}/g," ")},retHtml=function(t){return t.match(/(<([^>]+)>)/gi)},setTranslator=function(t,e,a){let o;o=a?t.attr(a):t.html();let s=e[removeHtml(o)];if(null!=s&&s.length){e=retHtml(o);let n=0;e&&e.forEach(function(t,e){var a=s.replace("{"+n+"}",t);s=a===s?s.replace("{}",t):a,n++}),a?t.attr(a,s):t.html(s)}},noTranslationState=function(){return"true"==window.localStorage.getItem("noTranslationState")},noTranslationStateToggle=function(){window.localStorage.setItem("noTranslationState",!noTranslationState())},addNoTranslationStateButton=function(){var t=`
		
		<button style="
			float: right;
			font-size: 16px;
			padding: 4px 12px;
		"
		onclick="
		window.location.replace('gmmt://'+document.location.hash)
		"
		>打开编辑器</button>

		<button style="
			float: right;
			font-size: 16px;
			padding: 4px 12px;
		"
		onclick="
		noTranslationStateToggle();
		location.reload();
    	event.stopPropagation();
		"
		>切换翻译</button>
		`;$(".header").length?$(".header").append(t):($(".topic-header").append(t),$(".topic-header button").css("position","relative").css("top","44px"))},removeExtensionFromHash=function(t){return t.replaceAll("#t=","").replaceAll("%2F","/").replaceAll(".htm","")};let json_global,json_file={"Basic Code Structure":"基本代码结构",'Code is written in&nbsp;{}blocks{}&nbsp;and a typical&nbsp;code block consists of a set of instructions, called {}statement{}{}s{}, that are then interpreted by {}GameMaker{} and used to make something happen within your game. That "something" can be as simple as adding 2 and 2 to get 4, or as complex as making an enemy run away when their health gets below a certain value. The actual structure of the program can vary greatly, depending on the functions it uses, but broken down to basics it just looks like this:':'代码以{}块{}形式写入，典型的代码块由一组名为{}语句{}{} {}的指令组成，然后由{}GameMaker{}解释并用于在游戏中实现某些操作。"某事"可以简单到加2和2得到4，或者复杂到让敌人在他们的健康状况低于一定值时逃跑。程序的实际结构可能会有很大差异，具体取决于它使用的函数，但细分到基本函数时，它只是看起来如下所示：',"Here is a more visual representation of how a code block can look, this time created as a {}script{} in the {}GameMaker{} {}Script Editor{}:":"以下是代码块外观的更直观表示，这次在{}GameMaker{}{}脚本编辑器{}中创建为{}脚本{}：","Statements should be separated with a ';' symbol to prevent errors with {}variable{} declarations and to keep your code clean and tidy, and they can consist of variable declarations, {}expression{}{}s{} and calls to specific {}functions{}. You can also \"group\" statements together as a block using the curly brackets {}{}{} so that they run together, like in the following {}conditional{}&nbsp;example:":"语句应该用';'符号分隔，以防止{}变量{}声明错误，并保持代码干净整洁，它们可以由变量声明、{}表达式{}{} {}和对特定{}函数{}的调用组成。你也可以使用花括号{}&#123;&#125;{}将语句“分组”成一个块，这样它们就可以一起运行，就像下面的{}条件{}示例:","There are a number of different types of statements, expressions, conditionals and functions, all of which are discussed at length in subsequent sections of the manual.":"有许多不同类型的陈述、表述、条件和函数，所有这些都将在手册的后续章节中详细讨论。","{}NOTE{}&nbsp;If you are new to programming then you may want to check out the {}Quick Start Guide{} before continuing.":"{}注意{}如果您是新编程人员，可能需要先查看{}《快速入门指南》{}，然后再继续。","{}NOTE{}&nbsp;The GameMaker Language will also accept {}begin{}{}&nbsp;{}and {}end{}{}&nbsp;&nbsp;{}instead of the curly brackets {}{}{}, although this is not typically the most common way to do it:":"{}注意{}  GameMaker语言也将接受 {}begin{}{} {} {}和{}end{}{}  {}，而不是花括号{}&#123;&#125;，尽管这不是典型的最常见的方法:"},get_json_global=$.ajax({url:"/global.json",type:"GET",dataType:"json",async:!1,success:function(t){json_global=t}});$(function(){if(addNoTranslationStateButton(),noTranslationState())return!1;$("div.footer a,h4,caption").each(function(){setTranslator($(this),json_global)}),$("p,h1,h2,h3,td,li,a,div.dropspotnote,figcaption").each(function(){setTranslator($(this),json_file)}),$("th,.warning,.important,.optional").each(function(){setTranslator($(this),json_global)}),$(".header").length&&(window.setInterval(function(){$("#toc-panel a:not('isTranslate')").each(function(){$(this).addClass("isTranslate"),setTranslator($(this),json_global)}),$(".GlossDefinitionText:not('isTranslate')").each(function(){$(this).addClass("isTranslate"),setTranslator($(this),json_global)})},250),console.log("成功啦!现在正在疯狂翻译菜单中!")),$(".tooltip").each(function(){setTranslator($(this),json_global,"title")})}),document.addEventListener("DOMContentLoaded",()=>{pangu.autoSpacingPage()})</script><script type="text/javascript" language="JavaScript">function reDo(){innerWidth==origWidth&&innerHeight==origHeight||location.reload()}4==parseInt(navigator.appVersion)&&"Netscape"==navigator.appName&&(origWidth=innerWidth,origHeight=innerHeight,onresize=reDo),onerror=null</script><style type="text/css">p.WebHelpNavBar{text-align:right}</style><script type="text/javascript">gCommonRootRelPath=gRootRelPath="../..",gTopicId="8.2.1.0_1"</script><script type="text/javascript" src="../../template/scripts/rh.min.js"></script><script type="text/javascript" src="../../template/scripts/common.min.js"></script><script type="text/javascript" src="../../template/scripts/topic.min.js"></script><script type="text/javascript" src="../../template/scripts/topicwidgets.min.js"></script><script type="text/javascript" src="../../whxdata/projectsettings.js"></script><link rel="stylesheet" type="text/css" href="../../template/styles/topic.min.css"><link rel="stylesheet" type="text/css" href="../../template/Charcoal_Grey/topicheader.css"><meta name="topic-status" content="Draft"><meta http-equiv="Content-Type" content="text/html; charset=utf-8"><title>Basic Code Structure</title><meta name="generator" content="Adobe RoboHelp 2022"><link rel="stylesheet" href="../../assets/css/default.css" type="text/css"><script src="../../assets/scripts/main_script.js" type="module"></script><meta name="rh-authors" content="Mark Alexander"><meta name="topic-comment" content="Page outlining the basic code structure when using GML"><meta name="rh-index-keywords" content="Code Structure"><meta name="search-keywords" content="Code Structure,begin,end,statement"><meta name="brsnext" value="GameMaker_Language/GML_Overview/Runtime_Functions.htm"><meta name="brsprev" value="GameMaker_Language/GML_Overview/GML_Overview.htm"></head><body><div class="topic-header rh-hide" id="rh-topic-header"><div class="logo"></div><div class="nav"><div class="title" title="Basic Code Structure"><span>Basic Code Structure</span></div><div class="gotohome" title="Click here to see this page in full context"><a href="#" onclick="rh._.goToFullLayout()">Click here to see this page in full context</a></div></div></div><div class="topic-header-shadow rh-hide" id="rh-topic-header-shadow"></div><h1>Basic Code Structure</h1><p>Code is written in&nbsp;<em>blocks</em>&nbsp;and a typical&nbsp;code block consists of a set of instructions, called <a class="tooltip" title="In programming, a statement is a single line of code written legally in a programming language that expresses an action to be carried out. A statement might have internal components of its own, including expressions, operators and functions. An example of a statement is A = B + 5. A GameMaker Studio 2 program is nothing but a sequence of one or more statements that together perform a task (like move the player). ">statement</a><span class="glossextra">s</span>, that are then interpreted by <span data-keyref="GameMaker Name">GameMaker</span> and used to make something happen within your game. That "something" can be as simple as adding 2 and 2 to get 4, or as complex as making an enemy run away when their health gets below a certain value. The actual structure of the program can vary greatly, depending on the functions it uses, but broken down to basics it just looks like this:</p><p class="code">&lt;statement&gt;;<br>&lt;statement&gt;;<br>...</p><p>Statements should be separated with a ';' symbol to prevent errors with <a class="tooltip" title="A variable is a named value within a program which can be modified, stored and displayed whenever required. For example, if we have an integer variable with a name XYZ and it stores a value 10, we can then do things like A = XYZ + 10, which will set the value of the variable A to 20, since XYZ is 10 and we are adding 10 to it. You can also change variable values using operators, so doing XYZ = XYZ + 100 would modify the value of our XYZ variable to be equal to 110. Variables can also be used to store identifiers and references to different assets.">variable</a> declarations and to keep your code clean and tidy, and they can consist of variable declarations, <a class="tooltip" title="An expression is a combination of one or more constants, variables, operators, and/or functions that are interpreted according to particular rules of precedence and association to return another value. A simple expression would be (5 + 5), which returns 10.">expression</a><span class="glossextra">s</span> and calls to specific <strong>functions</strong>. You can also "group" statements together as a block using the curly brackets <span class="inline">{}</span> so that they run together, like in the following <a class="tooltip" title="Conditionals, conditional statements, and conditional expressions are features of general programming language, and they help the code make a choice whrere the result is either true or false. These can perform different actions depending on the need of the programmer, and multiple conditionals can be combined into a single condition, as long as the final value of the condition is either true or false. Examples of conditional statements are 'if' and 'while'.">conditional</a>&nbsp;example:</p><p class="code">if (&lt;conditional&gt;)<br>{<br>&nbsp; &nbsp; &lt;statement&gt;;<br>&nbsp; &nbsp; &lt;statement&gt;;<br>&nbsp; &nbsp; ...<br>}</p><p class="note"><span class="note">NOTE</span>&nbsp;The GameMaker Language will also accept <span class="inline">begin</span><span>&nbsp;</span>and <span class="inline">end</span><span>&nbsp;&nbsp;</span>instead of the curly brackets <span class="inline">{}</span>, although this is not typically the most common way to do it:</p><p class="code">if (&lt;conditional&gt;)<br>begin<br>&nbsp; &nbsp; &lt;statement&gt;;<br>&nbsp; &nbsp; &lt;statement&gt;;<br>&nbsp; &nbsp; ...<br>end</p><p>Here is a more visual representation of how a code block can look, this time created as a <b>script</b> in the <span data-keyref="GameMaker Name">GameMaker</span> <a href="../../The_Asset_Editors/Scripts.htm">Script Editor</a>:</p><p><img alt="Program Example" class="center" src="../../assets/Images/Scripting_Reference/GML/Overview/ProgramExample.png" style="cursor:nwse-resize"></p><p>There are a number of different types of statements, expressions, conditionals and functions, all of which are discussed at length in subsequent sections of the manual.</p><p class="note"><span class="note">NOTE</span>&nbsp;If you are new to programming then you may want to check out the <a href="../../Quick_Start_Guide/Quick_Start_Guide.htm">Quick Start Guide</a> before continuing.</p><p>&nbsp;</p><p>&nbsp;</p><div class="footer"><div class="buttons"><div class="clear"><div style="float:left">Back: <a href="GML_Overview.htm">GML&nbsp;Overview</a></div><div style="float:right">Next: <a href="Runtime_Functions.htm">Runtime Functions</a></div></div></div><h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2024 All Rights Reserved</span></h5></div></body></html>