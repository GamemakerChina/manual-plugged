<!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml"><head><script type="text/javascript" src="../../assets/import/jquery-3.6.1.min.js"></script><script type="text/javascript" src="../../assets/import/layer/layer.js"></script><script type="text/javascript" src="../../assets/import/pangu.min.js"></script><link rel="stylesheet" type="text/css" href="../../assets/import/layer/layui_btn.css"><link rel="stylesheet" type="text/css" href="../../assets/import/layer/layui_col.css"><link rel="stylesheet" type="text/css" href="../../assets/import/layer/theme/default/layer.css"><link rel="stylesheet" type="text/css" href="../../assets/import/main.css"><script>let str;removeHtml=function(e){return e=(e=(e=(e=e.replace(/(<([^>]+)>)/gi,"{}")).replace(/\r\n/g,"\n")).replace(/\n/g,"")).replace(/ {2,}/g," ")},retHtml=function(e){return e.match(/(<([^>]+)>)/gi)},setTranslator=function(e,t,o){let a;a=o?e.attr(o):e.html();let r=t[removeHtml(a)];if(null!=r&&r.length){t=retHtml(a);let n=0;t&&t.forEach(function(e,t){var o=r.replace("{"+n+"}",e);r=o===r?r.replace("{}",e):o,n++}),o?e.attr(o,r):e.html(r)}},noTranslationState=function(){return"true"==window.localStorage.getItem("noTranslationState")},noTranslationStateToggle=function(){window.localStorage.setItem("noTranslationState",!noTranslationState())},addNoTranslationStateButton=function(){var e=`
		
		<button style="
			float: right;
			font-size: 16px;
			padding: 4px 12px;
		"
		onclick="
		window.location.replace('gmmt://'+document.location.hash)
		"
		>打开编辑器</button>

		<button style="
			float: right;
			font-size: 16px;
			padding: 4px 12px;
		"
		onclick="
		noTranslationStateToggle();
		location.reload();
    	event.stopPropagation();
		"
		>切换翻译</button>
		`;$(".header").length?$(".header").append(e):($(".topic-header").append(e),$(".topic-header button").css("position","relative").css("top","44px"))},removeExtensionFromHash=function(e){return e.replaceAll("#t=","").replaceAll("%2F","/").replaceAll(".htm","")};let json_global,json_file={"Evaluation Order":"运算顺序",'Now, the problem here is that on some platforms, the {}last{} {}buffer_read(){} will be called {}first{}, and so all the arguments of the script will be wrong as the data is being read from the buffer in "reverse" order as you would perceive it. This has the knock-on effect here of affecting all further values for the {}buffer_read(){} function so all the arguments being passed to this script function will be wrong!':"现在，这里的问题是，在某些平台上，{}最后的{} {}buffer_read(){}将被{}先调用{}，因此脚本的所有参数都是错误的，因为数据是从缓冲区以“相反”的顺序读取的，正如您所理解的那样。这在这里产生了连锁反应，影响了{}buffer_read(){}函数的所有进一步值，因此传递给这个脚本函数的所有参数都是错误的!","To get around this you should {}explicitly{} call the functions in the required order and store the returned values in variables, like this:":"要避免这种情况，您应该{}以所需的顺序显式调用函数，并将返回的值存储在变量中，如下所示：",'To see an example of what this means, consider the following code which has a {}script&nbsp;function{} "{}buffer_get_info{}" which is&nbsp;calling several {}runtime functions{} and using them as arguments:':'要了解这意味着什么，考虑以下代码，它有一个{}脚本函数{} "{}buffer_get_info{}"，它调用几个{}运行时函数{}并使用它们作为参数:',"When programming your game using&nbsp;the GameMaker Language you should be aware that function call arguments {}are not guaranteed an evaluation order{}. What this means is that the order in which functions placed in your code are run will change from platform to platform, so you should code them in an explicit manner. This is due to optimisation differences between the different target platforms, for example on the Windows target function arguments&nbsp;may be evaluated from right to left, but on the HTML5 target, they may be evaluated from left to right. So to avoid any issues you are best not to call multiple functions in the arguments of a single function call as you may well be building in a reliance on the order of evaluation.":"当使用GameMaker语言编程你的游戏时，你应该意识到函数调用参数{}并不能保证计算顺序{}。这意味着代码中函数的运行顺序会因平台而异，因此应该以显式的方式编写它们。这是由于不同目标平台之间的优化差异，例如在Windows目标函数参数可能从右向左计算，但在HTML5目标上，它们可能从左向右计算。因此，为了避免任何问题，你最好不要在一个函数调用的参数中调用多个函数，因为你可能会建立对求值顺序的依赖。","While it may seem a more verbose method, it keeps everything clear and avoids any possible problems with evaluation order.":"虽然它看起来似乎是一种更详细的方法，但它保持了一切清晰，并避免了任何可能的运算顺序问题。","You should also take care when using {}expression{}{}s{} too, as the order in which they are evaluated in will change depending on which target you are compiling to. So, when using expressions in your code, ensure you use brackets {}(){} to properly control the order of operations. This is very important to ensure the correct behaviour of your games across all the target platforms games and is {}essential{} for the HTML5 platform. The page on {}expressions{} explains this in more detail.":"使用{}表达式{}{} {}时也应注意，因为它们的计算顺序将根据要编译到的目标而改变。因此，在代码中使用表达式时，请确保使用括号{}(){}来正确控制操作顺序。这对于确保您的游戏在所有目标平台游戏中的正确行为非常重要，并且对于HTML5平台来说{}是必不可少的{}。{}表达式{}上的页面对此进行了更详细的说明。"},get_json_global=$.ajax({url:"/global.json",type:"GET",dataType:"json",async:!1,success:function(e){json_global=e}});$(function(){if(addNoTranslationStateButton(),noTranslationState())return!1;$("div.footer a,h4,caption").each(function(){setTranslator($(this),json_global)}),$("p,h1,h2,h3,td,li,a,div.dropspotnote,figcaption").each(function(){setTranslator($(this),json_file)}),$("th,.warning,.important,.optional").each(function(){setTranslator($(this),json_global)}),$(".header").length&&(window.setInterval(function(){$("#toc-panel a:not('isTranslate')").each(function(){$(this).addClass("isTranslate"),setTranslator($(this),json_global)}),$(".GlossDefinitionText:not('isTranslate')").each(function(){$(this).addClass("isTranslate"),setTranslator($(this),json_global)})},250),console.log("成功啦!现在正在疯狂翻译菜单中!")),$(".tooltip").each(function(){setTranslator($(this),json_global,"title")})}),document.addEventListener("DOMContentLoaded",()=>{pangu.autoSpacingPage()})</script><script type="text/javascript" language="JavaScript">function reDo(){innerWidth==origWidth&&innerHeight==origHeight||location.reload()}4==parseInt(navigator.appVersion)&&"Netscape"==navigator.appName&&(origWidth=innerWidth,origHeight=innerHeight,onresize=reDo),onerror=null</script><style type="text/css">p.WebHelpNavBar{text-align:right}</style><script type="text/javascript">gCommonRootRelPath=gRootRelPath="../..",gTopicId="8.2.1.2_3"</script><script type="text/javascript" src="../../template/scripts/rh.min.js"></script><script type="text/javascript" src="../../template/scripts/common.min.js"></script><script type="text/javascript" src="../../template/scripts/topic.min.js"></script><script type="text/javascript" src="../../template/scripts/topicwidgets.min.js"></script><script type="text/javascript" src="../../whxdata/projectsettings.js"></script><link rel="stylesheet" type="text/css" href="../../template/styles/topic.min.css"><link rel="stylesheet" type="text/css" href="../../template/Charcoal_Grey/topicheader.css"><meta name="topic-status" content="Draft"><meta http-equiv="Content-Type" content="text/html; charset=utf-8"><title>Evaluation Order</title><meta name="generator" content="Adobe RoboHelp 2022"><link rel="stylesheet" href="../../assets/css/default.css" type="text/css"><script src="../../assets/scripts/main_script.js" type="module"></script><meta name="rh-authors" content="Mark Alexander"><meta name="topic-comment" content="Page outlining the Evaluation Order of arguments"><meta name="rh-index-keywords" content="Evaluation Order"><meta name="search-keywords" content="Evaluation Order"><meta name="brsnext" value="GameMaker_Language/GML_Overview/Accessors.htm"><meta name="brsprev" value="GameMaker_Language/GML_Overview/Instance_Keywords.htm"></head><body><div class="topic-header rh-hide" id="rh-topic-header"><div class="logo"></div><div class="nav"><div class="title" title="Evaluation Order"><span>Evaluation Order</span></div><div class="gotohome" title="Click here to see this page in full context"><a href="#" onclick="rh._.goToFullLayout()">Click here to see this page in full context</a></div></div></div><div class="topic-header-shadow rh-hide" id="rh-topic-header-shadow"></div><h1>Evaluation Order</h1><p>When programming your game using&nbsp;the GameMaker Language you should be aware that function call arguments <strong>are not guaranteed an evaluation order</strong>. What this means is that the order in which functions placed in your code are run will change from platform to platform, so you should code them in an explicit manner. This is due to optimisation differences between the different target platforms, for example on the Windows target function arguments&nbsp;may be evaluated from right to left, but on the HTML5 target, they may be evaluated from left to right. So to avoid any issues you are best not to call multiple functions in the arguments of a single function call as you may well be building in a reliance on the order of evaluation.</p><p>To see an example of what this means, consider the following code which has a <a href="Script_Functions.htm">script&nbsp;function</a> "<span class="inline">buffer_get_info</span>" which is&nbsp;calling several <a href="Runtime_Functions.htm">runtime functions</a> and using them as arguments:</p><p class="code">buffer_seek(buff, buffer_seek_start, 0);<br>buffer_get_info(buffer_read(buff, buffer_s8), buffer_read(buff, buffer_s16),buffer_read(buff, buffer_s16));</p><p>Now, the problem here is that on some platforms, the <i>last</i> <span class="inline">buffer_read()</span> will be called <i>first</i>, and so all the arguments of the script will be wrong as the data is being read from the buffer in "reverse" order as you would perceive it. This has the knock-on effect here of affecting all further values for the <span class="inline">buffer_read()</span> function so all the arguments being passed to this script function will be wrong!</p><p>To get around this you should <i>explicitly</i> call the functions in the required order and store the returned values in variables, like this:</p><p class="code">var val[0] = buffer_read(buff, buffer_s8);<br>var val[1] = buffer_read(buff, buffer_s16);<br>var val[2] = buffer_read(buff, buffer_s16);<br>buffer_get_info(val[0], val[1], val[2]);</p><p>While it may seem a more verbose method, it keeps everything clear and avoids any possible problems with evaluation order.</p><p>You should also take care when using <a class="tooltip" title="An expression is a combination of one or more constants, variables, operators, and/or functions that are interpreted according to particular rules of precedence and association to return another value. A simple expression would be (5 + 5), which returns 10.">expression</a><span class="glossextra">s</span> too, as the order in which they are evaluated in will change depending on which target you are compiling to. So, when using expressions in your code, ensure you use brackets <span class="inline">()</span> to properly control the order of operations. This is very important to ensure the correct behaviour of your games across all the target platforms games and is <i>essential</i> for the HTML5 platform. The page on <a href="Expressions_And_Operators.htm">expressions</a> explains this in more detail.</p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><div class="footer"><div class="buttons"><div class="clear"><div style="float:left">Back: <a href="GML_Overview.htm">GML&nbsp;Overview</a></div><div style="float:right">Next:&nbsp;<a href="Accessors.htm">Accessors</a></div></div></div><h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2024 All Rights Reserved</span></h5></div></body></html>