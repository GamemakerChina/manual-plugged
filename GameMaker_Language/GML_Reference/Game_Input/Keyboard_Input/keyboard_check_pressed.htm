<!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml"><head><script type="text/javascript" src="../../../../assets/import/jquery-3.6.1.min.js"></script><script type="text/javascript" src="../../../../assets/import/layer/layer.js"></script><script type="text/javascript" src="../../../../assets/import/pangu.min.js"></script><link rel="stylesheet" type="text/css" href="../../../../assets/import/layer/layui_btn.css"><link rel="stylesheet" type="text/css" href="../../../../assets/import/layer/layui_col.css"><link rel="stylesheet" type="text/css" href="../../../../assets/import/layer/theme/default/layer.css"><link rel="stylesheet" type="text/css" href="../../../../assets/import/main.css"><script>let str;removeHtml=function(t){return t=(t=(t=(t=t.replace(/(<([^>]+)>)/gi,"{}")).replace(/\r\n/g,"\n")).replace(/\n/g,"")).replace(/ {2,}/g," ")},retHtml=function(t){return t.match(/(<([^>]+)>)/gi)},setTranslator=function(t,e,n){let a;a=n?t.attr(n):t.html();let r=e[removeHtml(a)];if(null!=r&&r.length){e=retHtml(a);let o=0;e&&e.forEach(function(t,e){var n=r.replace("{"+o+"}",t);r=n===r?r.replace("{}",t):n,o++}),n?t.attr(n,r):t.html(r)}},noTranslationState=function(){return"true"==window.localStorage.getItem("noTranslationState")},noTranslationStateToggle=function(){window.localStorage.setItem("noTranslationState",!noTranslationState())},addNoTranslationStateButton=function(){var t=`
		
		<button style="
			float: right;
			font-size: 16px;
			padding: 4px 12px;
		"
		onclick="
		window.location.replace('gmmt://'+document.location.hash)
		"
		>打开编辑器</button>

		<button style="
			float: right;
			font-size: 16px;
			padding: 4px 12px;
		"
		onclick="
		noTranslationStateToggle();
		location.reload();
    	event.stopPropagation();
		"
		>切换翻译</button>
		`;$(".header").length?$(".header").append(t):($(".topic-header").append(t),$(".topic-header button").css("position","relative").css("top","44px"))},removeExtensionFromHash=function(t){return t.replaceAll("#t=","").replaceAll("%2F","/").replaceAll(".htm","")};let json_global,json_file={'The above code will advance to the next room if the player presses any of the keyboard\'s keys (working like a "Press Any Key to Continue"&nbsp;prompt).':"如果玩家按下键盘上的任意键(其作用类似于 “按任意键继续” 提示)，上面的代码将进入下一个房间。","The function will take a keycode value as returned by the function&nbsp;{}{}ord{}{} (only {}capital{} letters from A-Z or numbers from 0-9), or any of the {}vk_*{} constants listed on the main&nbsp;{}Keyboard Input{} page.":"该函数将采用函数 {}{}ord{}{} 返回的 keycode 值 (仅 {}a-Z 的大写字母 {} 或 0-9 的数字)，或主{}键盘输入{}页面上列出的 {6}vk_*{7} 常量中的任何一个。","The key to check the pressed state of.":"检查按下状态的键。","Unlike the&nbsp;{}{}keyboard_check{}{} function, this function will only return {}true{} in the step the key is pressed down, i.e. when it switches from not held down in the previous step to held down in the current step. So for it to return {}true{} again, the key must be first released and then pressed again. In all other steps, the function returns {}false{}.":"与 {}{}keyboard_check{}{} 函数不同，此函数仅在按下按键的步骤中返回 {}true{}，即当其从前一步骤中的未保持向下切换到当前步骤中的保持向下时。因此，要再次返回 {}true{}，必须先释放该键，然后再次按下。在所有其他步骤中，函数返回 {}false{}。","Virtual Key Constant (vk_*)":"虚拟按键常数 (vk_*)","With this function you can check to see if a key has been pressed or not.":"使用此函数，您可以检查是否按下了键。","With this function you can check to see if a key has been pressed or not. Unlike the {}{}keyboard_check(){}{} function, this function will only run once for every time the key is pressed down, so for it to trigger again, the key must be first released and then pressed again. The function will take a keycode value as returned by the function {}{}ord(){}{} (only {}capital{} letters from A-Z or numbers from 0-9), or any of the {}vk_*{} constants listed on the main {}Keyboard Input{} page.":"使用此函数，您可以检查是否按下了键。与 {}{}keyboard_check(){}{} 函数不同，该函数每次按下该键时只会运行一次，因此要使其再次触发，必须先释放该键，然后再按下。该函数将采用函数 {}{}ord(){}{} 返回的 keycode 值 (仅 {}a-Z 的大写字母 {} 或 0-9 的数字)，或主{}键盘输入{}页面上列出的 {10}vk_*{11} 常量中的任何一个。"},get_json_global=$.ajax({url:"/global.json",type:"GET",dataType:"json",async:!1,success:function(t){json_global=t}});$(function(){if(addNoTranslationStateButton(),noTranslationState())return!1;$("div.footer a,h4,caption").each(function(){setTranslator($(this),json_global)}),$("p,h1,h2,h3,td,li,a,div.dropspotnote,figcaption").each(function(){setTranslator($(this),json_file)}),$("th,.warning,.important,.optional").each(function(){setTranslator($(this),json_global)}),$(".header").length&&(window.setInterval(function(){$("#toc-panel a:not('isTranslate')").each(function(){$(this).addClass("isTranslate"),setTranslator($(this),json_global)}),$(".GlossDefinitionText:not('isTranslate')").each(function(){$(this).addClass("isTranslate"),setTranslator($(this),json_global)})},250),console.log("成功啦!现在正在疯狂翻译菜单中!")),$(".tooltip").each(function(){setTranslator($(this),json_global,"title")})}),document.addEventListener("DOMContentLoaded",()=>{pangu.autoSpacingPage()})</script><script type="text/javascript" language="JavaScript">function reDo(){innerWidth==origWidth&&innerHeight==origHeight||location.reload()}4==parseInt(navigator.appVersion)&&"Netscape"==navigator.appName&&(origWidth=innerWidth,origHeight=innerHeight,onresize=reDo),onerror=null</script><style type="text/css">p.WebHelpNavBar{text-align:right}</style><script type="text/javascript">gCommonRootRelPath=gRootRelPath="../../../..",gTopicId="8.2.2.8.1.0_3"</script><script type="text/javascript" src="../../../../template/scripts/rh.min.js"></script><script type="text/javascript" src="../../../../template/scripts/common.min.js"></script><script type="text/javascript" src="../../../../template/scripts/topic.min.js"></script><script type="text/javascript" src="../../../../template/scripts/topicwidgets.min.js"></script><script type="text/javascript" src="../../../../whxdata/projectsettings.js"></script><link rel="stylesheet" type="text/css" href="../../../../template/styles/topic.min.css"><link rel="stylesheet" type="text/css" href="../../../../template/Charcoal_Grey/topicheader.css"><meta name="topic-status" content="Draft"><meta http-equiv="Content-Type" content="text/html; charset=utf-8"><title>keyboard_check_pressed</title><meta name="generator" content="Adobe RoboHelp 2022"><link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css"><script src="../../../../assets/scripts/main_script.js" type="module"></script><meta name="rh-authors" content="Mark Alexander"><meta name="topic-comment" content="Reference page for keyboard_check_pressed"><meta name="rh-index-keywords" content="keyboard_check_pressed"><meta name="search-keywords" content="keyboard_check_pressed"><meta name="is_pure" content="true"><meta name="brsnext" value="GameMaker_Language/GML_Reference/Game_Input/Keyboard_Input/keyboard_check_released.htm"><meta name="brsprev" value="GameMaker_Language/GML_Reference/Game_Input/Keyboard_Input/keyboard_check.htm"></head><body><div class="topic-header rh-hide" id="rh-topic-header"><div class="logo"></div><div class="nav"><div class="title" title="keyboard_check_pressed"><span>keyboard_check_pressed</span></div><div class="gotohome" title="Click here to see this page in full context"><a href="#" onclick="rh._.goToFullLayout()">Click here to see this page in full context</a></div></div></div><div class="topic-header-shadow rh-hide" id="rh-topic-header-shadow"></div><h1><span data-field="title" data-format="default">keyboard_check_pressed</span></h1><p>With this function you can check to see if a key has been pressed or not.</p><p>Unlike the&nbsp;<span class="inline3_func"><a href="keyboard_check.htm">keyboard_check</a></span> function, this function will only return <span class="inline2">true</span> in the step the key is pressed down, i.e. when it switches from not held down in the previous step to held down in the current step. So for it to return <span class="inline2">true</span> again, the key must be first released and then pressed again. In all other steps, the function returns <span class="inline2">false</span>.</p><p>The function will take a keycode value as returned by the function&nbsp;<span class="inline3_func"><a href="../../Strings/ord.htm">ord</a></span> (only <i>capital</i> letters from A-Z or numbers from 0-9), or any of the <span class="inline">vk_*</span> constants listed on the main&nbsp;<a href="Keyboard_Input.htm">Keyboard Input</a> page.</p><p>&nbsp;</p><h4><b>Syntax:</b></h4><p class="code"><span data-field="title" data-format="default">keyboard_check_pressed</span>(key);</p><table><tbody><tr><th>Argument</th><th>Type</th><th>Description</th></tr><tr><td>key</td><td><span data-keyref="Type_Constant_VK"><a target="_blank" href="Keyboard_Input.htm">Virtual Key Constant (vk_*)</a></span></td><td>The key to check the pressed state of.</td></tr></tbody></table><p>&nbsp;</p><h4><b>Returns:</b></h4><p class="code"><span data-keyref="Type_Bool"><a target="_blank" href="../../../GML_Overview/Data_Types.htm">Boolean</a></span></p><p>&nbsp;</p><h4><b>Example:</b></h4><p class="code">if <span data-field="title" data-format="default">keyboard_check_pressed</span>(vk_anykey)<br>{<br>&nbsp; &nbsp;&nbsp;room_goto_next();<br>}</p><p>The above code will advance to the next room if the player presses any of the keyboard's keys (working like a "Press Any Key to Continue"&nbsp;prompt).</p><p>&nbsp;</p><p>&nbsp;</p><div class="footer"><div class="buttons"><div class="clear"><div style="float:left">Back:&nbsp;<a href="Keyboard_Input.htm">Keyboard Input</a></div><div style="float:right">Next:&nbsp;<a href="keyboard_check_released.htm">keyboard_check_released</a></div></div></div><h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2024 All Rights Reserved</span></h5></div></body></html>