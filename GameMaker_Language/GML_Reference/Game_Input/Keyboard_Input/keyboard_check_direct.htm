<!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml"><head><script type="text/javascript" src="../../../../assets/import/jquery-3.6.1.min.js"></script><script type="text/javascript" src="../../../../assets/import/layer/layer.js"></script><script type="text/javascript" src="../../../../assets/import/pangu.min.js"></script><link rel="stylesheet" type="text/css" href="../../../../assets/import/layer/layui_btn.css"><link rel="stylesheet" type="text/css" href="../../../../assets/import/layer/layui_col.css"><link rel="stylesheet" type="text/css" href="../../../../assets/import/layer/theme/default/layer.css"><link rel="stylesheet" type="text/css" href="../../../../assets/import/main.css"><script>let str;removeHtml=function(t){return t=(t=(t=(t=t.replace(/(<([^>]+)>)/gi,"{}")).replace(/\r\n/g,"\n")).replace(/\n/g,"")).replace(/ {2,}/g," ")},retHtml=function(t){return t.match(/(<([^>]+)>)/gi)},setTranslator=function(t,e,o){let a;a=o?t.attr(o):t.html();let r=e[removeHtml(a)];if(null!=r&&r.length){e=retHtml(a);let n=0;e&&e.forEach(function(t,e){var o=r.replace("{"+n+"}",t);r=o===r?r.replace("{}",t):o,n++}),o?t.attr(o,r):t.html(r)}},noTranslationState=function(){return"true"==window.localStorage.getItem("noTranslationState")},noTranslationStateToggle=function(){window.localStorage.setItem("noTranslationState",!noTranslationState())},addNoTranslationStateButton=function(){var t=`
		
		<button style="
			float: right;
			font-size: 16px;
			padding: 4px 12px;
		"
		onclick="
		window.location.replace('gmmt://'+document.location.hash)
		"
		>打开编辑器</button>

		<button style="
			float: right;
			font-size: 16px;
			padding: 4px 12px;
		"
		onclick="
		noTranslationStateToggle();
		location.reload();
    	event.stopPropagation();
		"
		>切换翻译</button>
		`;$(".header").length?$(".header").append(t):($(".topic-header").append(t),$(".topic-header button").css("position","relative").css("top","44px"))},removeExtensionFromHash=function(t){return t.replaceAll("#t=","").replaceAll("%2F","/").replaceAll(".htm","")};let json_global,json_file={"It allows for a few more checks, in particular you can use keycodes {}vk_lshift{}, {}vk_lcontrol{}, {}vk_lalt{}, {}vk_rshift{}, {}vk_rcontrol{} and {}vk_ralt{} to check whether the left or right shift, control or alt key is pressed. The function will take a keycode value as returned by the function&nbsp;{}{}ord{}{} (only {}capital{} letters from A-Z or numbers from 0-9), or any of the {}vk_*{} constants listed on the main&nbsp;{}Keyboard Input{} page.":"它允许进行更多检查，特别是您可以使用键码 {} vk_lshift {},{} vk_lcontrol {},{} vk_lalt {},{} vk_rshift {},{} vk_rcontrol {} 和 {} vk_ralt {} 来检查是否按下了左或右 shift，control 或 alt 键。该函数将采用函数 {}{}ord(){}{} 返回的 keycode 值 (仅 {}a-Z 的大写字母 {} 或 0- 9 的数字)，或主{}键盘输入{}页面上列出的 {18}vk_ *{19} 常量中的任何一个。",'The above code will check to see if either the left or right alt keys have been pressed, and if they have it sets the variable "crouch" to true.':"上面的代码将检查是否已按下左或右alt键，以及是否将变量 “crouch” 设置为true。","The above code will check to see if either the left or right alt keys have been pressed, and if they have it sets the variable {}crouch{} to {}true{}.":"上面的代码将检查是否已按下左或右 Alt 键，以及是否将变量 {}crouch{} 设置为 {}true{}。","The function will take a keycode value as returned by the function&nbsp;{}{}ord{}{} (only {}capital{} letters from A-Z or numbers from 0-9), or any of the {}vk_*{} constants listed on the main&nbsp;{}Keyboard Input{} page.":"该函数将采用函数 {}{}ord{}{} 返回的键码值 (仅限 A-Z 的 {} 大写 {} 字母或 0-9 的数字) 或任意 {}vk_*{} 常量在 {} 键盘输入 {} 主页上列出。","The key to check the down state of.":"检查按键按下的状态。","This function will return {}true{} if the key with the particular keycode is pressed, or {}false{} if it is not, by checking the hardware directly.":"如果按下带有特定键码的键，此函数将返回 {}true{}，如果不按下，则返回 {}false{}，方法是直接检查硬件。","This function will return {}true{} if the key with the particular keycode is pressed, or {}false{} if it is not, by checking the hardware directly. It allows for a few more checks, in particular you can use keycodes {}vk_lshift{}, {}vk_lcontrol{}, {}vk_lalt{}, {}vk_rshift{}, {}vk_rcontrol{} and {}vk_ralt{} to check whether the left or right shift, control or alt key is pressed. The function will take a keycode value as returned by the function {}{}ord(){}{} (only {}capital{} letters from A-Z or numbers from 0-9), or any of the {}vk_*{} constants listed on the main {}Keyboard Input{} page.":"如果按下带有特定键码的键，此函数将返回 {}true{}，如果不按下，则返回 {}false{}，方法是直接检查硬件。它允许进行更多检查，特别是您可以使用键码 {} vk_lshift {},{} vk_lcontrol {},{} vk_lalt {},{} vk_rshift {},{} vk_rcontrol {} 和 {} vk_ralt {} 来检查是否按下了左或右 shift，control 或 alt 键。该函数将采用函数 {}{}ord(){}{} 返回的 keycode 值 (仅 {}a-Z 的大写字母 {} 或 0- 9 的数字)，或主{}键盘输入{}页面上列出的 {22}vk_ *{23} 常量中的任何一个。","{}{}NOTE{} {}This function is only available for the standard Windows target and the result is independent of which application has focus.":"{}{}注意{}{} 此函数仅适用于标准Windows目标，并且结果与哪个应用程序具有重点无关。","{}{}NOTE{}{}&nbsp;This function is only available for the standard Windows target and the result is independent of which application has focus.":"{}{}注意{}{} 此函数仅适用于标准Windows目标，并且结果与哪个应用程序具有重点无关。","{}{}NOTE{}{}&nbsp;This function is only available for the standard Windows target and the result is independent of which application has focus. On all other platforms it behaves the same as&nbsp;{}{}keyboard_check{}{}.":"{}{} 注意{}{} 此函数仅适用于标准 Windows 目标，其结果与获得焦点的应用程序无关。在所有其他平台上，其行为与 {}{}keyboard_check{}{} 相同。"},get_json_global=$.ajax({url:"/global.json",type:"GET",dataType:"json",async:!1,success:function(t){json_global=t}});$(function(){if(addNoTranslationStateButton(),noTranslationState())return!1;$("div.footer a,h4,caption").each(function(){setTranslator($(this),json_global)}),$("p,h1,h2,h3,td,li,a,div.dropspotnote,figcaption").each(function(){setTranslator($(this),json_file)}),$("th,.warning,.important,.optional").each(function(){setTranslator($(this),json_global)}),$(".header").length&&(window.setInterval(function(){$("#toc-panel a:not('isTranslate')").each(function(){$(this).addClass("isTranslate"),setTranslator($(this),json_global)}),$(".GlossDefinitionText:not('isTranslate')").each(function(){$(this).addClass("isTranslate"),setTranslator($(this),json_global)})},250),console.log("成功啦!现在正在疯狂翻译菜单中!")),$(".tooltip").each(function(){setTranslator($(this),json_global,"title")})}),document.addEventListener("DOMContentLoaded",()=>{pangu.autoSpacingPage()})</script><script type="text/javascript" language="JavaScript">function reDo(){innerWidth==origWidth&&innerHeight==origHeight||location.reload()}4==parseInt(navigator.appVersion)&&"Netscape"==navigator.appName&&(origWidth=innerWidth,origHeight=innerHeight,onresize=reDo),onerror=null</script><style type="text/css">p.WebHelpNavBar{text-align:right}</style><script type="text/javascript">gCommonRootRelPath=gRootRelPath="../../../..",gTopicId="8.2.2.8.1.0_5"</script><script type="text/javascript" src="../../../../template/scripts/rh.min.js"></script><script type="text/javascript" src="../../../../template/scripts/common.min.js"></script><script type="text/javascript" src="../../../../template/scripts/topic.min.js"></script><script type="text/javascript" src="../../../../template/scripts/topicwidgets.min.js"></script><script type="text/javascript" src="../../../../whxdata/projectsettings.js"></script><link rel="stylesheet" type="text/css" href="../../../../template/styles/topic.min.css"><link rel="stylesheet" type="text/css" href="../../../../template/Charcoal_Grey/topicheader.css"><meta name="topic-status" content="Draft"><meta http-equiv="Content-Type" content="text/html; charset=utf-8"><title>keyboard_check_direct</title><meta name="generator" content="Adobe RoboHelp 2022"><link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css"><script src="../../../../assets/scripts/main_script.js" type="module"></script><meta name="rh-authors" content="Mark Alexander"><meta name="topic-comment" content="Reference page for keyboard_check_direct"><meta name="rh-index-keywords" content="keyboard_check_direct"><meta name="search-keywords" content="keyboard_check_direct"><meta name="is_pure" content="true"><meta name="brsnext" value="GameMaker_Language/GML_Reference/Game_Input/Keyboard_Input/keyboard_clear.htm"><meta name="brsprev" value="GameMaker_Language/GML_Reference/Game_Input/Keyboard_Input/keyboard_check_released.htm"></head><body><div class="topic-header rh-hide" id="rh-topic-header"><div class="logo"></div><div class="nav"><div class="title" title="keyboard_check_direct"><span>keyboard_check_direct</span></div><div class="gotohome" title="Click here to see this page in full context"><a href="#" onclick="rh._.goToFullLayout()">Click here to see this page in full context</a></div></div></div><div class="topic-header-shadow rh-hide" id="rh-topic-header-shadow"></div><h1><span data-field="title" data-format="default">keyboard_check_direct</span></h1><p>This function will return <span class="inline2">true</span> if the key with the particular keycode is pressed, or <span class="inline2">false</span> if it is not, by checking the hardware directly.</p><p>The function will take a keycode value as returned by the function&nbsp;<span class="inline3_func"><a href="../../Strings/ord.htm">ord</a></span> (only <i>capital</i> letters from A-Z or numbers from 0-9), or any of the <span class="inline2">vk_*</span> constants listed on the main&nbsp;<a href="Keyboard_Input.htm">Keyboard Input</a> page.</p><p class="note"><span data-conref="../../../../assets/snippets/Tag_note.hts"><span class="note">NOTE</span></span>&nbsp;This function is only available for the standard Windows target and the result is independent of which application has focus. On all other platforms it behaves the same as&nbsp;<span class="inline3_func"><a href="keyboard_check.htm">keyboard_check</a></span>.</p><p>&nbsp;</p><h4><b>Syntax:</b></h4><p class="code"><span data-field="title" data-format="default">keyboard_check_direct</span>(key);</p><table><tbody><tr><th>Argument</th><th>Type</th><th>Description</th></tr><tr><td>key</td><td><span data-keyref="Type_Constant_VK"><a target="_blank" href="Keyboard_Input.htm">Virtual Key Constant (vk_*)</a></span></td><td>The key to check the down state of.</td></tr></tbody></table><p>&nbsp;</p><h4><b>Returns:</b></h4><p class="code"><span data-keyref="Type_Bool"><a target="_blank" href="../../../GML_Overview/Data_Types.htm">Boolean</a></span></p><p>&nbsp;</p><h4><b>Example:</b></h4><p class="code">if <span data-field="title" data-format="default">keyboard_check_direct</span>(vk_ralt) || <span data-field="title" data-format="default">keyboard_check_direct</span>(vk_lalt)<br>{<br>&nbsp; &nbsp; crouch = true;<br>}</p><p>The above code will check to see if either the left or right alt keys have been pressed, and if they have it sets the variable <span class="inline2">crouch</span> to <span class="inline2">true</span>.</p><p>&nbsp;</p><p>&nbsp;</p><div class="footer"><div class="buttons"><div class="clear"><div style="float:left">Back:&nbsp;<a href="Keyboard_Input.htm">Keyboard Input</a></div><div style="float:right">Next:&nbsp;<a href="keyboard_clear.htm">keyboard_clear</a></div></div></div><h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2024 All Rights Reserved</span></h5></div></body></html>