<!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml"><head><script type="text/javascript" src="../../../../assets/import/jquery-3.6.1.min.js"></script><script type="text/javascript" src="../../../../assets/import/layer/layer.js"></script><script type="text/javascript" src="../../../../assets/import/pangu.min.js"></script><link rel="stylesheet" type="text/css" href="../../../../assets/import/layer/layui_btn.css"><link rel="stylesheet" type="text/css" href="../../../../assets/import/layer/layui_col.css"><link rel="stylesheet" type="text/css" href="../../../../assets/import/layer/theme/default/layer.css"><link rel="stylesheet" type="text/css" href="../../../../assets/import/main.css"><script>let str;removeHtml=function(t){return t=(t=(t=(t=t.replace(/(<([^>]+)>)/gi,"{}")).replace(/\r\n/g,"\n")).replace(/\n/g,"")).replace(/ {2,}/g," ")},retHtml=function(t){return t.match(/(<([^>]+)>)/gi)},setTranslator=function(t,e,o){let a;a=o?t.attr(o):t.html();let s=e[removeHtml(a)];if(null!=s&&s.length){e=retHtml(a);let n=0;e&&e.forEach(function(t,e){var o=s.replace("{"+n+"}",t);s=o===s?s.replace("{}",t):o,n++}),o?t.attr(o,s):t.html(s)}},noTranslationState=function(){return"true"==window.localStorage.getItem("noTranslationState")},noTranslationStateToggle=function(){window.localStorage.setItem("noTranslationState",!noTranslationState())},addNoTranslationStateButton=function(){var t=`
		
		<button style="
			float: right;
			font-size: 16px;
			padding: 4px 12px;
		"
		onclick="
		window.location.replace('gmmt://'+document.location.hash)
		"
		>打开编辑器</button>

		<button style="
			float: right;
			font-size: 16px;
			padding: 4px 12px;
		"
		onclick="
		noTranslationStateToggle();
		location.reload();
    	event.stopPropagation();
		"
		>切换翻译</button>
		`;$(".header").length?$(".header").append(t):($(".topic-header").append(t),$(".topic-header button").css("position","relative").css("top","44px"))},removeExtensionFromHash=function(t){return t.replaceAll("#t=","").replaceAll("%2F","/").replaceAll(".htm","")};let json_global,json_file={"Below you can find a list of all the gamepad functions:":"下面，您可以找到所有gamepad函数的列表：",Compatibility:"兼容性","D-pad down":"D-pad 下","D-pad left":"D-pad 左","D-pad right":"D-pad 右","D-pad up":"D-pad 上",Functions:"函数","Gamepad Axis Constant":"游戏手柄轴常数","Gamepad Button Constant":"游戏手柄按钮常数","Gamepad Input":"游戏手柄输入",'Gamepad support also extends to {}iOS {}with the iCade cabinet. The left axis maps to the stick controller (although the input is digital, not analogue), the four "face" buttons map to the cabinet front buttons, and the four shoulder buttons map to those at the back of the cabinet.':"通过iCade机柜，GamePad支持也扩展到了{}iOS{}。左轴映射到操纵杆控制器(尽管输入是数字的，而不是模拟的)，四个“面”按钮映射到机柜前面的按钮，四个肩部按钮映射到机柜后面的按钮。",'Ideally, on {}all{} target platforms, you want to enumerate a list of available gamepad "slots" and then check them to see if any devices are detected, something like this:':"理想情况下，在{}所有{}目标平台上，您要枚举可用的游戏手柄 “插槽” 列表，然后检查它们以查看是否检测到任何设备，如下:","Input Constants":"输入常数",'It is worth noting that Direct Input gamepads are run in {}cooperative mode{} which means that your game only has access to them when it is the foreground application, which in turn will cause Direct Input controllers to be "lost" if the game loses focus and then "found" again when it comes back into focus (this can be detected in the System Event and dealt with). Similarly, no input from gamepads will be detected while the game is not in focus, and we recommend that you use the function {}{}os_is_paused(){}{}&nbsp;or {}{}window_has_focus(){}{} to detect this and pause the game or something similar as any button being held down at the time the game loses focus will maintain the held down state until the game regains focus.':"值得注意的是，直接输入游戏手柄以{}合作模式{}运行，这意味着您的游戏只有在前台应用程序时才能访问它们，反过来，如果游戏失去焦点，则会导致直接输入控制器 “丢失”，然后在重新聚焦时再次 “找到” (这可以在系统事件中检测到并处理)。同样，当游戏不在焦点中时，不会检测到来自游戏手柄的输入，并且我们建议您使用函数{}{}os_is_pauzed(){}{}或{}{}window_has_focus(){}{}来检测到这一点，并暂停游戏或类似在游戏失去焦点时被按住的任何按钮将保持被按住的状态，直到游戏重新获得焦点。",'It is worth noting that when using DirectInput gamepads on Windows, or generic gamepads on other platforms, the constants given below {}may not match exactly the buttons that you expect when they are pressed{}, due to the fragmented and non-standardised way that the API is implemented by controller manufacturers. Because of this, it is recommend that you have some kind of gamepad setup screen in your games where people can redefine the gamepad buttons based on input from any connected device to mitigate any issues (there are gamepad "mapping" functions that can help with this on Windows Desktop, Ubuntu, macOS, and Android targets, while on all others you would need to do this yourself using code).':"值得注意的是，当在Windows上使用DirectInput游戏手柄或在其他平台上使用通用游戏手柄时，下面给出的常量{}可能与您在按下按钮时所期望的完全匹配{}，这是由于控制器制造商实现API的零散和非标准化方式。因此，建议您在游戏中有某种游戏手柄设置屏幕，人们可以根据来自任何连接设备的输入重新定义游戏手柄按钮，以缓解任何问题 (有游戏手柄 “映射” 函数可以帮助在Windows桌面，Ubuntu，macOS，和Android的目标，而在所有其他的，你将需要做到这一点自己使用代码)。","Left shoulder button":"左肩按钮","Left shoulder trigger":"左肩扳机","Left stick horizontal axis (analog)":"左摇杆水平轴(模拟)","Left stick vertical axis (analog)":"左摇杆垂直轴(模拟)","On {}PS4{}, if you want to use the touch pad tracking you need to use the {}{}device_mouse_*{}{} buttons. Remapping of controller constants is {}not{} permitted.":"在{}PS4{}上，如果要使用触摸板跟踪，需要使用{}{}device_mouse_*{}{}按钮。不允许{}重新映射控制器常量。","On, {}Xbox One {}and {}Nintendo Switch{} targets, gamepads are fully supported, but remapping of controller constants is {}not{} permitted.":"{}Xbox One{}和{}任天堂开关{}目标完全支持游戏手柄，但不允许重新映射控制器常数{}。","Right shoulder button":"右肩按钮","Right shoulder trigger":"右肩扳机","Right stick horizontal axis (analog)":"右摇杆水平轴(模拟)","Right stick vertical axis (analog)":"右摇杆垂直轴(模拟)","The following gamepad functions also exist and are used for remapping the built in constants to the direct physical inputs of a given gamepad. These functions are only for the Windows Desktop, Ubuntu, macOS, and Android target platforms and on Windows, they will only be valid for Direct input devices. While {}GameMaker{} comes with mappings for a number of different gamepads based on {}SDL Gamepad Controller DB{}, however due to the huge number of controller types and brands out there, it is impossible to map the GML constants to the correct inputs for every make and model, so with these functions you have the possibility to create your own custom mappings.":"以下游戏板函数也存在，并且用于将内置常数重新映射到给定游戏手柄的直接物理输入。这些函数仅适用于 Windows 桌面、Ubuntu、macOS 和 Android 目标平台，在 Windows 上仅对直接输入设备有效。{}GameMaker{}提供基于{}SDL Gamepad Controller DB{}的多种不同游戏手柄的映射，但由于控制器类型和品牌数量巨大，无法将 GML 常量映射到每个品牌和型号的正确输入，因此使用这些函数，您可以创建自己的自定义映射。","The following list shows current compatibility across the platforms (note that this will change with future updates):":"以下列表显示了当前跨平台的兼容性(请注意，这将随着以后的更新而改变)：",'The gamepad "slots" are indexed from 0 upwards, and the actual slot that a gamepad assigned will depend on a variety of factors, not least of which is the OS that the project is running on. On the&nbsp;{}Windows{}&nbsp;target, slots 0 - 3 inclusive are&nbsp;{}only for Xinput gamepads{}, ie: Xbox360 controllers and compatibles. However you can also check slots 4 - 11 inclusive for {}DirectInput{} gamepads, which means you can detect many other models of controller when connected through these slots. On other platforms, pads may be detected on&nbsp;{}any{}&nbsp;slot that the OS has assigned it, which could slot 3 or slot 20 or more. For example,&nbsp;{}Android{}&nbsp;devices will store bluetooth gamepads in a slot and then reserve that slot for that gamepad in the future, whether it is connected or not, so you&nbsp;{}cannot{}&nbsp;assume that a single connected gamepad is connected to slot 0, as this will probably not be the case.':"游戏手柄 “插槽” 是从 0 向上索引的，而游戏手柄分配的实际插槽将取决于多种因素，尤其是运行项目的操作系统。在{}Windows{}目标上，包括 0-3 在内的插槽{}仅适用于 Xinput 游戏手柄{}，即：Xbox360 控制器和兼容产品。但是，您也可以查看{}DirectInput{}游戏手柄的插槽 4-11(含)，这意味着通过这些插槽连接时，您可以检测到许多其他型号的控制器。在其他平台上，可以在操作系统分配的{}任何{}插槽上检测到 pad，这些插槽可能是插槽 3 或插槽 20 或更多。例如，{}Android{}设备会将蓝牙游戏手柄存储在插槽中，然后在将来为该游戏手柄保留该插槽，无论它是否连接，因此{}不能{}假设单个连接的游戏手柄已连接到插槽 0，因为事实可能并非如此。","The gamepad's W orientation":"游戏手柄的 W 方向","The gamepad's X orientation":"游戏手柄的 X 方向","The gamepad's Y orientation":"游戏手柄的 Y 方向","The gamepad's Z orientation":"游戏手柄的 Z 方向","The gamepad's acceleration on the X axis":"游戏手柄在 X 轴上的加速","The gamepad's acceleration on the Y axis":"游戏手柄在 Y 轴上的加速","The gamepad's acceleration on the Z axis":"游戏手柄在 Z 轴上的加速","The gamepad's angular velocity on the X axis":"游戏手柄在 X 轴上的角速度","The gamepad's angular velocity on the Y axis":"游戏手柄在 Y 轴上的角速度","The gamepad's angular velocity on the Z axis":"游戏手柄在 Z 轴上的角速度","The left stick pressed (as a button)":"左拐(作为按钮)","The right stick pressed (as a button)":"右拐(作为按钮)","The select button (on a DS4 controller, this triggers when you press the touchpad down)":"选择按钮(在DS4控制器上，按下触摸板时触发)","The select button (on a PS controller, this triggers when you press the touchpad down)":"选择按钮 (在 PS 控制器上，按下触摸板时会触发)",'The start button (this is the "options" button on a PS controller)':'开始按钮 (这是 PS 控制器上的 " 选项 " 按钮)','The start button (this is the "options" button on a PS4 controller)':"启动按钮(这是PS4控制器上的“选项”按钮)","To better understand exactly what part of the controller each constant represents, you can refer to the following image of a standard XInput gamepad:":"为了更好地了解每个常量代表控制器的哪一部分，您可以参考标准XInput游戏手柄的以下图像:",'Top button 1 (this maps to the {}"A"{} on an Xbox 360 controller and the {}cross{} on a PS controller)':"顶部按钮1(映射到Xbox 360控制器上的{}“A”{}和PS控制器上的{}交叉{})",'Top button 1 (this maps to the {}"A"{} on an Xbox controller and the {}cross{} on a PS controller)':'顶部按钮 1( 这映射到 Xbox 控制器上的 {}"A"{} 和 PS 控制器上的 {} 十字 {})','Top button 2 (this maps to the {}"B"{} on an Xbox 360 controller and the {}circle{} on a PS controller)':"顶部按钮2(映射到Xbox 360控制器上的{}“B”{}和PS控制器上的{}圆{})",'Top button 2 (this maps to the {}"B"{} on an Xbox controller and the {}circle{} on a PS controller)':'顶部按钮 2( 这映射到 Xbox 控制器上的 {}"B"{} 和 PS 控制器上的 {} 圆圈 {})','Top button 3 (this maps to the {}"X"{} on an Xbox 360 controller and the {}square{} on a PS controller)':"顶部按钮3(映射到Xbox 360控制器上的{}“X”{}和PS控制器上的{}方形{})",'Top button 3 (this maps to the {}"X"{} on an Xbox controller and the {}square{} on a PS controller)':'顶部按钮 3( 这映射到 Xbox 控制器上的 {}"X"{} 和 PS 控制器上的 {} 方块 {})','Top button 4 (this maps to the {}"Y"{} on an Xbox 360 controller and the {}triangle{} on a PS controller)':"顶部按钮4(映射到Xbox 360控制器上的{}“Y”{}和PS控制器上的{}三角形{})",'Top button 4 (this maps to the {}"Y"{} on an Xbox controller and the {}triangle{} on a PS controller)':'顶部按钮 4( 这映射到 Xbox 控制器上的 {}"Y"{} 和 PS 控制器上的 {} 三角形 {})',"Web browsers will only detect&nbsp;gamepads when a button is pressed or an axis is moved, so they may not be available at the immediate start of the game. This applies to the&nbsp;{}GX.games{} and {}HTML {}target platforms.":"Web浏览器仅在按下按钮或移动轴时检测游戏手柄，因此在游戏开始时可能无法使用。这适用于{}GX.games{}和{}HTML{}目标平台。",'When working with the gamepad functions, input can come from {}axes{}, {}buttons{} or&nbsp;{}hats{},&nbsp;which&nbsp;{}GameMaker{} will assign to the following built-in constants (note that "hats" are generally only detected on non-standard controllers):':"使用游戏手柄函数时，输入可以来自{}axes{}、{}buttons{}或{}hats{}，{}GameMaker{}会将其分配给以下内置常量(注意 “十字键” 通常只能在非标准控制器上检测到)：",'{}Android {}(and {}Amazon Fire{}) export supports NYKO controllers and generic Bluetooth controllers, but only when they are enabled, meaning that you will have to tick the iCade/Bluetooth option in the {}General{} section of the Android Game Options. They require API level 12 for them to work fully and it should be noted that {}GameMaker{} will register as connected any Bluetooth devices that your device is paired with, whether or not it\'s actually connected. Therefore this should be taken into account when assigning and checking "slots". Note that the remapping of controller constants is also permitted.':"{}Android{}(和{}Amazon Fire{})导出支持Nyko控制器和通用蓝牙控制器，但仅当启用它们时，这意味着您必须勾选Android游戏选项的{}常规{}部分中的iCade/Bluetooth选项。它们需要API级别12才能完全工作，需要注意的是，{}GameMaker{}会将与您的设备配对的任何蓝牙设备注册为已连接，无论其是否实际连接。因此，在分配和检查“插槽”时应考虑到这一点。请注意，也允许重新映射控制器常量。","{}HTML5 {}games using gamepads are supported by most major browsers, except {}Safari{}. Remapping of controller constants is {}not{} permitted.":"使用游戏手柄的{}HTML5{}游戏被大多数主要浏览器支持，但{}Safari{}除外。不允许{}重新映射控制器常量。","{}NOTE{}&nbsp;The gamepad's {}orientation{} is a {}Quaternion{}, which is why it has four values (X, Y, Z and W).{} {} * These constants are only supported on PS4 and PS5, and when used on other platforms the input functions&nbsp;will return {}0{}, even when using a DualSense gamepad. ":"{}注意{}游戏手柄的{}方向{}是一个{}四元数{}，这就是为什么它有四个值(X，y，Z和w)。{}{}*这些常量仅在PS4和PS5上受支持，在其他平台上使用时，输入函数将返回{}0{}，即使使用DualSense游戏手柄也是如此。","{}Ubuntu {}does also support Gamepad input, but you may need to install additional libraries from the Ubuntu repository. You can do this easily by opening a command line terminal and typing the following (this will install GUI support for the joystick/gamepad as well as the joystick/gamepad API itself -&nbsp;remapping of controller constants is {}not{} permitted): {}sudo apt-get install jstest-gtk{} sudo apt-get install joystick.{} ":"{}Ubuntu{}也支持 Gamepad 输入，但你可能需要从 Ubuntu 仓库中安装其他库。你可以通过打开命令行终端并键入以下内容来轻松做到这一点(这将安装对操纵杆/游戏手柄以及操纵杆/游戏手柄 API 本身的 GUI 支持——{}不允许{}重新映射控制器常量)： {}sudo apt-get install jstest-gtk{} sudo apt-get install joystick.{}","{}Windows {}is fully supported with up to a maximum of 12 connected devices permitted at once (numbered from 0 to 11, with 0 - 3 being XInput devices and 4 - 11 being DirectInput). Remapping of controller constants is also permitted.":"{}Windows{}完全支持，一次最多允许12个连接的设备 (编号从0到11，其中0- 3是XInput设备，4- 11是DirectInput设备)。还允许重新映射控制器常数。",'{}macOS {}is supported with up to a maximum of 4 connected devices permitted at once, and these devices can ONLY be of the type Playstation3 or Xbox 360. Please note that the "Build for Mac AppStore" option in Mac Game Options needs to be OFF for pad support to work. Remapping of controller constants is also permitted.':"{}macOS{}最多允许同时连接 4 台设备，而这些设备只能是 Playstation3 或 Xbox 360 类型。请注意，Mac Game Options 中的 “为 Mac AppStore 构建” 选项需要关闭，才能使用键盘支持。还允许重新映射控制器常量。","{}{}{}GameMaker{} has a number of dedicated functions that can be used to detect both analog&nbsp;and digital controls from multiple connected gamepads. These functions work similar&nbsp;to the {}Device Inputs{}, in that you can detect up to four different XInput game pads that are connected (and up to 8 DirectInput gamepads) and deal with the input from each one using the same functions. Note that when a gamepad is plugged in to your device (or it is removed) then an asynchronous {}System Event{} is triggered where you can deal with the situation using the appropriate functions.":"{}{}{}GameMaker{}具有许多专用函数，可用于检测来自多个连接的游戏手柄的模拟和数字控件。这些函数的工作原理类似于{}设备输入{}，因为您可以检测到多达四个不同的XInput游戏垫连接 (最多8个DirectInput游戏手柄)，并使用相同的函数处理每个输入。请注意，将游戏手柄插入设备 (或将其删除) 后，将触发异步{}系统事件{}，您可以在其中使用适当的函数处理情况。"},get_json_global=$.ajax({url:"/global.json",type:"GET",dataType:"json",async:!1,success:function(t){json_global=t}});$(function(){if(addNoTranslationStateButton(),noTranslationState())return!1;$("div.footer a,h4,caption").each(function(){setTranslator($(this),json_global)}),$("p,h1,h2,h3,td,li,a,div.dropspotnote,figcaption").each(function(){setTranslator($(this),json_file)}),$("th,.warning,.important,.optional").each(function(){setTranslator($(this),json_global)}),$(".header").length&&(window.setInterval(function(){$("#toc-panel a:not('isTranslate')").each(function(){$(this).addClass("isTranslate"),setTranslator($(this),json_global)}),$(".GlossDefinitionText:not('isTranslate')").each(function(){$(this).addClass("isTranslate"),setTranslator($(this),json_global)})},250),console.log("成功啦!现在正在疯狂翻译菜单中!")),$(".tooltip").each(function(){setTranslator($(this),json_global,"title")})}),document.addEventListener("DOMContentLoaded",()=>{pangu.autoSpacingPage()})</script><script type="text/javascript" language="JavaScript">function reDo(){innerWidth==origWidth&&innerHeight==origHeight||location.reload()}4==parseInt(navigator.appVersion)&&"Netscape"==navigator.appName&&(origWidth=innerWidth,origHeight=innerHeight,onresize=reDo),onerror=null</script><style type="text/css">p.WebHelpNavBar{text-align:right}</style><script type="text/javascript">gCommonRootRelPath=gRootRelPath="../../../..",gTopicId="8.2.2.8.5"</script><script type="text/javascript" src="../../../../template/scripts/rh.min.js"></script><script type="text/javascript" src="../../../../template/scripts/common.min.js"></script><script type="text/javascript" src="../../../../template/scripts/topic.min.js"></script><script type="text/javascript" src="../../../../template/scripts/topicwidgets.min.js"></script><script type="text/javascript" src="../../../../whxdata/projectsettings.js"></script><link rel="stylesheet" type="text/css" href="../../../../template/styles/topic.min.css"><link rel="stylesheet" type="text/css" href="../../../../template/Charcoal_Grey/topicheader.css"><meta name="topic-status" content="Draft"><meta http-equiv="Content-Type" content="text/html; charset=utf-8"><title>Gamepad Input</title><meta name="generator" content="Adobe RoboHelp 2022"><link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css"><script src="../../../../assets/scripts/main_script.js" type="module"></script><meta name="rh-authors" content="Mark Alexander"><meta name="topic-comment" content="Reference section for Gamepad Input"><meta name="rh-index-keywords" content="gp_face1,gp_face2,gp_face3,gp_face4,gp_shoulderl,gp_shoulderlb,gp_shoulderr,gp_shoulderrb,gp_select,gp_start,gp_stickl,gp_stickr,gp_padu,gp_padd,gp_padl,gp_padr,gp_axislh,gp_axislv,gp_axisrh,gp_axisrv,gp_axis_acceleration_x,gp_axis_acceleration_y,gp_axis_acceleration_z,gp_axis_angular_velocity_x,gp_axis_angular_velocity_y,gp_axis_angular_velocity_z,gp_axis_orientation_x,gp_axis_orientation_y,gp_axis_orientation_z,gp_axis_orientation_w"><meta name="search-keywords" content="Gamepad Input,gamepads,gp_face1,gp_face2,gp_face3,gp_face4,gp_shoulderl,gp_shoulderlb,gp_shoulderr,gp_shoulderrb,gp_select,gp_start,gp_stickl,gp_stickr,gp_padu,gp_padd,gp_padl,gp_padr,gp_axislh,gp_axislv,gp_axisrh,gp_axisrv,gp_axis_acceleration_x,gp_axis_acceleration_y,gp_axis_acceleration_z,gp_axis_angular_velocity_x,gp_axis_angular_velocity_y,gp_axis_angular_velocity_z,gp_axis_orientation_x,gp_axis_orientation_y,gp_axis_orientation_z,gp_axis_orientation_w"><meta name="brsnext" value="GameMaker_Language/GML_Reference/Game_Input/GamePad_Input/gamepad_is_supported.htm"><meta name="brsprev" value="GameMaker_Language/GML_Reference/Game_Input/Gesture_Input/gesture_rotate_angle.htm"></head><body><div class="topic-header rh-hide" id="rh-topic-header"><div class="logo"></div><div class="nav"><div class="title" title="Gamepad Input"><span>Gamepad Input</span></div><div class="gotohome" title="Click here to see this page in full context"><a href="#" onclick="rh._.goToFullLayout()">Click here to see this page in full context</a></div></div></div><div class="topic-header-shadow rh-hide" id="rh-topic-header-shadow"></div><h1>Gamepad Input</h1><p><b></b><span data-keyref="GameMaker Name">GameMaker</span> has a number of dedicated functions that can be used to detect both analog&nbsp;and digital controls from multiple connected gamepads. These functions work similar&nbsp;to the <a href="../Device_Input/Device_Input.htm">Device Inputs</a>, in that you can detect up to four different XInput game pads that are connected (and up to 8 DirectInput gamepads) and deal with the input from each one using the same functions. Note that when a gamepad is plugged in to your device (or it is removed) then an asynchronous <a href="../../../../The_Asset_Editors/Object_Properties/Async_Events.htm">System Event</a> is triggered where you can deal with the situation using the appropriate functions.</p><p>The gamepad "slots" are indexed from 0 upwards, and the actual slot that a gamepad assigned will depend on a variety of factors, not least of which is the OS that the project is running on. On the&nbsp;<strong>Windows</strong>&nbsp;target, slots 0 - 3 inclusive are&nbsp;<i>only for Xinput gamepads</i>, ie: Xbox360 controllers and compatibles. However you can also check slots 4 - 11 inclusive for <i>DirectInput</i> gamepads, which means you can detect many other models of controller when connected through these slots. On other platforms, pads may be detected on&nbsp;<em>any</em>&nbsp;slot that the OS has assigned it, which could slot 3 or slot 20 or more. For example,&nbsp;<strong>Android</strong>&nbsp;devices will store bluetooth gamepads in a slot and then reserve that slot for that gamepad in the future, whether it is connected or not, so you&nbsp;<em>cannot</em>&nbsp;assume that a single connected gamepad is connected to slot 0, as this will probably not be the case.</p><p>It is worth noting that when using DirectInput gamepads on Windows, or generic gamepads on other platforms, the constants given below <strong>may not match exactly the buttons that you expect when they are pressed</strong>, due to the fragmented and non-standardised way that the API is implemented by controller manufacturers. Because of this, it is recommend that you have some kind of gamepad setup screen in your games where people can redefine the gamepad buttons based on input from any connected device to mitigate any issues (there are gamepad "mapping" functions that can help with this on Windows Desktop, Ubuntu, macOS, and Android targets, while on all others you would need to do this yourself using code).</p><h2>Input Constants</h2><p>When working with the gamepad functions, input can come from <strong>axes</strong>, <strong>buttons</strong> or&nbsp;<strong>hats</strong>,&nbsp;which&nbsp;<span data-keyref="GameMaker Name">GameMaker</span> will assign to the following built-in constants (note that "hats" are generally only detected on non-standard controllers):</p><div data-conref="../../../../assets/snippets/Gamepad_button_constants.hts"><table><tbody><tr><th colspan="2"><span data-keyref="Type_Constant_Gamepad_Button"><a target="_blank" href="Gamepad_Input.htm">Gamepad Button Constant</a></span></th></tr><tr><th>Constant</th><th>Description</th></tr><tr><td><span class="inline">gp_face1</span></td><td>Top button 1 (this maps to the <i>"A"</i> on an Xbox controller and the <i>cross</i> on a PS controller)</td></tr><tr><td><span class="inline">gp_face2</span></td><td>Top button 2 (this maps to the <i>"B"</i> on an Xbox controller and the <i>circle</i> on a PS controller)</td></tr><tr><td><span class="inline">gp_face3</span></td><td>Top button 3 (this maps to the <i>"X"</i> on an Xbox controller and the <i>square</i> on a PS controller)</td></tr><tr><td><span class="inline">gp_face4</span></td><td>Top button 4 (this maps to the <i>"Y"</i> on an Xbox controller and the <i>triangle</i> on a PS controller)</td></tr><tr><td><span class="inline">gp_shoulderl</span></td><td>Left shoulder button</td></tr><tr><td><span class="inline">gp_shoulderlb</span></td><td>Left shoulder trigger</td></tr><tr><td><span class="inline">gp_shoulderr</span></td><td>Right shoulder button</td></tr><tr><td><span class="inline">gp_shoulderrb</span></td><td>Right shoulder trigger</td></tr><tr><td><span class="inline">gp_select</span></td><td>The select button (on a PS controller, this triggers when you press the touchpad down)</td></tr><tr><td><span class="inline">gp_start</span></td><td>The start button (this is the "options" button on a PS controller)</td></tr><tr><td><span class="inline">gp_stickl</span></td><td>The left stick pressed (as a button)</td></tr><tr><td><span class="inline">gp_stickr</span></td><td>The right stick pressed (as a button)</td></tr><tr><td><span class="inline">gp_padu</span></td><td>D-pad up</td></tr><tr><td><span class="inline">gp_padd</span></td><td>D-pad down</td></tr><tr><td><span class="inline">gp_padl</span></td><td>D-pad left</td></tr><tr><td><span class="inline">gp_padr</span></td><td>D-pad right</td></tr><tr><td><span class="inline">gp_home</span></td><td>The "home" button on Switch controllers, and the PS/XBOX logo buttons on some controllers</td></tr><tr><td><span class="inline">gp_touchpadbutton</span></td><td>The touchpad button on a PS controller</td></tr><tr><td><span class="inline">gp_paddler</span></td><td><span>Upper or primary paddle, under your right hand (e.g. Xbox Elite paddle P1)</span></td></tr><tr><td><span class="inline">gp_paddlel</span></td><td><span>Upper or primary paddle, under your left hand (e.g. Xbox Elite paddle P3)</span></td></tr><tr><td><span class="inline">gp_paddlerb</span></td><td><span>Lower or secondary paddle, under your right hand (e.g. Xbox Elite paddle P2)</span></td></tr><tr><td><span class="inline">gp_paddlelb</span></td><td><span>Lower or secondary paddle, under your left hand (e.g. Xbox Elite paddle P4)</span></td></tr><tr><td><span class="inline">gp_extra1</span></td><td>An extra button that may be mapped to anything</td></tr><tr><td><span class="inline">gp_extra2</span></td><td>An extra button that may be mapped to anything</td></tr><tr><td><span class="inline">gp_extra3</span></td><td>An extra button that may be mapped to anything</td></tr><tr><td><span class="inline">gp_extra4</span></td><td>An extra button that may be mapped to anything</td></tr><tr><td><span class="inline">gp_extra5</span></td><td>An extra button that may be mapped to anything</td></tr><tr><td><span class="inline">gp_extra6</span></td><td>An extra button that may be mapped to anything</td></tr></tbody></table></div><table><colgroup><col><col></colgroup><tbody><tr><th colspan="2"><span data-keyref="Type_Constant_Gamepad_Axis"><a target="_blank" href="Gamepad_Input.htm">Gamepad Axis Constant</a></span></th></tr><tr><th>Constant</th><th>Description</th></tr><tr><td><span class="inline">gp_axislh</span></td><td>Left stick horizontal axis (analog)</td></tr><tr><td><span class="inline">gp_axislv</span></td><td>Left stick vertical axis (analog)</td></tr><tr><td><span class="inline">gp_axisrh</span></td><td>Right stick horizontal axis (analog)</td></tr><tr><td><span class="inline">gp_axisrv</span></td><td>Right stick vertical axis (analog)</td></tr><tr><th colspan="2">The constants below can only be used&nbsp;with the&nbsp;DualSense gamepad on a PS4 or PS5</th></tr><tr><td><span class="inline">gp_axis_acceleration_x</span>*</td><td>The gamepad's acceleration on the X axis</td></tr><tr><td><span class="inline">gp_axis_acceleration_y</span>*</td><td>The gamepad's acceleration on the Y axis</td></tr><tr><td><span class="inline">gp_axis_acceleration_z</span>*</td><td>The gamepad's acceleration on the Z axis</td></tr><tr><td><span class="inline">gp_axis_angular_velocity_x</span>*</td><td>The gamepad's angular velocity on the X axis</td></tr><tr><td><span class="inline">gp_axis_angular_velocity_y</span>*</td><td>The gamepad's angular velocity on the Y axis</td></tr><tr><td><span class="inline">gp_axis_angular_velocity_z</span>*</td><td>The gamepad's angular velocity on the Z axis</td></tr><tr><td><span class="inline">gp_axis_orientation_x</span>*</td><td>The gamepad's X orientation</td></tr><tr><td><span class="inline">gp_axis_orientation_y</span>*</td><td>The gamepad's Y orientation</td></tr><tr><td><span class="inline">gp_axis_orientation_z</span>*</td><td>The gamepad's Z orientation</td></tr><tr><td><span class="inline">gp_axis_orientation_w</span>*</td><td>The gamepad's W orientation</td></tr></tbody></table><p class="note"><span class="note">NOTE</span>&nbsp;The gamepad's <strong>orientation</strong> is a <a href="https://en.wikipedia.org/wiki/Quaternion" title="Quaternion">Quaternion</a>, which is why it has four values (X, Y, Z and W).<br><br>* These constants are only supported on PS4 and PS5, and when used on other platforms the input functions&nbsp;will return <span class="inline">0</span>, even when using a DualSense gamepad.</p><p>To better understand exactly what part of the controller each constant represents, you can refer to the following image of a standard XInput gamepad:</p><p><img alt="Xinput gamepad illustration" class="center" src="../../../../assets/Images/Scripting_Reference/GML/Reference/Game_Input/GamePad.png"></p><h2>Functions</h2><p>Below you can find a list of all the gamepad functions:</p><ul class="colour"><li><a href="gamepad_is_supported.htm">gamepad_is_supported</a></li><li><a href="gamepad_is_connected.htm">gamepad_is_connected</a></li><li><a href="gamepad_get_guid.htm">gamepad_get_guid</a></li><li><a href="gamepad_get_device_count.htm">gamepad_get_device_count</a></li><li><a href="gamepad_get_description.htm">gamepad_get_description</a></li><li><a href="gamepad_get_button_threshold.htm">gamepad_get_button_threshold</a></li><li><a href="gamepad_get_axis_deadzone.htm">gamepad_get_axis_deadzone</a></li><li><a href="gamepad_get_option.htm">gamepad_get_option</a></li><li><a href="gamepad_set_button_threshold.htm">gamepad_set_button_threshold</a></li><li><a href="gamepad_set_axis_deadzone.htm">gamepad_set_axis_deadzone</a></li><li><a href="gamepad_set_vibration.htm">gamepad_set_vibration</a></li><li><a href="gamepad_set_colour.htm">gamepad_set_colour</a></li><li><a href="gamepad_set_option.htm">gamepad_set_option</a></li><li><a href="gamepad_axis_count.htm">gamepad_axis_count</a></li><li><a href="gamepad_axis_value.htm">gamepad_axis_value</a></li><li><a href="gamepad_button_check.htm">gamepad_button_check</a></li><li><a href="gamepad_button_check_pressed.htm">gamepad_button_check_pressed</a></li><li><a href="gamepad_button_check_released.htm">gamepad_button_check_released</a></li><li><a href="gamepad_button_count.htm">gamepad_button_count</a></li><li><a href="gamepad_button_value.htm">gamepad_button_value</a></li><li><a href="gamepad_hat_count.htm">gamepad_hat_count</a></li><li><a href="gamepad_hat_value.htm">gamepad_hat_value</a></li></ul><p>&nbsp;</p><p>The following gamepad functions also exist and are used for remapping the built in constants to the direct physical inputs of a given gamepad. These functions are only for the Windows Desktop, Ubuntu, macOS, and Android target platforms and on Windows, they will only be valid for Direct input devices. While <span data-keyref="GameMaker Name">GameMaker</span> comes with mappings for a number of different gamepads based on <a href="https://github.com/gabomdq/SDL_GameControllerDB" target="_blank">SDL Gamepad Controller DB</a>, however due to the huge number of controller types and brands out there, it is impossible to map the GML constants to the correct inputs for every make and model, so with these functions you have the possibility to create your own custom mappings.</p><ul class="colour"><li><a href="gamepad_get_mapping.htm">gamepad_get_mapping</a></li><li><a href="gamepad_test_mapping.htm">gamepad_test_mapping</a></li><li><a href="gamepad_remove_mapping.htm">gamepad_remove_mapping</a></li></ul><p>&nbsp;</p><p>It is worth noting that Direct Input gamepads are run in <i>cooperative mode</i> which means that your game only has access to them when it is the foreground application, which in turn will cause Direct Input controllers to be "lost" if the game loses focus and then "found" again when it comes back into focus (this can be detected in the System Event and dealt with). Similarly, no input from gamepads will be detected while the game is not in focus, and we recommend that you use the function <a href="../../OS_And_Compiler/os_is_paused.htm"><span class="inline">os_is_paused()</span></a>&nbsp;or <a href="../../Cameras_And_Display/The_Game_Window/window_has_focus.htm"><span class="inline">window_has_focus()</span></a> to detect this and pause the game or something similar as any button being held down at the time the game loses focus will maintain the held down state until the game regains focus.</p><h2>Compatibility</h2><p>The following list shows current compatibility across the platforms (note that this will change with future updates):</p><ul class="colour"><li><strong>Windows</strong> is fully supported with up to a maximum of 12 connected devices permitted at once (numbered from 0 to 11, with 0 - 3 being XInput devices and 4 - 11 being DirectInput). Remapping of controller constants is also permitted.</li><li><strong>macOS</strong> is supported with up to a maximum of 4 connected devices permitted at once, and these devices can ONLY be of the type Playstation3 or Xbox 360. Please note that the "Build for Mac AppStore" option in Mac Game Options needs to be OFF for pad support to work. Remapping of controller constants is also permitted.</li><li><strong>Ubuntu</strong> does also support Gamepad input, but you may need to install additional libraries from the Ubuntu repository. You can do this easily by opening a command line terminal and typing the following (this will install GUI support for the joystick/gamepad as well as the joystick/gamepad API itself -&nbsp;remapping of controller constants is <i>not</i> permitted):<p class="code">sudo apt-get install jstest-gtk<br>sudo apt-get install joystick.</p></li><li><strong>HTML5</strong> games using gamepads are supported by most major browsers, except <i>Safari</i>. Remapping of controller constants is <i>not</i> permitted.</li><li>Web browsers will only detect&nbsp;gamepads when a button is pressed or an axis is moved, so they may not be available at the immediate start of the game. This applies to the&nbsp;<strong>GX.games</strong> and <strong>HTML</strong> target platforms.</li><li>Gamepad support also extends to <strong>iOS</strong> with the iCade cabinet. The left axis maps to the stick controller (although the input is digital, not analogue), the four "face" buttons map to the cabinet front buttons, and the four shoulder buttons map to those at the back of the cabinet.</li><li><strong>Android</strong> (and <strong>Amazon Fire</strong>) export supports NYKO controllers and generic Bluetooth controllers, but only when they are enabled, meaning that you will have to tick the iCade/Bluetooth option in the <a href="../../../../Settings/Game_Options/Android.htm">General</a> section of the Android Game Options. They require API level 12 for them to work fully and it should be noted that <span data-keyref="GameMaker Name">GameMaker</span> will register as connected any Bluetooth devices that your device is paired with, whether or not it's actually connected. Therefore this should be taken into account when assigning and checking "slots". Note that the remapping of controller constants is also permitted.</li><li>On <strong>PS4</strong>, if you want to use the touch pad tracking you need to use the <a href="../Device_Input/Device_Input.htm"><span class="inline">device_mouse_*</span></a> buttons. Remapping of controller constants is <i>not</i> permitted.</li><li>On, <strong>Xbox One</strong> and <strong>Nintendo Switch</strong> targets, gamepads are fully supported, but remapping of controller constants is <i>not</i> permitted.</li></ul><p>Ideally, on <i>all</i> target platforms, you want to enumerate a list of available gamepad "slots" and then check them to see if any devices are detected, something like this:</p><p class="code">var _maxpads = gamepad_get_device_count();<br><br>for (var i = 0; i &lt; _maxpads; i++)<br>{<br>&nbsp; &nbsp; if (gamepad_is_connected(i))<br>&nbsp; &nbsp; {<br>&nbsp; &nbsp; &nbsp; &nbsp; // do stuff with pad "i"<br>&nbsp; &nbsp; }<br>}</p><p>&nbsp;</p><p>&nbsp;</p><div class="footer"><div class="buttons"><div class="clear"><div style="float:left">Back: <a href="../Game_Input.htm">Game Input</a></div><div style="float:right">Next: <a href="../Virtual_Keys_And_Keyboards/Virtual_Keys_And_Keyboards.htm">Virtual Keys and Virtual Keyboards</a></div></div></div><h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2024 All Rights Reserved</span></h5></div></body></html>