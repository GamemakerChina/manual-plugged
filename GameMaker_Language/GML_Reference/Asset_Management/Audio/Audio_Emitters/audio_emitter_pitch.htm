<!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml"><head><script type="text/javascript" src="../../../../../assets/import/jquery-3.6.1.min.js"></script><script type="text/javascript" src="../../../../../assets/import/layer/layer.js"></script><script type="text/javascript" src="../../../../../assets/import/pangu.min.js"></script><link rel="stylesheet" type="text/css" href="../../../../../assets/import/layer/layui_btn.css"><link rel="stylesheet" type="text/css" href="../../../../../assets/import/layer/layui_col.css"><link rel="stylesheet" type="text/css" href="../../../../../assets/import/layer/theme/default/layer.css"><link rel="stylesheet" type="text/css" href="../../../../../assets/import/main.css"><script>let str;removeHtml=function(t){return t=(t=(t=(t=t.replace(/(<([^>]+)>)/gi,"{}")).replace(/\r\n/g,"\n")).replace(/\n/g,"")).replace(/ {2,}/g," ")},retHtml=function(t){return t.match(/(<([^>]+)>)/gi)},setTranslator=function(t,e,n){let o;o=n?t.attr(n):t.html();let i=e[removeHtml(o)];if(null!=i&&i.length){e=retHtml(o);let a=0;e&&e.forEach(function(t,e){var n=i.replace("{"+a+"}",t);i=n===i?i.replace("{}",t):n,a++}),n?t.attr(n,i):t.html(i)}},noTranslationState=function(){return"true"==window.localStorage.getItem("noTranslationState")},noTranslationStateToggle=function(){window.localStorage.setItem("noTranslationState",!noTranslationState())},addNoTranslationStateButton=function(){var t=`
		
		<button style="
			float: right;
			font-size: 16px;
			padding: 4px 12px;
		"
		onclick="
		window.location.replace('gmmt://'+document.location.hash)
		"
		>打开编辑器</button>

		<button style="
			float: right;
			font-size: 16px;
			padding: 4px 12px;
		"
		onclick="
		noTranslationStateToggle();
		location.reload();
    	event.stopPropagation();
		"
		>切换翻译</button>
		`;$(".header").length?$(".header").append(t):($(".topic-header").append(t),$(".topic-header button").css("position","relative").css("top","44px"))},removeExtensionFromHash=function(t){return t.replaceAll("#t=","").replaceAll("%2F","/").replaceAll(".htm","")};let json_global,json_file={'The above code will change the pitch of the audio played from the emitter indexed in the variable "s_emit" based on the value of the variable "gear".':'上面的代码将根据变量" gear "的值，改变从变量" s_emit "中索引的发射器播放的音频的音调。',"The index of the emitter to change.":"要更改的发射器的索引。","The pitch multiplier (default 1).":"间距乘数(默认值为1)。","This function can be used to change the pitch of all sounds emitted from the given emitter. It is a {}pitch multiplier{}, in that the input value multiplies the current pitch by that amount, so the default value of 1 is no pitch change, while a value of less than 1 will lower the pitch and greater than 1 will raise the pitch. It is best to use small increments for this function as any value under 0 or over 5 may not be audible anyway.":"此函数可用于更改给定发射器发出的所有声音的音调。它是一个{}音调乘数{}，因为输入值将当前音调乘以该量，因此默认值1表示没有音调变化，而小于1的值将降低音调，大于1的值将提高音调。此函数最好使用小增量，因为任何小于0或大于5的值都可能听不到。","{}{}IMPORTANT{}{}&nbsp;As the pitch argument is a {}pitch multiplier{}, the sound instance's pitch will be multiplied by the sound asset's pitch and also by the sound emitter's pitch in case the sound was played on an emitter using&nbsp;{}audio_play_sound_on{}. The final pitch that will be heard is the original pitch of the sound multiplied by the three pitch multipliers:&nbsp;{} {} final_pitch = original sound pitch * sound asset pitch * emitter pitch * sound instance pitch.{} {} By default the three pitch multipliers are equal to 1 so that the final pitch that is heard is equal to the original sound's pitch. ":"{}{}重要{}{} 由于音调参数是{}音高乘数{}，如果声音在使用{}audio_play_sound_on{}的发射器上播放，则声音实例的音调将乘以声音资源的音调，以及声音发射器的音调。 最后听到的音调是声音的原始音调乘以三个音调乘数：{}{}final_pitch=原始音高*声音资源音调*发射器音高*声音实例音调。{}{}默认情况下，三个音调乘数等于1，以便听到的最终音调等于原始声音的音调。","{}{}{}NOTE{}{}&nbsp;{}Sounds already playing on the audio emitter do not have to be restarted in order for the change in pitch to be audible. The change&nbsp;in pitch is {}applied immediately{}.":"{}{}{}注意{}{}{}已经在音频发射器上播放的声音不必重新启动，就可以听到音调的变化。音高的变化{}立即应用{}。"},get_json_global=$.ajax({url:"/global.json",type:"GET",dataType:"json",async:!1,success:function(t){json_global=t}});$(function(){if(addNoTranslationStateButton(),noTranslationState())return!1;$("div.footer a,h4,caption").each(function(){setTranslator($(this),json_global)}),$("p,h1,h2,h3,td,li,a,div.dropspotnote,figcaption").each(function(){setTranslator($(this),json_file)}),$("th,.warning,.important,.optional").each(function(){setTranslator($(this),json_global)}),$(".header").length&&(window.setInterval(function(){$("#toc-panel a:not('isTranslate')").each(function(){$(this).addClass("isTranslate"),setTranslator($(this),json_global)}),$(".GlossDefinitionText:not('isTranslate')").each(function(){$(this).addClass("isTranslate"),setTranslator($(this),json_global)})},250),console.log("成功啦!现在正在疯狂翻译菜单中!")),$(".tooltip").each(function(){setTranslator($(this),json_global,"title")})}),document.addEventListener("DOMContentLoaded",()=>{pangu.autoSpacingPage()})</script><script type="text/javascript" language="JavaScript">function reDo(){innerWidth==origWidth&&innerHeight==origHeight||location.reload()}4==parseInt(navigator.appVersion)&&"Netscape"==navigator.appName&&(origWidth=innerWidth,origHeight=innerHeight,onresize=reDo),onerror=null</script><style type="text/css">p.WebHelpNavBar{text-align:right}</style><script type="text/javascript">gCommonRootRelPath=gRootRelPath="../../../../..",gTopicId="8.2.2.3.5.1.0_7"</script><script type="text/javascript" src="../../../../../template/scripts/rh.min.js"></script><script type="text/javascript" src="../../../../../template/scripts/common.min.js"></script><script type="text/javascript" src="../../../../../template/scripts/topic.min.js"></script><script type="text/javascript" src="../../../../../template/scripts/topicwidgets.min.js"></script><script type="text/javascript" src="../../../../../whxdata/projectsettings.js"></script><link rel="stylesheet" type="text/css" href="../../../../../template/styles/topic.min.css"><link rel="stylesheet" type="text/css" href="../../../../../template/Charcoal_Grey/topicheader.css"><meta name="topic-status" content="Draft"><meta http-equiv="Content-Type" content="text/html; charset=utf-8"><title>audio_emitter_pitch</title><meta name="generator" content="Adobe RoboHelp 2022"><link rel="stylesheet" href="../../../../../assets/css/default.css" type="text/css"><script src="../../../../../assets/scripts/main_script.js" type="module"></script><meta name="rh-authors" content="Mark Alexander"><meta name="topic-comment" content="Page explaining the function audio_emitter_pitch"><meta name="rh-index-keywords" content="audio_emitter_pitch"><meta name="search-keywords" content="audio_emitter_pitch"><meta name="brsnext" value="GameMaker_Language/GML_Reference/Asset_Management/Audio/Audio_Emitters/audio_emitter_set_listener_mask.htm"><meta name="brsprev" value="GameMaker_Language/GML_Reference/Asset_Management/Audio/Audio_Emitters/audio_emitter_gain.htm"></head><body><div class="topic-header rh-hide" id="rh-topic-header"><div class="logo"></div><div class="nav"><div class="title" title="audio_emitter_pitch"><span>audio_emitter_pitch</span></div><div class="gotohome" title="Click here to see this page in full context"><a href="#" onclick="rh._.goToFullLayout()">Click here to see this page in full context</a></div></div></div><div class="topic-header-shadow rh-hide" id="rh-topic-header-shadow"></div><h1><span data-field="title" data-format="default">audio_emitter_pitch</span></h1><p>This function can be used to change the pitch of all sounds emitted from the given emitter. It is a <i>pitch multiplier</i>, in that the input value multiplies the current pitch by that amount, so the default value of 1 is no pitch change, while a value of less than 1 will lower the pitch and greater than 1 will raise the pitch. It is best to use small increments for this function as any value under 0 or over 5 may not be audible anyway.</p><p class="note"><b><span data-conref="../../../../../assets/snippets/Tag_note.hts"><span class="note">NOTE</span></span>&nbsp;</b>Sounds already playing on the audio emitter do not have to be restarted in order for the change in pitch to be audible. The change&nbsp;in pitch is <strong>applied immediately</strong>.</p><div data-conref="../../../../../assets/snippets/audio_pitch_multiplier.hts"><p class="note"><span data-conref="../../../../../assets/snippets/Tag_important.hts"><span class="important">IMPORTANT</span></span>&nbsp;As the pitch argument is a <i>pitch multiplier</i>, the sound instance's pitch will be multiplied by the sound asset's pitch and also by the sound emitter's pitch in case the sound was played on an emitter using&nbsp;<a href="audio_play_sound_on.htm">audio_play_sound_on</a>. The final pitch that will be heard is the original pitch of the sound multiplied by the three pitch multipliers:&nbsp;<br><br>final_pitch = original sound pitch * sound asset pitch * emitter pitch * sound instance pitch.<br><br>By default the three pitch multipliers are equal to 1 so that the final pitch that is heard is equal to the original sound's pitch.</p></div><h4>Syntax:</h4><p class="code"><span data-field="title" data-format="default">audio_emitter_pitch</span>(emitter, pitch);</p><table><tbody><tr><th>Argument</th><th>Type</th><th>Description</th></tr><tr><td>emitter</td><td><span data-keyref="Type_ID_Audio_Emitter"><a target="_blank" href="audio_emitter_create.htm">Audio Emitter ID</a></span></td><td>The index of the emitter to change.</td></tr><tr><td>pitch</td><td><span data-keyref="Type_Real"><a target="_blank" href="../../../../GML_Overview/Data_Types.htm">Real</a></span></td><td>The pitch multiplier (default 1).</td></tr></tbody></table><p>&nbsp;</p><h4>Returns:</h4><p class="code"><span data-keyref="Type_Void">N/A</span></p><p>&nbsp;</p><h4>Example:</h4><p class="code">switch (gear)<br>{<br>&nbsp; &nbsp; case 1: <span data-field="title" data-format="default">audio_emitter_pitch</span>(s_emit, 0.8); break;<br>&nbsp; &nbsp; case 2: <span data-field="title" data-format="default">audio_emitter_pitch</span>(s_emit, 0.9); break;<br>&nbsp; &nbsp; case 3: <span data-field="title" data-format="default">audio_emitter_pitch</span>(s_emit, 0.95); break;<br>&nbsp; &nbsp; case 4: <span data-field="title" data-format="default">audio_emitter_pitch</span>(s_emit, 1); break;<br>&nbsp; &nbsp; case 5: <span data-field="title" data-format="default">audio_emitter_pitch</span>(s_emit, 1.2); break;<br>}</p><p>The above code will change the pitch of the audio played from the emitter indexed in the variable "s_emit" based on the value of the variable "gear".</p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><div class="footer"><div class="buttons"><div class="clear"><div style="float:left">Back: <a href="Audio_Emitters.htm">Audio Emitters</a></div><div style="float:right">Next:&nbsp;<a href="audio_emitter_set_listener_mask.htm">audio_emitter_set_listener_mask</a></div></div></div><h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2024 All Rights Reserved</span></h5></div></body></html>