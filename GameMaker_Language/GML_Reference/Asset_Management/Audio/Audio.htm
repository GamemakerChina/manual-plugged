<!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml"><head><script type="text/javascript" src="../../../../assets/import/jquery-3.6.1.min.js"></script><script type="text/javascript" src="../../../../assets/import/layer/layer.js"></script><script type="text/javascript" src="../../../../assets/import/pangu.min.js"></script><link rel="stylesheet" type="text/css" href="../../../../assets/import/layer/layui_btn.css"><link rel="stylesheet" type="text/css" href="../../../../assets/import/layer/layui_col.css"><link rel="stylesheet" type="text/css" href="../../../../assets/import/layer/theme/default/layer.css"><link rel="stylesheet" type="text/css" href="../../../../assets/import/main.css"><script>let str;removeHtml=function(e){return e=(e=(e=(e=e.replace(/(<([^>]+)>)/gi,"{}")).replace(/\r\n/g,"\n")).replace(/\n/g,"")).replace(/ {2,}/g," ")},retHtml=function(e){return e.match(/(<([^>]+)>)/gi)},setTranslator=function(e,o,t){let a;a=t?e.attr(t):e.html();let s=o[removeHtml(a)];if(null!=s&&s.length){o=retHtml(a);let n=0;o&&o.forEach(function(e,o){var t=s.replace("{"+n+"}",e);s=t===s?s.replace("{}",e):t,n++}),t?e.attr(t,s):e.html(s)}},noTranslationState=function(){return"true"==window.localStorage.getItem("noTranslationState")},noTranslationStateToggle=function(){window.localStorage.setItem("noTranslationState",!noTranslationState())},addNoTranslationStateButton=function(){var e=`
		
		<button style="
			float: right;
			font-size: 16px;
			padding: 4px 12px;
		"
		onclick="
		window.location.replace('gmmt://'+document.location.hash)
		"
		>打开编辑器</button>

		<button style="
			float: right;
			font-size: 16px;
			padding: 4px 12px;
		"
		onclick="
		noTranslationStateToggle();
		location.reload();
    	event.stopPropagation();
		"
		>切换翻译</button>
		`;$(".header").length?$(".header").append(e):($(".topic-header").append(e),$(".topic-header button").css("position","relative").css("top","44px"))},removeExtensionFromHash=function(e){return e.replaceAll("#t=","").replaceAll("%2F","/").replaceAll(".htm","")};let json_global,json_file={"A sound can be looped by setting it to loop. This can either be done when playing the sound using any of the {}audio_play_sound_*{} functions:&nbsp;":"可以通过将声音设置为循环来使其循环播放。这可以在使用任意{}audio_play_sound_*{}函数播放声音时完成：","Advanced Audio":"高级音频","All sound assets, except for streamed audio, belong to a single {}audio group{}. Sounds in an audio group can be loaded and unloaded at the same time.":"所有声音资源(流式音频除外)都属于单个{}音频组{}。音频组中的声音可以同时加载和卸载。",'Another way to play sounds is using&nbsp;{}{}audio_play_sound_ext{}{}. This function is identical to {}{}audio_play_sound{}{}&nbsp;but allows you to pass various audio parameters in a struct. Using this function, you only need to provide a&nbsp;{}{}Sound Asset{}{}&nbsp;through the "sound" key of the struct:&nbsp;':'另一种播放声音的方法是使用{}{}audio_play_sound_ext{}{}。此函数与{}{}audio_play_sound{}{}相同，但允许您在结构中传递各种音频参数。使用此函数，您只需通过结构体的"sound"键提供{}{}声音资源{}{}：',"At a minimum you have to provide the {}{}Sound Asset{}{}, a priority for the new sound instance and whether the sound should loop.":"您至少必须提供{}{}声音资源{}{}、新声音实例的优先级以及声音是否应循环播放。","Audio Effects":"音频效果","Audio Emitters and Listeners":"音频发射器和监听器","Audio Groups":"音频组","Audio Loop Points":"音频循环点","Audio Looping":"音频循环","Audio Properties":"音频属性","Audio Streams":"音频流","Audio effects are created using&nbsp;{}{}audio_effect_create{}{} and then assigned to one of the effects slots of an audio bus. The audio bus that you can always assign effects to is the main audio bus&nbsp;{}{}audio_bus_main{}{}.":"音频效果是使用{}{}audio_effect_create{}{}创建的，然后分配给音频总线的效果槽之一。您始终可以为其分配效果的音频总线是主音频总线{}{}audio_bus_main{}{}。","Audio groups have their own gain factor (see&nbsp;{}{}audio_group_set_gain{}{}&nbsp;/&nbsp;{}{}audio_group_get_gain{}{})":"音频组有自己的增益系数(请参阅{}{}audio_group_set_gain{}{}/{}{}audio_group_get_gain{}{})","By default a sound loops from its start to its end. The start and end position can be changed using&nbsp;{}{}audio_sound_loop_start{}{}&nbsp;and&nbsp;{}{}audio_sound_loop_end{}{}&nbsp;respectively, also while the sound is playing (i.e. {}ins_sound{} refers to a sound instance for which {}{}audio_is_playing{}{}&nbsp;returns {}true{}).":"默认情况下，声音从开始到结束循环。可以分别使用{}{}audio_sound_loop_start{}{}和{}{}audio_sound_loop_end{}{}更改开始位置和结束位置，也可以在声音播放时进行更改(即{}ins_sound{}指的是以下声音实例){}{}audio_is_playing{}{}返回{}true{})。",Configuration:"配置",Contents:"内容",Debugging:"调试",'Every sound has basic properties that are applied on different "levels". Depending on the property, it either acts as a multiplier, or overrides the value set at a previous level.':'每种声音都具有应用于不同"级别"的基本属性。根据属性，它可以充当乘数，也可以覆盖在前一级别设置的值。',"Finally you can add effects to the audio that you play, such as reverb, echo, delay, etc.":"最后，您可以向播放的音频添加效果，例如混响、回声、延迟等。","For an overview of all audio properties, levels and how their values are calculated, see {}Audio Properties Overview{}.":"有关所有音频属性、级别及其值计算方式的概述，请参阅{}音频属性概述{}。","For audio that should play perfectly in sync&nbsp;on a per sample level,&nbsp;{}GameMaker{}&nbsp;has sync groups. See&nbsp;{}Audio Synchronisation{}&nbsp;for more information on this.":"对于应在每个样本级别完美同步播放的音频，{}GameMaker{}具有同步组。有关详细信息，请参阅{}音频同步{}。","For more information please see the section:&nbsp;":"欲了解更多信息，请参阅以下部分：","For things more complex than basic sound effects, or playing a single piece of music, you can refer to the advanced audio functions which let you modify how a sound is played. There is also a selection of more specialised functions dedicated to streaming audio, positioning audio (to give 3D sound), grouping audio,&nbsp;synchronised audio and audio effects.":"对于比基本音效或播放一首音乐更复杂的事情，您可以参考高级音频功能，它可以让您修改声音的播放方式。还有一系列更专业的功能专用于流音频、定位音频(提供 3D 声音)、分组音频、同步音频和音频效果。","Function Reference":"功能参考","Gain Conversion":"增益转换","If you need positional audio or audio that should play in a three-dimensional environment, you can use&nbsp;{}Audio Emitters{}&nbsp;and&nbsp;{}Audio Listeners{}.":"如果您需要位置音频或应在三维环境中播放的音频，您可以使用{}音频发射器{}和{}音频监听器{}。","In case you pass a sound {}asset{} ID to the functions, the audio property at the {}asset{} level will be set to the given value.":"如果您将声音{}资产{}ID 传递给函数，{}资产{}级别的音频属性将设置为给定值。","Playing Sounds":"播放声音","See:&nbsp;{}Audio Loop Points{}":"请参阅：{}音频循环点{}","Sound Instances (Voices)":"声音实例(声音)","Sounds of these types {}added to the IDE{} can be used in your game using the audio functions shown below.":"{}添加到 IDE{}的这些类型的声音可以通过下面所示的音频函数在您的游戏中使用。","Sync Groups":"同步组","The Asynchronous System Event":"异步系统事件",'The functions&nbsp;{}{}audio_play_sound{}{}&nbsp;and&nbsp;{}{}audio_play_sound_ext{}{}&nbsp;create a new&nbsp;{}instance{} of a sound (also called a "voice") and return its ID:&nbsp;':'函数{}{}audio_play_sound{}{}和{}{}audio_play_sound_ext{}{}创建声音的新{}实例{}(也称为"语音")并返回其 ID：',"The most straightforward way to play a sound is using&nbsp;{}{}audio_play_sound{}{}:&nbsp;":"播放声音最直接的方法是使用{}{}audio_play_sound{}{}：","These audio properties are:&nbsp;":"这些音频属性是：","To check if audio can be played using Web Audio, you can use&nbsp;{}{}audio_sound_is_playable{}{}.":"要检查是否可以使用网络音频播放音频，您可以使用{}{}audio_sound_is_playable{}{}。","To help with this issue, {}GameMaker{} has two separate ways to detect the change in Web Audio context status, either using the following function:":"为了帮助解决此问题，{}GameMaker{}有两种不同的方法来检测网络音频上下文状态的变化，即使用以下函数：","Using Audio":"使用音频","Web Audio":"网络音频","When creating games for the HTML5 target platform, the audio engine requires {}Web Audio{} support, and this in turn means that sometimes your audio won't play when or how you expect it. This is because the Web Audio context may not be running or may stop running when your game is being played. What causes this varies greatly between browsers, and even between different versions of the same browser, and so detecting when the web audio context status changes is very important, e.g.: to detect when the context changes and pause/start looping audio like background music.":"为 HTML5 目标平台创建游戏时，音频引擎需要{}网络音频{}支持，这意味着有时您的音频无法按您期望的时间或方式播放。这是因为当您玩游戏时，Web Audio 上下文可能未运行或停止运行。造成这种情况的原因在浏览器之间甚至同一浏览器的不同版本之间差异很大，因此检测网络音频上下文状态何时发生变化非常重要，例如：检测上下文何时发生变化以及暂停/开始循环音频(如背景音乐)。","When the track position reaches the loop end position if a sound is set to loop, it continues playing from the start position.":"如果声音设置为循环，则当曲目位置到达循环结束位置时，它将从开始位置继续播放。","You can use this sound&nbsp;{}instance{} ID in functions to change the audio properties at the {}instance{} level (or pass them directly as optional arguments). This will only change the properties for that particular sound instance.":"您可以在函数中使用此声音{}实例{}ID 来更改{}实例{}级别的音频属性(或直接将它们作为可选参数传递)。这只会更改该特定声音实例的属性。",audio_system_is_available:"audio_system_is_available","or afterwards, when the sound is already playing, using the function&nbsp;{}{}audio_sound_loop{}{}:&nbsp;":"或者之后，当声音已经播放时，使用函数{}{}audio_sound_loop{}{}：",'or using the {}Asynchronous System Event{}, which will be triggered whenever the Web Audio status changes. In this event you will get the built-in&nbsp;{}{}async_load{}{}&nbsp;DS map populated with the key "{}event_type{}" which in turn will hold the string "{}audio_system_status{}" if it is an audio event. When this key exists, there will also be a further "{}status{}" key which will be either "{}available{}" or "{}unavailable{}".':'或使用{}异步系统事件{}，每当网络音频状态发生变化时就会触发该事件。在这种情况下，您将获得内置的{}{}async_load{}{}DS 映射，其中填充了键"{}event_type{}"，如果该映射是一个字符串，则该映射将保存字符串"{}audio_system_status{}"音频事件。当此键存在时，还会有另一个"{}status{}"键，其状态为"{}available{}"或"{}unavailable{}"。',"{}GameMaker{} has a complete audio engine that is based on the {}*.ogg{}, {}*.mp3{} and {}*.wav{} sound formats.":"{}GameMaker{}拥有一个基于{}*.ogg{}、{}*.mp3{}和{}*.wav{}声音格式的完整音频引擎。","{}GameMaker{}&nbsp;supports loading streamed audio directly from .ogg files. For this you can use&nbsp;{}{}audio_create_stream{}{}&nbsp;and&nbsp;{}{}audio_destroy_stream{}{}.":"{}GameMaker{}支持直接从 .ogg 文件加载流式音频。为此，您可以使用{}{}audio_create_stream{}{}和{}{}audio_destroy_stream{}{}。","{}Here the priority will default to 0 and the sound will not be looped. You can supply {}additional keys{} in the struct to change the properties of the sound.{}":"{}此处优先级将默认为 0，并且声音不会循环播放。您可以在结构中提供{}附加键{}来更改声音的属性。{}",'{}{}Gain{}{}: This is a multiplier for the volume. The default value for gain on the asset level is the value of the "Volume" slider in {}The Sound Editor{}.&nbsp;The default value on all other levels is 1. Gain can also be added using&nbsp;{}Audio Effects{}.':'{}{}增益{}{}：这是音量的乘数。资产级别增益的默认值是{}声音编辑器{}中"音量"滑块的值。所有其他级别的默认值为 1。还可以使用{}音频效果{}添加增益。',"{}{}IMPORTANT{}{}&nbsp;The loop end position {}must{}&nbsp;be past the loop start position. The exception to this is the value 0.0 for loop end, which marks the end of the sound (i.e.&nbsp;{}{}audio_sound_length{}{}).":"{}{}重要{}{}循环结束位置{}必须{}超过循环开始位置。例外情况是循环结束的值 0.0，它标记声音的结束(即{}{}audio_sound_length{}{})。","{}{}Listener Mask{}{}: This is a bitmask value that determines the listeners that audio is heard on. The default value is 1 (or {}0x01{}), which stands for the default listener.":"{}{}监听器掩码{}{}：这是一个位掩码值，用于确定收听音频的监听器。默认值为 1(或{}0x01{})，代表默认侦听器。","{}{}NOTE{}{}&nbsp;All sounds are by default added to an audio group&nbsp;{}{}audiogroup_default{}{}.":"{}{}注意{}{}默认情况下，所有声音都会添加到音频组{}{}audiogroup_default{}{}。","{}{}NOTE{}{}&nbsp;An {}Audio Playback Ended{}&nbsp;event is triggered for the sound when it stops playing.":"{}{}注意{}{}当声音停止播放时，会触发一个{}音频播放结束{}事件。","{}{}NOTE{}{}&nbsp;The optional parameters that you can pass to the {}audio_play_sound_*{} functions set the instance-level value of the property.":"{}{}注意{}{}您可以传递给{}audio_play_sound_*{}函数的可选参数设置属性的实例级值。","{}{}NOTE{}{}&nbsp;This event will be triggered on {}all{} platforms, but on everything except HTML5 it will only be triggered once on Game Start when the audio engine is first initialised.":"{}{}注意{}{}此事件将在{}所有{}平台上触发，但在除 HTML5 之外的所有平台上，只会在游戏开始时音频引擎首次初始化时触发一次。","{}{}NOTE{}{}&nbsp;{}Audio Emitters{}&nbsp;introduce another level for the gain, pitch and listener mask parameters.":"{}{}注意{}{}{}音频发射器{}引入了另一个级别的增益、音高和听者遮罩参数。","{}{}NOTE{}{}&nbsp;{}{}audio_play_sound_at{}{}&nbsp;and&nbsp;{}{}audio_play_sound_on{}{}&nbsp;work in the same way and also return the ID of the sound instance they create.":"{}{}注意{}{}{}{}audio_play_sound_at{}{}和{}{}audio_play_sound_on{}{}的工作方式相同，也返回它们创建的声音实例的 ID。","{}{}Offset/Track Position{}{}: This is the offset from the start of the audio track where it starts playing. If this value is set at the instance level, it overrides the value set at the asset level. By default this is 0 (i.e. no offset).":"{}{}偏移/轨道位置{}{}：这是距开始播放的音轨起点的偏移量。如果在实例级别设置该值，它将覆盖在资产级别设置的值。默认情况下，这是 0(即无偏移)。","{}{}Pitch{}{}: This is a multiplier for the sound's pitch. The default value for pitch on all levels is set to 1.":"{}{}音调{}{}：这是声音音调的乘数。所有级别的音调默认值均设置为 1。","{}{}TIP{}{}&nbsp;The maximum number of sound instances/voices is&nbsp;{}128{} by default. This can be changed using the function&nbsp;{}{}audio_channel_num{}{}.":"{}{}提示{}{}默认情况下，声音实例/声音的最大数量为{}128{}。可以使用函数{}{}audio_channel_num{}{}更改此值。","{}{}{}IMPORTANT{}{}{} When using audio on the HTML5 target, you should be aware that not all browsers support Web Audio and so may not play any sound for your project when run. You can get a general idea of Web Audio support from the following link: {}Can I Use Web Audio?{}.":"{}{}{}重要信息{}{}{}在 HTML5 目标上使用音频时，您应该注意并非所有浏览器都支持网络音频，因此在运行时可能不会为您的项目播放任何声音。您可以通过以下链接大致了解网络音频支持：{}我可以使用网络音频吗？{}。"},get_json_global=$.ajax({url:"/global.json",type:"GET",dataType:"json",async:!1,success:function(e){json_global=e}});$(function(){if(addNoTranslationStateButton(),noTranslationState())return!1;$("div.footer a,h4,caption").each(function(){setTranslator($(this),json_global)}),$("p,h1,h2,h3,td,li,a,div.dropspotnote,figcaption").each(function(){setTranslator($(this),json_file)}),$("th,.warning,.important,.optional").each(function(){setTranslator($(this),json_global)}),$(".header").length&&(window.setInterval(function(){$("#toc-panel a:not('isTranslate')").each(function(){$(this).addClass("isTranslate"),setTranslator($(this),json_global)}),$(".GlossDefinitionText:not('isTranslate')").each(function(){$(this).addClass("isTranslate"),setTranslator($(this),json_global)})},250),console.log("成功啦!现在正在疯狂翻译菜单中!")),$(".tooltip").each(function(){setTranslator($(this),json_global,"title")})}),document.addEventListener("DOMContentLoaded",()=>{pangu.autoSpacingPage()})</script><script type="text/javascript" language="JavaScript">function reDo(){innerWidth==origWidth&&innerHeight==origHeight||location.reload()}4==parseInt(navigator.appVersion)&&"Netscape"==navigator.appName&&(origWidth=innerWidth,origHeight=innerHeight,onresize=reDo),onerror=null</script><style type="text/css">p.WebHelpNavBar{text-align:right}</style><script type="text/javascript">gCommonRootRelPath=gRootRelPath="../../../..",gTopicId="8.2.2.3.5"</script><script type="text/javascript" src="../../../../template/scripts/rh.min.js"></script><script type="text/javascript" src="../../../../template/scripts/common.min.js"></script><script type="text/javascript" src="../../../../template/scripts/topic.min.js"></script><script type="text/javascript" src="../../../../template/scripts/topicwidgets.min.js"></script><script type="text/javascript" src="../../../../whxdata/projectsettings.js"></script><link rel="stylesheet" type="text/css" href="../../../../template/styles/topic.min.css"><link rel="stylesheet" type="text/css" href="../../../../template/Charcoal_Grey/topicheader.css"><meta name="topic-status" content="Draft"><meta http-equiv="Content-Type" content="text/html; charset=utf-8"><title>Audio</title><meta name="generator" content="Adobe RoboHelp 2022"><link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css"><script src="../../../../assets/scripts/main_script.js" type="module"></script><meta name="rh-authors" content="Mark Alexander"><meta name="topic-comment" content="Page outlining the different functions and variables associated with Audio"><meta name="rh-index-keywords" content=""><meta name="search-keywords" content="Audio"><meta name="brsnext" value="GameMaker_Language/GML_Reference/Asset_Management/Audio/Audio_Properties.htm"><meta name="brsprev" value="GameMaker_Language/GML_Reference/Asset_Management/Tilsets/tileset_get_info.htm"></head><body><div class="topic-header rh-hide" id="rh-topic-header"><div class="logo"></div><div class="nav"><div class="title" title="Audio"><span>Audio</span></div><div class="gotohome" title="Click here to see this page in full context"><a href="#" onclick="rh._.goToFullLayout()">Click here to see this page in full context</a></div></div></div><div class="topic-header-shadow rh-hide" id="rh-topic-header-shadow"></div><h1><span data-field="title" data-format="default">Audio</span></h1><p><span data-keyref="GameMaker Name">GameMaker</span> has a complete audio engine that is based on the <span class="inline">*.ogg</span>, <span class="inline">*.mp3</span> and <span class="inline">*.wav</span> sound formats.</p><p>Sounds of these types <a href="../../../../The_Asset_Editors/Sounds.htm">added to the IDE</a> can be used in your game using the audio functions shown below.</p><p>For things more complex than basic sound effects, or playing a single piece of music, you can refer to the advanced audio functions which let you modify how a sound is played. There is also a selection of more specialised functions dedicated to streaming audio, positioning audio (to give 3D sound), grouping audio,&nbsp;synchronised audio and audio effects.</p><div data-conref="../../../../assets/snippets/Note_HTML5_Web_Audio.hts"><p class="note"><b><span data-conref="../../../../assets/snippets/Tag_important.hts"><span class="important">IMPORTANT</span></span></b> When using audio on the HTML5 target, you should be aware that not all browsers support Web Audio and so may not play any sound for your project when run. You can get a general idea of Web Audio support from the following link: <a href="https://caniuse.com/audio-api" target="_blank">Can I Use Web Audio?</a>.</p></div><div class="minitoc" data-minitoc-targetid="drop-down1" style=""><p class="minitoc-caption" href="#" style="">Contents</p><ol class="minitoc-list" style=""><li><a href="#using_audio" class="minitoc-list-item">Using Audio</a></li><li><a href="#advanced_audio" class="minitoc-list-item">Advanced Audio</a></li><li><a href="#web_audio" class="minitoc-list-item">Web Audio</a></li><li><a href="#function_refere" class="minitoc-list-item">Function Reference</a></li></ol></div><h2 id="using_audio">Using Audio</h2><h3>Playing Sounds</h3><p>The most straightforward way to play a sound is using&nbsp;<span class="inline2"><a href="audio_play_sound.htm">audio_play_sound</a></span>:&nbsp;</p><p class="code">audio_play_sound(snd_Explode, 10, false);</p><p>At a minimum you have to provide the <span data-keyref="Type_Asset_Sound"><a target="_blank" href="../../../../The_Asset_Editors/Sounds.htm">Sound Asset</a></span>, a priority for the new sound instance and whether the sound should loop.</p><p>Another way to play sounds is using&nbsp;<span class="inline2"><a href="audio_play_sound_ext.htm">audio_play_sound_ext</a></span>. This function is identical to <span class="inline2"><a href="audio_play_sound.htm">audio_play_sound</a></span>&nbsp;but allows you to pass various audio parameters in a struct. Using this function, you only need to provide a&nbsp;<span data-keyref="Type_Asset_Sound"><a target="_blank" href="../../../../The_Asset_Editors/Sounds.htm">Sound Asset</a></span>&nbsp;through the "sound" key of the struct:&nbsp;</p><p class="code">audio_play_sound_ext({ sound: snd_Explode&nbsp;});</p><p><span>Here the priority will default to 0 and the sound will not be looped. You can supply <a href="audio_play_sound_ext.htm">additional keys</a> in the struct to change the properties of the sound.</span></p><div data-conref="../../../../assets/snippets/Note_Triggers_Audio_Playback_Event.hts"><p class="note"><span data-conref="../../../../assets/snippets/Tag_note.hts"><span class="note">NOTE</span></span>&nbsp;An <a href="../../../../The_Asset_Editors/Object_Properties/Async_Events/Audio_Playback_Ended.htm">Audio Playback Ended</a>&nbsp;event is triggered for the sound when it stops playing.</p></div><h3>Sound Instances (Voices)</h3><p>The functions&nbsp;<span class="inline2"><a href="audio_play_sound.htm">audio_play_sound</a></span>&nbsp;and&nbsp;<span class="inline2"><a href="audio_play_sound_ext.htm">audio_play_sound_ext</a></span>&nbsp;create a new&nbsp;<em>instance</em> of a sound (also called a "voice") and return its ID:&nbsp;</p><p class="code">ins_sound = audio_play_sound(snd_Explode, 10, false);</p><p>You can use this sound&nbsp;<strong>instance</strong> ID in functions to change the audio properties at the <strong>instance</strong> level (or pass them directly as optional arguments). This will only change the properties for that particular sound instance.</p><p>In case you pass a sound <strong>asset</strong> ID to the functions, the audio property at the <strong>asset</strong> level will be set to the given value.</p><p class="note"><span data-conref="../../../../assets/snippets/Tag_note.hts"><span class="note">NOTE</span></span>&nbsp;<span class="inline2"><a href="audio_play_sound_at.htm">audio_play_sound_at</a></span>&nbsp;and&nbsp;<span class="inline2"><a href="Audio_Emitters/audio_play_sound_on.htm">audio_play_sound_on</a></span>&nbsp;work in the same way and also return the ID of the sound instance they create.</p><p class="note"><span data-conref="../../../../assets/snippets/Tag_tip.hts"><span class="tip">TIP</span></span>&nbsp;The maximum number of sound instances/voices is&nbsp;<span data-keyref="Max_Audio_Channels_Default">128</span> by default. This can be changed using the function&nbsp;<span class="inline2"><a href="audio_channel_num.htm">audio_channel_num</a></span>.</p><h3 id="h">Audio Properties</h3><p>Every sound has basic properties that are applied on different "levels". Depending on the property, it either acts as a multiplier, or overrides the value set at a previous level.</p><p>These audio properties are:&nbsp;</p><ul class="Disc"><li><a href="audio_sound_gain.htm"><strong>Gain</strong></a>: This is a multiplier for the volume. The default value for gain on the asset level is the value of the "Volume" slider in <a href="../../../../The_Asset_Editors/Sounds.htm">The Sound Editor</a>.&nbsp;The default value on all other levels is 1. Gain can also be added using&nbsp;<a href="Audio_Effects/Audio_Effects.htm">Audio Effects</a>.</li><li><a href="audio_sound_pitch.htm"><strong>Pitch</strong></a>: This is a multiplier for the sound's pitch. The default value for pitch on all levels is set to 1.</li><li><a href="audio_sound_set_track_position.htm"><strong>Offset/Track Position</strong></a>: This is the offset from the start of the audio track where it starts playing. If this value is set at the instance level, it overrides the value set at the asset level. By default this is 0 (i.e. no offset).</li><li><a href="audio_sound_set_listener_mask.htm"><strong>Listener Mask</strong></a>: This is a bitmask value that determines the listeners that audio is heard on. The default value is 1 (or <span class="inline2">0x01</span>), which stands for the default listener.</li></ul><p>For an overview of all audio properties, levels and how their values are calculated, see <a href="Audio_Properties.htm">Audio Properties Overview</a>.</p><p class="note"><span data-conref="../../../../assets/snippets/Tag_note.hts"><span class="note">NOTE</span></span>&nbsp;The optional parameters that you can pass to the <span class="inline2">audio_play_sound_*</span> functions set the instance-level value of the property.</p><h3>Audio Looping</h3><p>A sound can be looped by setting it to loop. This can either be done when playing the sound using any of the <span class="inline2">audio_play_sound_*</span> functions:&nbsp;</p><p class="code">ins_sound = audio_play_sound(snd_Engine, 100, true);</p><p>or afterwards, when the sound is already playing, using the function&nbsp;<span class="inline3_func"><a href="Audio_Loop_Points/audio_sound_loop.htm">audio_sound_loop</a></span>:&nbsp;</p><p class="code">audio_sound_loop(ins_sound, true);</p><p>By default a sound loops from its start to its end. The start and end position can be changed using&nbsp;<span class="inline3_func"><a href="Audio_Loop_Points/audio_sound_loop_start.htm">audio_sound_loop_start</a></span>&nbsp;and&nbsp;<span class="inline3_func"><a href="Audio_Loop_Points/audio_sound_loop_end.htm">audio_sound_loop_end</a></span>&nbsp;respectively, also while the sound is playing (i.e. <span class="inline2">ins_sound</span> refers to a sound instance for which <span class="inline3_func"><a href="audio_is_playing.htm">audio_is_playing</a></span>&nbsp;returns <span class="inline2">true</span>).</p><p>When the track position reaches the loop end position if a sound is set to loop, it continues playing from the start position.</p><p class="note"><span data-conref="../../../../assets/snippets/Tag_important.hts"><span class="important">IMPORTANT</span></span>&nbsp;The loop end position <em>must</em>&nbsp;be past the loop start position. The exception to this is the value 0.0 for loop end, which marks the end of the sound (i.e.&nbsp;<span class="inline3_func"><a href="audio_sound_length.htm">audio_sound_length</a></span>).</p><p>See:&nbsp;<a href="Audio_Loop_Points/Audio_Loop_Points.htm">Audio Loop Points</a></p><h3>Audio Effects</h3><p>Finally you can add effects to the audio that you play, such as reverb, echo, delay, etc.</p><p>Audio effects are created using&nbsp;<span class="inline2"><a href="Audio_Effects/audio_effect_create.htm">audio_effect_create</a></span> and then assigned to one of the effects slots of an audio bus. The audio bus that you can always assign effects to is the main audio bus&nbsp;<span class="inline2"><a href="Audio_Effects/audio_bus_main.htm">audio_bus_main</a></span>.</p><p>See:&nbsp;<a href="Audio_Effects/Audio_Effects.htm">Audio Effects</a></p><h2 id="advanced_audio">Advanced Audio</h2><h3>Audio Emitters and Listeners</h3><p>If you need positional audio or audio that should play in a three-dimensional environment, you can use&nbsp;<a href="Audio_Emitters/Audio_Emitters.htm">Audio Emitters</a>&nbsp;and&nbsp;<a href="Audio_Listeners/Audio_Listeners.htm">Audio Listeners</a>.</p><p class="note"><span data-conref="../../../../assets/snippets/Tag_note.hts"><span class="note">NOTE</span></span>&nbsp;<a href="Audio_Emitters/Audio_Emitters.htm">Audio Emitters</a>&nbsp;introduce another level for the gain, pitch and listener mask parameters.</p><h3>Audio Groups</h3><p>All sound assets, except for streamed audio, belong to a single <a href="../../../../Settings/Audio_Groups.htm">audio group</a>. Sounds in an audio group can be loaded and unloaded at the same time.</p><p>Audio groups have their own gain factor (see&nbsp;<span class="inline2"><a href="Audio_Groups/audio_group_set_gain.htm">audio_group_set_gain</a></span>&nbsp;/&nbsp;<span class="inline2"><a href="Audio_Groups/audio_group_get_gain.htm">audio_group_get_gain</a></span>)</p><p class="note"><span data-conref="../../../../assets/snippets/Tag_note.hts"><span class="note">NOTE</span></span>&nbsp;All sounds are by default added to an audio group&nbsp;<span class="inline2"><a href="Audio_Groups/audiogroup_default.htm">audiogroup_default</a></span>.</p><h3>Audio Streams</h3><p><span data-keyref="GameMaker Name">GameMaker</span>&nbsp;supports loading streamed audio directly from .ogg files. For this you can use&nbsp;<span class="inline2"><a href="audio_create_stream.htm">audio_create_stream</a></span>&nbsp;and&nbsp;<span class="inline2"><a href="audio_destroy_stream.htm">audio_destroy_stream</a></span>.</p><h3>Sync Groups</h3><p>For audio that should play perfectly in sync&nbsp;on a per sample level,&nbsp;<span data-keyref="GameMaker Name">GameMaker</span>&nbsp;has sync groups. See&nbsp;<a href="Audio_Synchronisation/Audio_Synchronisation.htm">Audio Synchronisation</a>&nbsp;for more information on this.</p><h2 id="web_audio">Web Audio</h2><p>When creating games for the HTML5 target platform, the audio engine requires <b>Web Audio</b> support, and this in turn means that sometimes your audio won't play when or how you expect it. This is because the Web Audio context may not be running or may stop running when your game is being played. What causes this varies greatly between browsers, and even between different versions of the same browser, and so detecting when the web audio context status changes is very important, e.g.: to detect when the context changes and pause/start looping audio like background music.</p><p>To help with this issue, <span data-keyref="GameMaker Name">GameMaker</span> has two separate ways to detect the change in Web Audio context status, either using the following function:</p><ul class="colour"><li><a href="audio_system_is_available.htm">audio_system_is_available</a></li></ul><p>or using the <b>Asynchronous System Event</b>, which will be triggered whenever the Web Audio status changes. In this event you will get the built-in&nbsp;<span class="inline2"><a href="../../../GML_Overview/Variables/Builtin_Global_Variables/async_load.htm">async_load</a></span>&nbsp;DS map populated with the key "<span class="inline">event_type</span>" which in turn will hold the string "<span class="inline">audio_system_status</span>" if it is an audio event. When this key exists, there will also be a further "<span class="inline">status</span>" key which will be either "<span class="inline">available</span>" or "<span class="inline">unavailable</span>".</p><p>For more information please see the section:&nbsp;</p><ul class="colour"><li><a href="../../../../The_Asset_Editors/Object_Properties/Async_Events/System.htm">The Asynchronous System Event</a></li></ul><p class="note"><span data-conref="../../../../assets/snippets/Tag_note.hts"><span class="note">NOTE</span></span>&nbsp;This event will be triggered on <i>all</i> platforms, but on everything except HTML5 it will only be triggered once on Game Start when the audio engine is first initialised.</p><p>To check if audio can be played using Web Audio, you can use&nbsp;<span class="inline2"><a href="audio_sound_is_playable.htm">audio_sound_is_playable</a></span>.</p><h2 id="function_refere">Function Reference</h2><h3>Asset Info</h3><ul class="colour"><li><a href="audio_exists.htm">audio_exists</a></li><li><a href="audio_get_name.htm">audio_get_name</a></li><li><a href="audio_get_type.htm">audio_get_type</a></li><li><a href="audio_sound_length.htm">audio_sound_length</a></li><li><a href="audio_sound_is_playable.htm">audio_sound_is_playable</a></li></ul><h3>Playing Sounds</h3><ul class="colour"><li><a href="audio_play_sound.htm">audio_play_sound</a></li><li><a href="audio_play_sound_ext.htm">audio_play_sound_ext</a></li><li><a href="audio_play_sound_at.htm">audio_play_sound_at</a></li><li><a href="audio_pause_sound.htm">audio_pause_sound</a></li><li><a href="audio_pause_all.htm">audio_pause_all</a></li><li><a href="audio_resume_sound.htm">audio_resume_sound</a></li><li><a href="audio_resume_all.htm">audio_resume_all</a></li><li><a href="audio_stop_sound.htm">audio_stop_sound</a></li><li><a href="audio_stop_all.htm">audio_stop_all</a></li><li><a href="audio_is_playing.htm">audio_is_playing</a></li><li><a href="audio_is_paused.htm">audio_is_paused</a></li></ul><h3>Audio Properties</h3><ul class="colour"><li><a href="audio_sound_gain.htm">audio_sound_gain</a></li><li><a href="audio_sound_get_gain.htm">audio_sound_get_gain</a></li><li><a href="audio_sound_pitch.htm">audio_sound_pitch</a></li><li><a href="audio_sound_get_pitch.htm">audio_sound_get_pitch</a></li><li><a href="audio_sound_set_track_position.htm">audio_sound_set_track_position</a></li><li><a href="audio_sound_get_track_position.htm">audio_sound_get_track_position</a></li><li><a href="audio_sound_set_listener_mask.htm">audio_sound_set_listener_mask</a></li><li><a href="audio_sound_get_listener_mask.htm">audio_sound_get_listener_mask</a></li></ul><h3><a href="Audio_Loop_Points/Audio_Loop_Points.htm">Audio Loop Points</a></h3><ul class="colour"><li><a href="Audio_Loop_Points/audio_sound_loop.htm">audio_sound_loop</a></li><li><a href="Audio_Loop_Points/audio_sound_get_loop.htm">audio_sound_get_loop</a></li><li><a href="Audio_Loop_Points/audio_sound_loop_start.htm">audio_sound_loop_start</a></li><li><a href="Audio_Loop_Points/audio_sound_get_loop_start.htm">audio_sound_get_loop_start</a></li><li><a href="Audio_Loop_Points/audio_sound_loop_end.htm">audio_sound_loop_end</a></li><li><a href="Audio_Loop_Points/audio_sound_get_loop_end.htm">audio_sound_get_loop_end</a></li></ul><h3>Configuration</h3><ul class="colour"><li><a href="audio_master_gain.htm">audio_master_gain</a></li><li><a href="audio_set_master_gain.htm">audio_set_master_gain</a></li><li><a href="audio_get_master_gain.htm">audio_get_master_gain</a></li><li><a href="audio_channel_num.htm">audio_channel_num</a></li><li><a href="audio_falloff_set_model.htm">audio_falloff_set_model</a></li><li><a href="audio_system_is_available.htm">audio_system_is_available</a></li><li><a href="audio_system_is_initialised.htm">audio_system_is_initialised</a></li></ul><h3>Debugging</h3><ul class="colour"><li><a href="audio_debug.htm">audio_debug</a></li></ul><h3>Gain Conversion</h3><ul class="colour"><li><a href="lin_to_db.htm">lin_to_db</a></li><li><a href="db_to_lin.htm">db_to_lin</a></li></ul><h3>Audio Streams</h3><ul class="colour"><li><a href="audio_create_stream.htm">audio_create_stream</a></li><li><a href="audio_destroy_stream.htm">audio_destroy_stream</a></li></ul><h3>Advanced Audio</h3><ul class="colour"><li><a href="Audio_Emitters/Audio_Emitters.htm">Audio Emitters</a></li><li><a href="Audio_Listeners/Audio_Listeners.htm">Audio Listeners</a></li><li><a href="Audio_Effects/Audio_Effects.htm">Audio Effects</a></li><li><a href="Audio_Groups/Audio_Groups.htm">Audio Groups</a></li><li><a href="Audio_Buffers/Audio_Buffers.htm">Audio Buffers</a></li><li><a href="Audio_Synchronisation/Audio_Synchronisation.htm">Audio Synchronisation</a></li></ul><p>&nbsp;</p><p>&nbsp;</p><div class="footer"><div class="buttons"><div class="clear"><div style="float:left">Back:&nbsp;<a href="../Asset_Management.htm">Asset Management</a></div><div style="float:right">Next:&nbsp;<a href="../Paths/Paths.htm">Paths</a></div></div></div><h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2024 All Rights Reserved</span></h5></div></body></html>