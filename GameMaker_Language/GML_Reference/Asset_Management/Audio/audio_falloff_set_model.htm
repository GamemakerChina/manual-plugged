<!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml"><head><script type="text/javascript" src="../../../../assets/import/jquery-3.6.1.min.js"></script><script type="text/javascript" src="../../../../assets/import/layer/layer.js"></script><script type="text/javascript" src="../../../../assets/import/pangu.min.js"></script><link rel="stylesheet" type="text/css" href="../../../../assets/import/layer/layui_btn.css"><link rel="stylesheet" type="text/css" href="../../../../assets/import/layer/layui_col.css"><link rel="stylesheet" type="text/css" href="../../../../assets/import/layer/theme/default/layer.css"><link rel="stylesheet" type="text/css" href="../../../../assets/import/main.css"><script>let str;removeHtml=function(t){return t=(t=(t=(t=t.replace(/(<([^>]+)>)/gi,"{}")).replace(/\r\n/g,"\n")).replace(/\n/g,"")).replace(/ {2,}/g," ")},retHtml=function(t){return t.match(/(<([^>]+)>)/gi)},setTranslator=function(t,n,a){let e;e=a?t.attr(a):t.html();let l=n[removeHtml(e)];if(null!=l&&l.length){n=retHtml(e);let o=0;n&&n.forEach(function(t,n){var a=l.replace("{"+o+"}",t);l=a===l?l.replace("{}",t):a,o++}),a?t.attr(a,l):t.html(l)}},noTranslationState=function(){return"true"==window.localStorage.getItem("noTranslationState")},noTranslationStateToggle=function(){window.localStorage.setItem("noTranslationState",!noTranslationState())},addNoTranslationStateButton=function(){$(".header").length&&$(".header").append(`
		
		<button style="
			float: right;
			font-size: 16px;
			padding: 4px 12px;
		"
		onclick="
		window.location.replace('gmmt://'+document.location.hash)
		"
		>打开编辑器</button>

		<button style="
			float: right;
			font-size: 16px;
			padding: 4px 12px;
		"
		onclick="
		noTranslationStateToggle();
		location.reload();
    	event.stopPropagation();
		"
		>切换翻译</button>
		`)},removeExtensionFromHash=function(t){return t.replaceAll("#t=","").replaceAll("%2F","/").replaceAll(".htm","")},$(function(){if(addNoTranslationStateButton(),noTranslationState())return!1;$("div.footer a,h4,caption").each(function(){setTranslator($(this),json_global)}),$("p,h1,h2,h3,td,li,a,div.dropspotnote,figcaption").each(function(){setTranslator($(this),json)}),$("th,.warning,.important,.optional").each(function(){setTranslator($(this),json_global)}),$(".header").length&&(window.setInterval(function(){$("#toc-panel a:not('isTranslate')").each(function(){$(this).addClass("isTranslate"),setTranslator($(this),json_global)}),$(".GlossDefinitionText:not('isTranslate')").each(function(){$(this).addClass("isTranslate"),setTranslator($(this),json_global)})},250),console.log("成功啦!现在正在疯狂翻译菜单中!")),$(".tooltip").each(function(){setTranslator($(this),json_global,"title")})}),document.addEventListener("DOMContentLoaded",()=>{pangu.autoSpacingPage()})</script><script type="text/javascript" language="JavaScript">function reDo(){innerWidth==origWidth&&innerHeight==origHeight||location.reload()}4==parseInt(navigator.appVersion)&&"Netscape"==navigator.appName&&(origWidth=innerWidth,origHeight=innerHeight,onresize=reDo),onerror=null</script><style type="text/css">p.WebHelpNavBar{text-align:right}</style><script type="text/javascript">gCommonRootRelPath=gRootRelPath="../../../..",gTopicId="8.2.2.3.5.0_30"</script><script type="text/javascript" src="../../../../template/scripts/rh.min.js"></script><script type="text/javascript" src="../../../../template/scripts/common.min.js"></script><script type="text/javascript" src="../../../../template/scripts/topic.min.js"></script><script type="text/javascript" src="../../../../template/scripts/topicwidgets.min.js"></script><script type="text/javascript" src="../../../../whxdata/projectsettings.js"></script><link rel="stylesheet" type="text/css" href="../../../../template/styles/topic.min.css"><link rel="stylesheet" type="text/css" href="../../../../template/Charcoal_Grey/topicheader.css"><meta name="topic-status" content="Draft"><meta http-equiv="Content-Type" content="text/html; charset=utf-8"><title>audio_falloff_set_model</title><meta name="generator" content="Adobe RoboHelp 2022"><link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css"><script src="../../../../assets/scripts/main_script.js" type="module"></script><meta name="rh-authors" content="Mark Alexander"><meta name="topic-comment" content="Page explaining the function audio_falloff_set_model"><meta name="rh-index-keywords" content="audio_falloff_set_model,audio_falloff_exponent_distance,audio_falloff_exponent_distance_clamped,audio_falloff_inverse_distance,audio_falloff_inverse_distance_clamped,audio_falloff_linear_distance,audio_falloff_linear_distance_clamped,audio_falloff_none,audio_falloff_exponent_distance_scaled,audio_falloff_inverse_distance_scaled"><meta name="search-keywords" content="audio_falloff_set_model,audio_falloff_exponent_distance,audio_falloff_exponent_distance_clamped,audio_falloff_inverse_distance,audio_falloff_inverse_distance_clamped,audio_falloff_linear_distance,audio_falloff_linear_distance_clamped,audio_falloff_none,audio_falloff_exponent_distance_scaled,audio_falloff_inverse_distance_scaled"><meta name="brsnext" value="GameMaker_Language/GML_Reference/Asset_Management/Audio/audio_system_is_available.htm"><meta name="brsprev" value="GameMaker_Language/GML_Reference/Asset_Management/Audio/audio_channel_num.htm"></head><body><div class="topic-header rh-hide" id="rh-topic-header"><div class="logo"></div><div class="nav"><div class="title" title="audio_falloff_set_model"><span>audio_falloff_set_model</span></div><div class="gotohome" title="Click here to see this page in full context"><a href="#" onclick="rh._.goToFullLayout()">Click here to see this page in full context</a></div></div></div><div class="topic-header-shadow rh-hide" id="rh-topic-header-shadow"></div><h1><span data-field="title" data-format="default">audio_falloff_set_model</span></h1><p>To add more versatility to the audio engine, <span data-keyref="GameMaker Name">GameMaker</span> permits you to select the falloff model that suits your game. This model will be used for <b>all</b> the audio functions in the game or app, and so you should make sure that the model you choose is the correct one, as each one will affect how the listener perceives the sounds you play through emitters or with the function <span class="inline"><a href="audio_play_sound_at.htm">audio_play_sound_at()</a></span>.</p><p>The default falloff model is <span class="inline">audio_falloff_none</span>, meaning there is no falloff when using emitters or positioned audio unless you change the falloff model.</p><h2>Falloff Models</h2><p>When playing audio through <span class="inline"><a href="audio_play_sound_at.htm">audio_play_sound_at()</a></span> or setting the <a href="Audio_Emitters/audio_emitter_falloff.htm">falloff for an emitter</a>, there are three arguments that you will need to set, and each one is appropriate to a specific&nbsp;model and will affect the way the final sound is heard&nbsp;by the player depending on the distance that the listener is from the source. The three arguments are:</p><ul class="colour"><li><b>Reference distance</b>: this is the distance from the listener under which the volume for the sound playing would normally drop by half before being influenced by roll-off factor or the specified maximum distance.<b></b></li><li><b>Maximum distance</b>: this sets the distance where there will no longer be any attenuation of the source sound. This can be the point at which the sound is no longer heard <i>or</i> the point at which the sound volume no longer decreases below the minimum threshold defined by the model chosen.<b></b></li><li><b>Falloff factor</b>: The falloff factor is used in distance attenuation based on the inverse distance model and sets the final minimum threshold for a sound with falloff.</li></ul><p>The falloff models that are affected by these arguments are represented in&nbsp;<span data-keyref="GameMaker Name">GameMaker</span>&nbsp;by the following constants (the table shows the exact calculations used too):</p><table><colgroup><col><col></colgroup><tbody><tr><th colspan="2"><span data-keyref="Type_Constant_Audio_Falloff_Type"><a target="_blank" href="audio_falloff_set_model.htm">Audio Falloff Constant</a></span></th></tr><tr><th>Constant</th><th>Gain Calculation</th></tr><tr><td><span class="inline">audio_falloff_exponent_distance</span></td><td><span class="inline"><br>gain = (listener_distance / reference_distance) ^ (-falloff_factor)</span></td></tr><tr><td><span class="inline">audio_falloff_exponent_distance_clamped</span></td><td><span class="inline"><br>distance = clamp(listener_distance, reference_distance, maximum_distance)<br>gain = (distance / reference_distance) ^ (-falloff_factor)</span></td></tr><tr><td><span class="inline">audio_falloff_exponent_distance_scaled</span></td><td><span class="inline"><br>distance = clamp(listener_distance, reference_distance, maximum_distance)<br><br>gain = ((distance / reference_distance) ^ (-falloff_factor)) * (((maximum_distance - distance) / (maximum_distance - reference_distance)) ^ (distance / maximum_distance))</span></td></tr><tr><td><span class="inline">audio_falloff_inverse_distance</span></td><td><span class="inline"><br>gain = reference_distance / (reference_distance + falloff_factor * (listener_distance - reference_distance))</span></td></tr><tr><td><span class="inline">audio_falloff_inverse_distance_clamped</span></td><td><span class="inline"><br>distance = clamp(listener_distance, reference_distance, maximum_distance)<br>gain = reference_distance / (reference_distance + falloff_factor * (distance - reference_distance))</span></td></tr><tr><td><span class="inline">audio_falloff_inverse_distance_scaled</span></td><td><span class="inline"><br>distance = clamp(listener_distance, reference_distance, maximum_distance)<br><br>gain = (reference_distance / (reference_distance + falloff_factor * (distance - reference_distance))) * (((maximum_distance - distance) / (maximum_distance - reference_distance)) ^ (distance / maximum_distance))</span></td></tr><tr><td><span class="inline">audio_falloff_linear_distance</span></td><td><span class="inline"><br>distance = min(distance, maximum_distance)<br>gain = (1 - falloff_factor * (distance - reference_distance) / (maximum_distance - reference_distance))</span></td></tr><tr><td><span class="inline">audio_falloff_linear_distance_clamped</span></td><td><span class="inline"><br>distance = clamp(listener_distance, reference_distance, maximum_distance)<br>gain = (1 - falloff_factor * (distance - reference_distance) / (maximum_distance - reference_distance))</span></td></tr><tr><td><span class="inline">audio_falloff_none</span></td><td><span class="inline"><br>gain = 1</span></td></tr></tbody></table><p>The "<span class="inline">_scaled</span>" models are scaled in such a way that sounds are guaranteed to fall off entirely by the maximum distance.</p><p>The following graphs are visual representations of how some of the above constants work and affect the sound being played:</p><p><img alt="Distance Model Examples" class="center" src="../../../../assets/Images/Scripting_Reference/GML/Reference/Audio/Distance_Models.png"></p><h3>HTML5 Limitations</h3><p>In HTML5 the <span class="inline2">_clamped</span> and <span class="inline2">_scaled</span> variants are unsupported, as Web Audio doesn't support them. If you set the falloff model to one of these constants on HTML5,&nbsp;<span data-keyref="GameMaker Name">GameMaker</span>&nbsp;will internally use the nearest available model as follows:&nbsp;</p><ul class="Disc"><li><span class="inline2">exponent_distance_clamped</span> / <span class="inline2">exponent_distance_scaled</span>&nbsp;maps to <span class="inline2">exponent_distance</span></li><li><span class="inline2">inverse_distance_clamped</span> / <span class="inline2">inverse_distance_scaled</span>&nbsp;maps to <span class="inline2">inverse_distance</span></li><li><span class="inline2">linear_distance_clamped</span>&nbsp;maps to <span class="inline2">linear_distance</span></li></ul><p>This change only happens internally, the falloff model value remains the&nbsp;one that you passed to the function.</p><p>&nbsp;</p><h4>Syntax:</h4><p class="code"><span data-field="title" data-format="default">audio_falloff_set_model</span>(model);</p><table><tbody><tr><th>Argument</th><th>Type</th><th>Description</th></tr><tr><td>model</td><td><span data-keyref="Type_Constant_Audio_Falloff_Type"><a target="_blank" href="audio_falloff_set_model.htm">Audio Falloff Constant</a></span></td><td>The <b>constant</b> used to set the falloff model.</td></tr></tbody></table><p>&nbsp;</p><h4>Returns:</h4><p class="code"><span data-keyref="Type_Void">N/A</span></p><p>&nbsp;</p><h4>Example:</h4><p class="code"><span data-field="title" data-format="default">audio_falloff_set_model</span>(audio_falloff_exponent_distance_clamped);<br>audio_play_sound_at(snd_Waterfall, x, y, 0, 100, 300, 1, true, 1);</p><p>The above code sets the falloff model and then plays the sound indexed in the variable "snd_Waterfall", which will be looped at its room position, with a fall-off reference of 100, a falloff distance of 300, a falloff factor of 1 and a low priority.</p><p>&nbsp;</p><p>&nbsp;</p><div class="footer"><div class="buttons"><div class="clear"><div style="float:left">Back:&nbsp;<a href="Audio.htm">Audio</a></div><div style="float:right">Next:&nbsp;<a href="audio_system_is_available.htm">audio_system_is_available</a></div></div></div><h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2024 All Rights Reserved</span></h5></div></body></html>