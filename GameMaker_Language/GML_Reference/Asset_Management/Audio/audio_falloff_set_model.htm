<!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml"><head><script type="text/javascript" src="../../../../assets/import/jquery-3.6.1.min.js"></script><script type="text/javascript" src="../../../../assets/import/layer/layer.js"></script><script type="text/javascript" src="../../../../assets/import/pangu.min.js"></script><link rel="stylesheet" type="text/css" href="../../../../assets/import/layer/layui_btn.css"><link rel="stylesheet" type="text/css" href="../../../../assets/import/layer/layui_col.css"><link rel="stylesheet" type="text/css" href="../../../../assets/import/layer/theme/default/layer.css"><link rel="stylesheet" type="text/css" href="../../../../assets/import/main.css"><script>let str;removeHtml=function(e){return e=(e=(e=(e=e.replace(/(<([^>]+)>)/gi,"{}")).replace(/\r\n/g,"\n")).replace(/\n/g,"")).replace(/ {2,}/g," ")},retHtml=function(e){return e.match(/(<([^>]+)>)/gi)},setTranslator=function(e,t,a){let o;o=a?e.attr(a):e.html();let l=t[removeHtml(o)];if(null!=l&&l.length){t=retHtml(o);let n=0;t&&t.forEach(function(e,t){var a=l.replace("{"+n+"}",e);l=a===l?l.replace("{}",e):a,n++}),a?e.attr(a,l):e.html(l)}},noTranslationState=function(){return"true"==window.localStorage.getItem("noTranslationState")},noTranslationStateToggle=function(){window.localStorage.setItem("noTranslationState",!noTranslationState())},addNoTranslationStateButton=function(){var e=`
		
		<button style="
			float: right;
			font-size: 16px;
			padding: 4px 12px;
		"
		onclick="
		window.location.replace('gmmt://'+document.location.hash)
		"
		>打开编辑器</button>

		<button style="
			float: right;
			font-size: 16px;
			padding: 4px 12px;
		"
		onclick="
		noTranslationStateToggle();
		location.reload();
    	event.stopPropagation();
		"
		>切换翻译</button>
		`;$(".header").length?$(".header").append(e):($(".topic-header").append(e),$(".topic-header button").css("position","relative").css("top","44px"))},removeExtensionFromHash=function(e){return e.replaceAll("#t=","").replaceAll("%2F","/").replaceAll(".htm","")};let json_global,json_file={"Audio Falloff Constant":"音频衰减常量","Falloff Models":"衰减模型","In HTML5 the {}_clamped{} and {}_scaled{} variants are unsupported, as Web Audio doesn't support them. If you set the falloff model to one of these constants on HTML5,&nbsp;{}GameMaker{}&nbsp;will internally use the nearest available model as follows:&nbsp;":"在 HTML5 中，不支持{}_clamped{}和{}_scaled{}变体，因为网络音频不支持它们。如果您在 HTML5 上将衰减模型设置为这些常量之一，{}GameMaker{}将在内部使用最接近的可用模型，如下所示：",'The "{}_scaled{}" models are scaled in such a way that sounds are guaranteed to fall off entirely by the maximum distance.':'"{}_scaled{}"模型的缩放方式确保声音以最大距离完全脱落。','The above code sets the falloff model and then plays the sound indexed in the variable "snd_Waterfall", which will be looped at its room position, with a fall-off reference of 100, a falloff distance of 300, a falloff factor of 1 and a low priority.':'上述代码设置衰减模型，然后播放在变量"snd_Waterfall"中索引的声音，该声音将在其房间位置循环，衰减参考值为100，衰减距离为300，衰减因子为1，优先级较低。',"The default falloff model is {}audio_falloff_none{}, meaning there is no falloff when using emitters or positioned audio unless you change the falloff model.":"默认衰减模型为{}audio_falloff_none{}，这意味着使用发射器或定位音频时没有衰减，除非您更改衰减模型。","The falloff models that are affected by these arguments are represented in&nbsp;{}GameMaker{}&nbsp;by the following constants (the table shows the exact calculations used too):":"受这些参数影响的衰减模型在{}GameMaker{}中由以下常量表示(该表也显示了使用的精确计算)：","The following graphs are visual representations of how some of the above constants work and affect the sound being played:":"下图是上述一些常数如何工作和影响正在播放的声音的视觉表示：","The {}constant{} used to set the falloff model.":"用于设置衰减模型的{}常量{}。","This change only happens internally, the falloff model value remains the&nbsp;one that you passed to the function.":"此更改仅在内部发生，衰减模型值仍然是您传递给函数的值。","To add more versatility to the audio engine, {}GameMaker{} permits you to select the falloff model that suits your game. This model will be used for {}all{} the audio functions in the game or app, and so you should make sure that the model you choose is the correct one, as each one will affect how the listener perceives the sounds you play through emitters or with the function {}{}audio_play_sound_at(){}{}.":"要为音频引擎添加更多函数，{}GameMaker{}允许您选择适合您的游戏的衰减模型。此模型将用于{}游戏或应用程序中的所有{}音频函数，因此，您应确保选择的模型是正确的，因为每个模型都会影响收听者通过发射器或使用函数{}{}audio_play_sound_at(){}{}来感知您播放的声音。","When playing audio through {}{}audio_play_sound_at(){}{} or setting the {}falloff for an emitter{}, there are three arguments that you will need to set, and each one is appropriate to a specific&nbsp;model and will affect the way the final sound is heard&nbsp;by the player depending on the distance that the listener is from the source. The three arguments are:":"当通过{}{}audio_play_sound_at(){}{}播放音频或为发射器{}设置{}衰减时，需要设置三个参数，每个参数都适合特定模型，并且将影响播放器听到最终声音的方式，这取决于收听者与源之间的距离。三个论点是：","{}Falloff factor{}: The falloff factor is used in distance attenuation based on the inverse distance model and sets the final minimum threshold for a sound with falloff.":"{}衰减系数{}：衰减系数用于距离衰减中，基于反距离模型，为具有衰减的声音设置最终最小阈值。","{}Maximum distance{}: this sets the distance where there will no longer be any attenuation of the source sound. This can be the point at which the sound is no longer heard {}or{} the point at which the sound volume no longer decreases below the minimum threshold defined by the model chosen.{}{}":"{}最大距离{}：设置不再衰减源声音的距离。这可能是不再听到声音的点{}或{}音量不再降至所选模型定义的最小阈值以下的点。{}{}","{}Reference distance{}: this is the distance from the listener under which the volume for the sound playing would normally drop by half before being influenced by roll-off factor or the specified maximum distance.{}{}":"{}参考距离{}：此距离是与收听者的距离，在此距离下，播放声音的音量在受到滚降系数或指定最大距离影响之前通常会下降一半。{}{}","{}exponent_distance_clamped{} / {}exponent_distance_scaled{}&nbsp;maps to {}exponent_distance{}":"{}exponent_distance_clamped{}/{}exponent_distance_scaled{}映射到{}exponent_distance{}","{}inverse_distance_clamped{} / {}inverse_distance_scaled{}&nbsp;maps to {}inverse_distance{}":"{}inverse_distance_clamped{}/{}inverse_distance_scaled{}映射到{}inverse_distance{}","{}linear_distance_clamped{}&nbsp;maps to {}linear_distance{}":"{}linear_distance_clamped{}映射到{}linear_distance{}"},get_json_global=$.ajax({url:"/global.json",type:"GET",dataType:"json",async:!1,success:function(e){json_global=e}});$(function(){if(addNoTranslationStateButton(),noTranslationState())return!1;$("div.footer a,h4,caption").each(function(){setTranslator($(this),json_global)}),$("p,h1,h2,h3,td,li,a,div.dropspotnote,figcaption").each(function(){setTranslator($(this),json_file)}),$("th,.warning,.important,.optional").each(function(){setTranslator($(this),json_global)}),$(".header").length&&(window.setInterval(function(){$("#toc-panel a:not('isTranslate')").each(function(){$(this).addClass("isTranslate"),setTranslator($(this),json_global)}),$(".GlossDefinitionText:not('isTranslate')").each(function(){$(this).addClass("isTranslate"),setTranslator($(this),json_global)})},250),console.log("成功啦!现在正在疯狂翻译菜单中!")),$(".tooltip").each(function(){setTranslator($(this),json_global,"title")})}),document.addEventListener("DOMContentLoaded",()=>{pangu.autoSpacingPage()})</script><script type="text/javascript" language="JavaScript">function reDo(){innerWidth==origWidth&&innerHeight==origHeight||location.reload()}4==parseInt(navigator.appVersion)&&"Netscape"==navigator.appName&&(origWidth=innerWidth,origHeight=innerHeight,onresize=reDo),onerror=null</script><style type="text/css">p.WebHelpNavBar{text-align:right}</style><script type="text/javascript">gCommonRootRelPath=gRootRelPath="../../../..",gTopicId="8.2.2.3.5.0_30"</script><script type="text/javascript" src="../../../../template/scripts/rh.min.js"></script><script type="text/javascript" src="../../../../template/scripts/common.min.js"></script><script type="text/javascript" src="../../../../template/scripts/topic.min.js"></script><script type="text/javascript" src="../../../../template/scripts/topicwidgets.min.js"></script><script type="text/javascript" src="../../../../whxdata/projectsettings.js"></script><link rel="stylesheet" type="text/css" href="../../../../template/styles/topic.min.css"><link rel="stylesheet" type="text/css" href="../../../../template/Charcoal_Grey/topicheader.css"><meta name="topic-status" content="Draft"><meta http-equiv="Content-Type" content="text/html; charset=utf-8"><title>audio_falloff_set_model</title><meta name="generator" content="Adobe RoboHelp 2022"><link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css"><script src="../../../../assets/scripts/main_script.js" type="module"></script><meta name="rh-authors" content="Mark Alexander"><meta name="topic-comment" content="Page explaining the function audio_falloff_set_model"><meta name="rh-index-keywords" content="audio_falloff_set_model,audio_falloff_exponent_distance,audio_falloff_exponent_distance_clamped,audio_falloff_inverse_distance,audio_falloff_inverse_distance_clamped,audio_falloff_linear_distance,audio_falloff_linear_distance_clamped,audio_falloff_none,audio_falloff_exponent_distance_scaled,audio_falloff_inverse_distance_scaled"><meta name="search-keywords" content="audio_falloff_set_model,audio_falloff_exponent_distance,audio_falloff_exponent_distance_clamped,audio_falloff_inverse_distance,audio_falloff_inverse_distance_clamped,audio_falloff_linear_distance,audio_falloff_linear_distance_clamped,audio_falloff_none,audio_falloff_exponent_distance_scaled,audio_falloff_inverse_distance_scaled"><meta name="brsnext" value="GameMaker_Language/GML_Reference/Asset_Management/Audio/audio_system_is_available.htm"><meta name="brsprev" value="GameMaker_Language/GML_Reference/Asset_Management/Audio/audio_channel_num.htm"></head><body><div class="topic-header rh-hide" id="rh-topic-header"><div class="logo"></div><div class="nav"><div class="title" title="audio_falloff_set_model"><span>audio_falloff_set_model</span></div><div class="gotohome" title="Click here to see this page in full context"><a href="#" onclick="rh._.goToFullLayout()">Click here to see this page in full context</a></div></div></div><div class="topic-header-shadow rh-hide" id="rh-topic-header-shadow"></div><h1><span data-field="title" data-format="default">audio_falloff_set_model</span></h1><p>To add more versatility to the audio engine, <span data-keyref="GameMaker Name">GameMaker</span> permits you to select the falloff model that suits your game. This model will be used for <b>all</b> the audio functions in the game or app, and so you should make sure that the model you choose is the correct one, as each one will affect how the listener perceives the sounds you play through emitters or with the function <span class="inline"><a href="audio_play_sound_at.htm">audio_play_sound_at()</a></span>.</p><p>The default falloff model is <span class="inline">audio_falloff_none</span>, meaning there is no falloff when using emitters or positioned audio unless you change the falloff model.</p><h2>Falloff Models</h2><p>When playing audio through <span class="inline"><a href="audio_play_sound_at.htm">audio_play_sound_at()</a></span> or setting the <a href="Audio_Emitters/audio_emitter_falloff.htm">falloff for an emitter</a>, there are three arguments that you will need to set, and each one is appropriate to a specific&nbsp;model and will affect the way the final sound is heard&nbsp;by the player depending on the distance that the listener is from the source. The three arguments are:</p><ul class="colour"><li><b>Reference distance</b>: this is the distance from the listener under which the volume for the sound playing would normally drop by half before being influenced by roll-off factor or the specified maximum distance.<b></b></li><li><b>Maximum distance</b>: this sets the distance where there will no longer be any attenuation of the source sound. This can be the point at which the sound is no longer heard <i>or</i> the point at which the sound volume no longer decreases below the minimum threshold defined by the model chosen.<b></b></li><li><b>Falloff factor</b>: The falloff factor is used in distance attenuation based on the inverse distance model and sets the final minimum threshold for a sound with falloff.</li></ul><p>The falloff models that are affected by these arguments are represented in&nbsp;<span data-keyref="GameMaker Name">GameMaker</span>&nbsp;by the following constants (the table shows the exact calculations used too):</p><table><colgroup><col><col></colgroup><tbody><tr><th colspan="2"><span data-keyref="Type_Constant_Audio_Falloff_Type"><a target="_blank" href="audio_falloff_set_model.htm">Audio Falloff Constant</a></span></th></tr><tr><th>Constant</th><th>Gain Calculation</th></tr><tr><td><span class="inline">audio_falloff_exponent_distance</span></td><td><span class="inline"><br>gain = (listener_distance / reference_distance) ^ (-falloff_factor)</span></td></tr><tr><td><span class="inline">audio_falloff_exponent_distance_clamped</span></td><td><span class="inline"><br>distance = clamp(listener_distance, reference_distance, maximum_distance)<br>gain = (distance / reference_distance) ^ (-falloff_factor)</span></td></tr><tr><td><span class="inline">audio_falloff_exponent_distance_scaled</span></td><td><span class="inline"><br>distance = clamp(listener_distance, reference_distance, maximum_distance)<br><br>gain = ((distance / reference_distance) ^ (-falloff_factor)) * (((maximum_distance - distance) / (maximum_distance - reference_distance)) ^ (distance / maximum_distance))</span></td></tr><tr><td><span class="inline">audio_falloff_inverse_distance</span></td><td><span class="inline"><br>gain = reference_distance / (reference_distance + falloff_factor * (listener_distance - reference_distance))</span></td></tr><tr><td><span class="inline">audio_falloff_inverse_distance_clamped</span></td><td><span class="inline"><br>distance = clamp(listener_distance, reference_distance, maximum_distance)<br>gain = reference_distance / (reference_distance + falloff_factor * (distance - reference_distance))</span></td></tr><tr><td><span class="inline">audio_falloff_inverse_distance_scaled</span></td><td><span class="inline"><br>distance = clamp(listener_distance, reference_distance, maximum_distance)<br><br>gain = (reference_distance / (reference_distance + falloff_factor * (distance - reference_distance))) * (((maximum_distance - distance) / (maximum_distance - reference_distance)) ^ (distance / maximum_distance))</span></td></tr><tr><td><span class="inline">audio_falloff_linear_distance</span></td><td><span class="inline"><br>distance = min(distance, maximum_distance)<br>gain = (1 - falloff_factor * (distance - reference_distance) / (maximum_distance - reference_distance))</span></td></tr><tr><td><span class="inline">audio_falloff_linear_distance_clamped</span></td><td><span class="inline"><br>distance = clamp(listener_distance, reference_distance, maximum_distance)<br>gain = (1 - falloff_factor * (distance - reference_distance) / (maximum_distance - reference_distance))</span></td></tr><tr><td><span class="inline">audio_falloff_none</span></td><td><span class="inline"><br>gain = 1</span></td></tr></tbody></table><p>The "<span class="inline">_scaled</span>" models are scaled in such a way that sounds are guaranteed to fall off entirely by the maximum distance.</p><p>The following graphs are visual representations of how some of the above constants work and affect the sound being played:</p><p><img alt="Distance Model Examples" class="center" src="../../../../assets/Images/Scripting_Reference/GML/Reference/Audio/Distance_Models.png"></p><h3>HTML5 Limitations</h3><p>In HTML5 the <span class="inline2">_clamped</span> and <span class="inline2">_scaled</span> variants are unsupported, as Web Audio doesn't support them. If you set the falloff model to one of these constants on HTML5,&nbsp;<span data-keyref="GameMaker Name">GameMaker</span>&nbsp;will internally use the nearest available model as follows:&nbsp;</p><ul class="Disc"><li><span class="inline2">exponent_distance_clamped</span> / <span class="inline2">exponent_distance_scaled</span>&nbsp;maps to <span class="inline2">exponent_distance</span></li><li><span class="inline2">inverse_distance_clamped</span> / <span class="inline2">inverse_distance_scaled</span>&nbsp;maps to <span class="inline2">inverse_distance</span></li><li><span class="inline2">linear_distance_clamped</span>&nbsp;maps to <span class="inline2">linear_distance</span></li></ul><p>This change only happens internally, the falloff model value remains the&nbsp;one that you passed to the function.</p><p>&nbsp;</p><h4>Syntax:</h4><p class="code"><span data-field="title" data-format="default">audio_falloff_set_model</span>(model);</p><table><tbody><tr><th>Argument</th><th>Type</th><th>Description</th></tr><tr><td>model</td><td><span data-keyref="Type_Constant_Audio_Falloff_Type"><a target="_blank" href="audio_falloff_set_model.htm">Audio Falloff Constant</a></span></td><td>The <b>constant</b> used to set the falloff model.</td></tr></tbody></table><p>&nbsp;</p><h4>Returns:</h4><p class="code"><span data-keyref="Type_Void">N/A</span></p><p>&nbsp;</p><h4>Example:</h4><p class="code"><span data-field="title" data-format="default">audio_falloff_set_model</span>(audio_falloff_exponent_distance_clamped);<br>audio_play_sound_at(snd_Waterfall, x, y, 0, 100, 300, 1, true, 1);</p><p>The above code sets the falloff model and then plays the sound indexed in the variable "snd_Waterfall", which will be looped at its room position, with a fall-off reference of 100, a falloff distance of 300, a falloff factor of 1 and a low priority.</p><p>&nbsp;</p><p>&nbsp;</p><div class="footer"><div class="buttons"><div class="clear"><div style="float:left">Back:&nbsp;<a href="Audio.htm">Audio</a></div><div style="float:right">Next:&nbsp;<a href="audio_system_is_available.htm">audio_system_is_available</a></div></div></div><h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2024 All Rights Reserved</span></h5></div></body></html>