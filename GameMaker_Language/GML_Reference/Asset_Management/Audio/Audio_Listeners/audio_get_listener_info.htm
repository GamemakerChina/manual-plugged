<!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml"><head><script type="text/javascript" src="../../../../../assets/import/jquery-3.6.1.min.js"></script><script type="text/javascript" src="../../../../../assets/import/layer/layer.js"></script><script type="text/javascript" src="../../../../../assets/import/pangu.min.js"></script><link rel="stylesheet" type="text/css" href="../../../../../assets/import/layer/layui_btn.css"><link rel="stylesheet" type="text/css" href="../../../../../assets/import/layer/layui_col.css"><link rel="stylesheet" type="text/css" href="../../../../../assets/import/layer/theme/default/layer.css"><link rel="stylesheet" type="text/css" href="../../../../../assets/import/main.css"><script>let str;removeHtml=function(t){return t=(t=(t=(t=t.replace(/(<([^>]+)>)/gi,"{}")).replace(/\r\n/g,"\n")).replace(/\n/g,"")).replace(/ {2,}/g," ")},retHtml=function(t){return t.match(/(<([^>]+)>)/gi)},setTranslator=function(t,e,n){let a;a=n?t.attr(n):t.html();let i=e[removeHtml(a)];if(null!=i&&i.length){e=retHtml(a);let o=0;e&&e.forEach(function(t,e){var n=i.replace("{"+o+"}",t);i=n===i?i.replace("{}",t):n,o++}),n?t.attr(n,i):t.html(i)}},noTranslationState=function(){return"true"==window.localStorage.getItem("noTranslationState")},noTranslationStateToggle=function(){window.localStorage.setItem("noTranslationState",!noTranslationState())},addNoTranslationStateButton=function(){var t=`
		
		<button style="
			float: right;
			font-size: 16px;
			padding: 4px 12px;
		"
		onclick="
		window.location.replace('gmmt://'+document.location.hash)
		"
		>打开编辑器</button>

		<button style="
			float: right;
			font-size: 16px;
			padding: 4px 12px;
		"
		onclick="
		noTranslationStateToggle();
		location.reload();
    	event.stopPropagation();
		"
		>切换翻译</button>
		`;$(".header").length?$(".header").append(t):($(".topic-header").append(t),$(".topic-header button").css("position","relative").css("top","44px"))},removeExtensionFromHash=function(t){return t.replaceAll("#t=","").replaceAll("%2F","/").replaceAll(".htm","")};let json_global,json_file={'"{}index{}" - The unique index value of the listener':'"{}index{}"-监听器的唯一索引值','"{}mask{}" - The bit-mask for the listener':'"{}mask{}"-监听器的位掩码','"{}name{}" - The name of the listener, as a string, with "default" being the standard listener name on most target platforms':'"{}name{}"-监听器的名称，作为字符串，" default "是大多数目标平台上的标准监听器名称',"The DS map&nbsp;will contain the following keys:":"DS映射将包含以下键值：","The above code checks the number of listeners available then loops through them gets their mask bits, which are then combined to create a single bit mask which is applied to the global listener.":"上面的代码检查可用的监听器的数量，然后循环通过它们，得到它们的掩码位，然后组合这些掩码位以创建应用于全局监听器的单个位掩码。","The listener number to get the data for.":"要为其获取数据的监听器编号。",'The mask value can be used to set a sound or emitter to play from multiple listeners at once, simply using the bitwise {}or{} "|" to generate a mask for the sound (see the example code below), while the index is used to set the properties like position or velocity for a given listener using functions like {}{}audio_listener_set_position(){}{}.':'掩码值可用于将声音或发射器设置为一次从多个监听器播放，只需使用按位{}或{}"|"为声音生成掩码(请参阅下面的示例代码)，而索引可用于使用{}{}audio_listener_set_position(){}{}等函数为给定监听器设置位置或速度等属性。',"This function will create a {}DS map{} and populate it with information for the given listener.":"此函数将创建一个{}DS map{}，并用给定监听器的信息填充它。","{}{}NOTE{} {}You are responsible for the destruction of the returned {}DS Map{} using the appropriate function.":"{}{}注意{}{} 您应负责使用适当的函数销毁归还的{} DS 映射{}。"},get_json_global=$.ajax({url:"/global.json",type:"GET",dataType:"json",async:!1,success:function(t){json_global=t}});$(function(){if(addNoTranslationStateButton(),noTranslationState())return!1;$("div.footer a,h4,caption").each(function(){setTranslator($(this),json_global)}),$("p,h1,h2,h3,td,li,a,div.dropspotnote,figcaption").each(function(){setTranslator($(this),json_file)}),$("th,.warning,.important,.optional").each(function(){setTranslator($(this),json_global)}),$(".header").length&&(window.setInterval(function(){$("#toc-panel a:not('isTranslate')").each(function(){$(this).addClass("isTranslate"),setTranslator($(this),json_global)}),$(".GlossDefinitionText:not('isTranslate')").each(function(){$(this).addClass("isTranslate"),setTranslator($(this),json_global)})},250),console.log("成功啦!现在正在疯狂翻译菜单中!")),$(".tooltip").each(function(){setTranslator($(this),json_global,"title")})}),document.addEventListener("DOMContentLoaded",()=>{pangu.autoSpacingPage()})</script><script type="text/javascript" language="JavaScript">function reDo(){innerWidth==origWidth&&innerHeight==origHeight||location.reload()}4==parseInt(navigator.appVersion)&&"Netscape"==navigator.appName&&(origWidth=innerWidth,origHeight=innerHeight,onresize=reDo),onerror=null</script><style type="text/css">p.WebHelpNavBar{text-align:right}</style><script type="text/javascript">gCommonRootRelPath=gRootRelPath="../../../../..",gTopicId="8.2.2.3.5.2.0_9"</script><script type="text/javascript" src="../../../../../template/scripts/rh.min.js"></script><script type="text/javascript" src="../../../../../template/scripts/common.min.js"></script><script type="text/javascript" src="../../../../../template/scripts/topic.min.js"></script><script type="text/javascript" src="../../../../../template/scripts/topicwidgets.min.js"></script><script type="text/javascript" src="../../../../../whxdata/projectsettings.js"></script><link rel="stylesheet" type="text/css" href="../../../../../template/styles/topic.min.css"><link rel="stylesheet" type="text/css" href="../../../../../template/Charcoal_Grey/topicheader.css"><meta name="topic-status" content="Draft"><meta http-equiv="Content-Type" content="text/html; charset=utf-8"><title>audio_get_listener_info</title><meta name="generator" content="Adobe RoboHelp 2022"><link rel="stylesheet" href="../../../../../assets/css/default.css" type="text/css"><script src="../../../../../assets/scripts/main_script.js" type="module"></script><meta name="rh-authors" content="Mark Alexander"><meta name="topic-comment" content="Page explaining the function audio_get_listener_info"><meta name="rh-index-keywords" content="audio_get_listener_info"><meta name="search-keywords" content="audio_get_listener_info"><meta name="is_pure" content="true"><meta name="brsnext" value="GameMaker_Language/GML_Reference/Asset_Management/Audio/Audio_Listeners/audio_get_listener_mask.htm"><meta name="brsprev" value="GameMaker_Language/GML_Reference/Asset_Management/Audio/Audio_Listeners/audio_get_listener_count.htm"></head><body><div class="topic-header rh-hide" id="rh-topic-header"><div class="logo"></div><div class="nav"><div class="title" title="audio_get_listener_info"><span>audio_get_listener_info</span></div><div class="gotohome" title="Click here to see this page in full context"><a href="#" onclick="rh._.goToFullLayout()">Click here to see this page in full context</a></div></div></div><div class="topic-header-shadow rh-hide" id="rh-topic-header-shadow"></div><h1>audio_get_listener_info</h1><p>This function will create a <a href="../../../Data_Structures/DS_Maps/DS_Maps.htm">DS map</a> and populate it with information for the given listener.</p><p class="note"><b><span class="note">NOTE</span></b> You are responsible for the destruction of the returned <span class="inline">DS Map</span> using the appropriate function.</p><p>The DS map&nbsp;will contain the following keys:</p><ul class="colour"><li>"<strong>name</strong>" - The name of the listener, as a string, with "default" being the standard listener name on most target platforms</li><li>"<strong>mask</strong>" - The bit-mask for the listener</li><li>"<strong>index</strong>" - The unique index value of the listener</li></ul><p>The mask value can be used to set a sound or emitter to play from multiple listeners at once, simply using the bitwise <span class="inline">or</span> "|" to generate a mask for the sound (see the example code below), while the index is used to set the properties like position or velocity for a given listener using functions like <a href="audio_listener_set_position.htm"><span class="inline">audio_listener_set_position()</span></a>.</p><p>&nbsp;</p><h4>Syntax:</h4><p class="code">audio_get_listener_info(num);</p><table><tbody><tr><th>Argument</th><th>Type</th><th>Description</th></tr><tr><td>num</td><td><span data-keyref="Type_Real"><a target="_blank" href="../../../../GML_Overview/Data_Types.htm">Real</a></span>&nbsp;or&nbsp;<span data-keyref="Type_ID_Audio_Listener"><a target="_blank" href="Audio_Listeners.htm">Audio Listener ID</a></span></td><td>The listener number to get the data for.</td></tr></tbody></table><p>&nbsp;</p><h4>Returns:</h4><p class="code"><span data-keyref="Type_ID_DS_Map"><a target="_blank" href="../../../Data_Structures/DS_Maps/ds_map_create.htm">DS Map</a></span></p><p>&nbsp;</p><h4>Example:</h4><p class="code">var num = audio_get_listener_count();<br>var mask = 0; for(var i = 0; i &lt; num; ++i;)<br>{<br>&nbsp; &nbsp; var info = audio_get_listener_info(i);<br>&nbsp; &nbsp; var m = audio_listener_get_data(info[? "mask"]);<br>&nbsp; &nbsp; mask = mask | m;<br>&nbsp; &nbsp;&nbsp;ds_map_destroy(info);<br>}<br>audio_set_listener_mask(mask);</p><p>The above code checks the number of listeners available then loops through them gets their mask bits, which are then combined to create a single bit mask which is applied to the global listener.</p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><div class="footer"><div class="buttons"><div class="clear"><div style="float:left">Back: <a href="Audio_Listeners.htm">Audio Listeners</a></div><div style="float:right">Next: <a href="audio_get_listener_mask.htm">audio_get_listener_mask</a></div></div></div><h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2024 All Rights Reserved</span></h5></div></body></html>