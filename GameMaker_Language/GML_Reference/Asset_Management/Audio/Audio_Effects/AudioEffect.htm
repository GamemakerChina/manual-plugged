<!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml"><head><script type="text/javascript" src="../../../../../assets/import/jquery-3.6.1.min.js"></script><script type="text/javascript" src="../../../../../assets/import/layer/layer.js"></script><script type="text/javascript" src="../../../../../assets/import/pangu.min.js"></script><link rel="stylesheet" type="text/css" href="../../../../../assets/import/layer/layui_btn.css"><link rel="stylesheet" type="text/css" href="../../../../../assets/import/layer/layui_col.css"><link rel="stylesheet" type="text/css" href="../../../../../assets/import/layer/theme/default/layer.css"><link rel="stylesheet" type="text/css" href="../../../../../assets/import/main.css"><script>let str;removeHtml=function(e){return e=(e=(e=(e=e.replace(/(<([^>]+)>)/gi,"{}")).replace(/\r\n/g,"\n")).replace(/\n/g,"")).replace(/ {2,}/g," ")},retHtml=function(e){return e.match(/(<([^>]+)>)/gi)},setTranslator=function(e,t,o){let i;i=o?e.attr(o):e.html();let n=t[removeHtml(i)];if(null!=n&&n.length){t=retHtml(i);let a=0;t&&t.forEach(function(e,t){var o=n.replace("{"+a+"}",e);n=o===n?n.replace("{}",e):o,a++}),o?e.attr(o,n):e.html(n)}},noTranslationState=function(){return"true"==window.localStorage.getItem("noTranslationState")},noTranslationStateToggle=function(){window.localStorage.setItem("noTranslationState",!noTranslationState())},addNoTranslationStateButton=function(){var e=`
		
		<button style="
			float: right;
			font-size: 16px;
			padding: 4px 12px;
		"
		onclick="
		window.location.replace('gmmt://'+document.location.hash)
		"
		>打开编辑器</button>

		<button style="
			float: right;
			font-size: 16px;
			padding: 4px 12px;
		"
		onclick="
		noTranslationStateToggle();
		location.reload();
    	event.stopPropagation();
		"
		>切换翻译</button>
		`;$(".header").length?$(".header").append(e):($(".topic-header").append(e),$(".topic-header button").css("position","relative").css("top","44px"))},removeExtensionFromHash=function(e){return e.replaceAll("#t=","").replaceAll("%2F","/").replaceAll(".htm","")};let json_global,json_file={"A filter of type {}AudioEffectType.HiShelf{}.":"{}AudioEffectType.HiShelf{}类型的过滤器。","A filter of type {}AudioEffectType.LPF2{}.":"{}AudioEffectType.LPF2{}类型的过滤器。","A filter of type {}AudioEffectType.LoShelf{}.":"{}AudioEffectType.LoShelf{}类型的过滤器。","A filter of type {}AudioEffectType.PeakEQ{}.":"{}AudioEffectType.PeakEQ{}类型的过滤器。","A filter of type&nbsp;{}AudioEffectType.HPF2{}.":"{}AudioEffectType.HPF2{}类型的过滤器。","A {}read-only{} property that stores the type of audio effect stored in this struct. It is set to&nbsp;{}AudioEffectType.Bitcrusher{}&nbsp;for Distortion.":"一个{}只读{}属性，用于存储本结构中的音频效果类型。 它被设置为&nbsp;{}AudioEffectType.Bitcrusher{}&nbsp;的失真","A {}read-only{} property that stores the type of audio effect stored in this struct. It is set to&nbsp;{}AudioEffectType.Compressor{}&nbsp;for a Compressor effect.":"一个{}只读{}属性，用于存储此结构中存储的音频效果的类型。它设置为{}AudioEffectType.Compressor{}以实现压缩器效果。","A {}read-only{} property that stores the type of audio effect stored in this struct. It is set to&nbsp;{}AudioEffectType.Delay{}&nbsp;for Delay.":"一个{}只读{}属性，用于存储本结构中的音频效果类型。 它被设置为&nbsp;{}AudioEffectType.Delay{}&nbsp;用于延迟","A {}read-only{} property that stores the type of audio effect stored in this struct. It is set to&nbsp;{}AudioEffectType.EQ{}&nbsp;for EQ.":"一个{}只读{}属性，用于存储此结构中存储的音频效果的类型。对于 EQ，它设置为{}AudioEffectType.EQ{}。","A {}read-only{} property that stores the type of audio effect stored in this struct. It is set to&nbsp;{}AudioEffectType.Gain{}&nbsp;for Gain.":"一个{}只读{}属性，用于存储本结构中的音频效果类型。 它被设置为&nbsp;{}AudioEffectType.Gain{}&nbsp;的Gain。","A {}read-only{} property that stores the type of audio effect stored in this struct. It is set to&nbsp;{}AudioEffectType.HPF2{}&nbsp;for HPF.":"一个{}只读{}属性，用于存储本结构中的音频效果类型。 它被设置为&nbsp;{}AudioEffectType.HPF2{}&nbsp;用于HPF。","A {}read-only{} property that stores the type of audio effect stored in this struct. It is set to&nbsp;{}AudioEffectType.HiShelf{}&nbsp;for the&nbsp;HiShelf&nbsp;Filter.":"一个{}只读{}属性，用于存储此结构中存储的音频效果的类型。对于 HiShelf 过滤器，它设置为{}AudioEffectType.HiShelf{}。","A {}read-only{} property that stores the type of audio effect stored in this struct. It is set to&nbsp;{}AudioEffectType.LPF2{}&nbsp;for LPF.":"一个{}只读{}属性，用于存储本结构中的音频效果类型。 它被设置为&nbsp;{}AudioEffectType.LPF2{}&nbsp;用于LPF。","A {}read-only{} property that stores the type of audio effect stored in this struct. It is set to&nbsp;{}AudioEffectType.LoShelf{}&nbsp;for the&nbsp;LoShelf&nbsp;Filter.":"一个{}只读{}属性，用于存储此结构中存储的音频效果的类型。对于 LoShelf 过滤器，它设置为{}AudioEffectType.LoShelf{}。","A {}read-only{} property that stores the type of audio effect stored in this struct. It is set to&nbsp;{}AudioEffectType.PeakEQ{}&nbsp;for the Peak EQ Filter.":"一个{}只读{}属性，用于存储此结构中存储的音频效果的类型。对于 Peak EQ Filter，它设置为{}AudioEffectType.PeakEQ{}。","A {}read-only{} property that stores the type of audio effect stored in this struct. It is set to&nbsp;{}AudioEffectType.Reverb1{}&nbsp;for Reverb.":"一个{}只读{}属性，用于存储本结构中的音频效果类型。 它被设置为&nbsp;{}AudioEffectType.Reverb1{}&nbsp;用于混响。","A {}read-only{} property that stores the type of audio effect stored in this struct. It is set to&nbsp;{}AudioEffectType.Tremolo{}&nbsp;for Tremolo.":"存储此结构中存储的音频效果类型的{}只读{}属性。对于颤音，它设置为 {}AudioEffectType.Tremolo{} 。","All structs of this type have a {}type{} and {}bypass{} property. All other properties are specific to certain types of effects.":"这种类型的所有结构都有一个{}type{}和{}bypass{}属性。 所有其他属性都是特定于某些类型的效果。","An AudioEffect struct stores the parameters used by an audio effect. You can change these values to adjust the effect in real-time.":"AudioEffect 结构存储音频效果使用的参数。您可以更改这些值以实时调整效果。","Below is a list of struct members depending on the type of effect created.":"下面是一个结构成员的列表，取决于创建的效果类型。","Delay ({}AudioEffectType.Delay{})":"延迟 ({}AudioEffectType.Delay{})","Distortion ({}AudioEffectType.Bitcrusher{})":"失真 ({}AudioEffectType.Bitcrusher{})","Gain ({}AudioEffectType.Gain{})":"增益 ({}AudioEffectType.Gain{})","HPF ({}AudioEffectType.HPF2{})":"高通滤波器 ({}AudioEffectType.HPF2{})","LPF ({}AudioEffectType.LPF2{})":"低通滤波器({}AudioEffectType.LPF2{})","Reverb ({}AudioEffectType.Reverb1{})":"混响({}AudioEffectType.Reverb1{})","The amount that higher frequencies should be attenuated [range: 0.0 - 1.0].":"较高频率应衰减的量 [范围：0.0 - 1.0]。","The amplitude level above which the compressor will begin to apply gain reduction [range: 0.001 - 1].":"幅度级别，高于该级别压缩器将开始应用增益降低 [范围：0.001 - 1]。","The bit depth at which the signal is&nbsp;resampled [range: 1.0 - 16.0].{} {} This is rounded down to an integer. ":"信号重新采样的位深度 [范围：1.0 - 16.0]。{}{}该值向下舍入为整数。","The cutoff frequency of the filter. Frequencies higher than the cutoff will be attenuated.":"滤波器的截止频率。高于截止频率的频率将被衰减。","The cutoff frequency of the filter. Frequencies lower than the cutoff will be attenuated.":"滤波器的截止频率。低于截止频率的频率将被衰减。","The factor by which the original signal is&nbsp;downsampled [range: 0.0 - 100.0].{} {} This is rounded down to an integer. ":"原始信号下采样的因子 [范围：0.0 - 100.0]。{}{}该因子向下舍入为整数。","The frequency (in Hz) of the filter [range: 10 - 20,000]*. This represents the centre frequency of the peak.{} {} {}{}NOTE{}{}&nbsp;*The upper limit is either 20,000 or half of the audio device's sample rate, whichever is lower. ":"滤波器的频率(以 Hz 为单位)[范围：10 - 20,000]*。这表示峰值的中心频率。{}{}{}{}注意{}{}*上限为 20,000 或音频设备采样率的一半，以较低者为准。","The frequency (in Hz) of the filter [range: 10 - 20,000]*. This represents the midpoint of the shelf's slope.{} {} Frequencies higher than this value will have a constant gain applied.{} {} {}{}NOTE{}{}&nbsp;*The upper limit is either 20,000 or half of the audio device's sample rate, whichever is lower. ":"滤波器的频率(以 Hz 为单位)[范围：10 - 20,000]*。这表示架子坡度的中点。{}{}高于此值的频率将应用恒定增益。{}{}{}{}注意{}{}*上限为 20,000 或音频的一半设备的采样率，以较低者为准。","The frequency (in Hz) of the filter [range: 10 - 20,000]*. This represents the midpoint of the shelf's slope.{} {} Frequencies lower than this value will have a constant gain applied.{} {} {}{}NOTE{}{}&nbsp;*The upper limit is either 20,000 or half of the audio device's sample rate, whichever is lower. ":"滤波器的频率(以 Hz 为单位)[范围：10 - 20,000]*。这表示架子坡度的中点。{}{}低于此值的频率将应用恒定增益。{}{}{}{}注意{}{}*上限为 20,000 或音频的一半设备的采样率，以较低者为准。","The frequency of the LFO modulating the gain (0.0-20.0 Hz)":"调制增益的 LFO 的频率 (0.0-20.0 赫兹)","The gain scalar applied to the input signal [range: 0 - inf]. This allows audio to be pushed into the compression threshold.":"应用于输入信号的增益标量 [范围：0 - inf]。这允许将音频推入压缩阈值。","The gain scalar applied to the output signal [range: 0 - inf]. This allows compensating for the overall level reduction caused by the compression process.":"应用于输出信号的增益标量 [范围：0 - inf]。这允许补偿由压缩过程引起的整体电平降低。","The gain value applied to the input signal.":"应用于输入信号的增益值。","The input gain going into the effect.&nbsp;There is a hard clipper (clipping at {}±{}1.0) directly after this stage.":"输入增益进入效果。此阶段之后直接有一个硬限幅器(限幅为{}±{}1.0)。","The length of the delay (in seconds).":"延迟的长度(以秒为单位)。","The linear gain applied to frequencies in the shelf [range 0.0 - inf]. A gain lower than 1 represents a decrease in volume.":"应用于架子中频率的线性增益[范围 0.0 - inf]。增益低于 1 表示音量减小。","The linear gain applied to the centre frequency [range: 0.0 - inf]. Frequencies around the centre frequency will also have a gain applied, which reduces depending on the quality factor and distance from the centre frequency. A gain lower than 1 represents a decrease in volume.":"应用于中心频率的线性增益[范围：0.0 - inf]。中心频率周围的频率也会应用增益，该增益会根据品质因数和距中心频率的距离而降低。增益低于 1 表示音量减小。","The proportion of a waveform's period that the right-hand channel's LFO should be offset by compared to the left-hand channel (0.0-1.0) At a value of 0.0 and 1.0 the left-hand and right-hand channel's LFO waveforms coincide (because the shape is periodic, i.e. repeats)":"应由 LFO 调制的输入信号的比例 (0.0-1.0)。换句话说，受 LFO 影响的是信号 / 样本的幅度的比例 (或分数)。","The proportion of the delayed signal which is fed back into the delay line [range: 0.0 - 1.0].":"反馈到延迟线的延迟信号的比例[范围：0.0 - 1.0]。","The proportion of the input signal which should be modulated by the LFO (0.0-1.0). Put differently, it is the proportion (or fraction) of the signal's/sample's amplitude that is affected by the LFO.":"应由 LFO 调制的输入信号的比例 (0.0-1.0)。换句话说，受 LFO 影响的是信号 / 样本的幅度的比例 (或分数)。","The proportion of the original/delayed signal in the output [range: 0.0 - 1.0].{} {} A value of 0.0 gives 100% of the original signal, a value of 1.0 gives 100% the delayed signal. A value of 0.5 results in 50% of the original and 50% of the delayed signal. ":"输出中原始/延迟信号的比例[范围：0.0 - 1.0]。{}{}值 0.0 表示 100% 的原始信号，值 1.0 表示 100% 的延迟信号。值为 0.5 会产生 50% 的原始信号和 50% 的延迟信号。","The proportion of the original/distorted signal in the output [range: 0.0 - 1.0].{} {} A value of 0.0 gives 100% of the original signal, a value of 1.0 gives 100% the distorted signal. A value of 0.5 results in 50% of the original and 50% of the distorted signal. ":"输出中原始/失真信号的比例[范围：0.0 - 1.0]。{}{}值 0.0 表示 100% 的原始信号，值 1.0 表示 100% 的失真信号。值为 0.5 会产生 50% 的原始信号和 50% 的失真信号。","The proportion of the original/reverberated signal in the output [range: 0.0 - 1.0].{} {} A value of 0.0 gives 100% of the original signal, a value of 1.0 gives 100% of the reverberated signal. A value of 0.5 results in 50% of the original and 50% of the reverberated signal. ":"输出中原始/混响信号的比例[范围：0.0 - 1.0]。{}{}值 0.0 表示 100% 的原始信号，值 1.0 表示 100% 的混响信号。值为 0.5 会产生 50% 的原始信号和 50% 的混响信号。","The quality factor of the filter [range: 1.0 - 100.0]. This is a dimensionless parameter which increases the steepness of the filter's slope, at the cost of some resonance at frequencies around the top of the shelf's slope. The greater the value, the steeper the slope, and the greater the resonance.":"滤波器的品质因数[范围：1.0 - 100.0]。这是一个无量纲参数，它增加了滤波器斜率的陡度，但代价是在架子斜率顶部周围的频率处产生一些共振。值越大，斜率越陡，共振越大。","The quality factor of the filter [range: 1.0 - 100.0]. This is a dimensionless parameter which narrows the peak created, so that a smaller range of frequencies around the centre frequency are affected. The greater the value, the narrower the peak.":"滤波器的品质因数[范围：1.0 - 100.0]。这是一个无量纲参数，可缩小所创建的峰值，从而影响中心频率周围较小范围的频率。值越大，峰越窄。","The quality factor of the filter [range: 1.0 - 100.0]. {}This is a dimensionless parameter which increases the steepness of the filter's slope, at the cost of some resonance at frequencies around the top of the shelf's slope. The greater the value, the steeper the slope, and the greater the resonance.{}":"滤波器的品质因数[范围：1.0 - 100.0]。{}这是一个无量纲参数，它会增加滤波器斜率的陡度，但代价是在架子斜率顶部附近的频率处产生一些共振。值越大，斜率越陡，共振越大。{}","The quality factor of the filter [range: 1.0 - 100.0].{} {} This is a dimensionless parameter which indicates how peaked (in gain) the frequency is around the cutoff. The greater the value, the greater the peak. ":"滤波器的质量系数 [范围: 1.0 - 100.0].{} {} 这是一个无尺寸的参数，表示频率在截止点附近的峰值(增益)程度。 数值越大，峰值越大。 ","The ratio by which audio that exceeds the threshold is reduced [range: 1 - inf]. The compression ratio applied is {}ratio : 1{}.":"超过阈值的音频被减少的比率 [范围：1 - inf]。应用的压缩比为{}ratio : 1{}。","The responsiveness (in seconds) of the compressor in compressing audio above the threshold [range: 0.001 - 0.1].":"压缩器在压缩高于阈值的音频时的响应能力(以秒为单位)[范围：0.001 - 0.1]。","The responsiveness (in seconds) of the compressor in stopping compressing audio below the threshold [range: 0.01 - 1].":"压缩器停止压缩低于阈值的音频的响应能力(以秒为单位)[范围：0.01 - 1]。","The size of the space [range: 0.0 - 1.0].{} {} Larger sizes mean more reflections and a longer reverberation. ":"空间的大小[范围:0.0 - 1.0]{} {} 较大的尺寸意味着更多的反射和更长的混响。 ","The waveform shape that the LFO should output.":"LFO 应输出的波形形状。","This struct must be created using the {}{}audio_effect_create{}{}&nbsp;function. The parameters that are available in the struct depend on the type of audio effect that you pass to the function (see&nbsp;{}{}AudioEffectType Enum{}{}).":"这个结构必须用{}{}audio_effect_create{}{}&nbsp;函数创建。该结构中可用的参数取决于你传递给该函数的音频效果类型(见&nbsp;{}{}AudioEffectType Enum{}{})","Tremolo ({}AudioEffectType.Tremolo{})":"颤音 ({}AudioEffectType.Tremolo{})","Whether the effect should be bypassed (ignored).":"是否应绕过(忽略)效果。","{}The amount that higher frequencies should be attenuated [range: 0.0 - 1.0].{}":"{}较高频率应被衰减的量 [范围: 0.0 - 1.0].{}","{}The bit depth at which {}the signal is&nbsp;{}resampled [range: 1.0 - 16.0].{} {} {}This is rounded down to an integer.{}{}":"{}{}信号{}被重采样的比特深度 [范围: 1.0 - 16.0].{} {} {}这被四舍五入为一个整数{}{}","{}The cutoff frequency of the filter. Frequencies higher than the cutoff will be attenuated.{}":"{}滤波器的截止频率。 高于截止点的频率将被衰减。{}","{}The factor by which {}the original signal is&nbsp;{}downsampled [range: 0.0 - 100.0].{} {} {}This is rounded down to an integer.{}{}":"{}{}原始信号{}被降采样的系数 [range: 0.0 - 100.0].{} {} {}这被四舍五入为一个整数。{}{}","{}The gain value applied to the input signal.{}":"{}应用于输入信号的增益值{}","{}The input gain going into the effect.{}":"{}进入效果器的输入增益{}","{}The length of the delay (in seconds).{}":"{}延迟的长度(以秒为单位){}","{}The proportion of the delayed signal which is fed back into the delay line [range: 0.0 - 1.0].{}":"{}被延迟的信号反馈到延迟线的比例[范围: 0.0 - 1.0]{}","{}The proportion of the original/delayed signal in the output [range: 0.0 - 1.0].{} {} {}A value of 0.0 gives 100% of the original signal, a value of 1.0 gives 100% the delayed signal. A value of 0.5 results in 50% of the original and 50% of the {}{}delayed{}{} signal.{}{}":"{}原始/延时信号在输出中的比例 [范围: 0.0 - 1.0]{} {} {}值为0.0时给出100%的原始信号，值为1.0时给出100%的延迟信号。 值为0.5时，会出现50%的原始信号和50%的{}{}延迟{}{}信号。","{}The proportion of the original/distorted signal in the output [range: 0.0 - 1.0].{} {} {}{}A value of 0.0 gives 100% of the original signal, a value of 1.0 gives 100% the {}distorted{} signal. A value of 0.5 results in 50% of the original and 50% of the {}{}{}distorted{}{}{} signal.{}{}{}":"{}原始/失真信号在输出中的比例 [range: 0.0 - 1.0].{} {} {}{}0.0的值给出100%的原始信号，1.0的值给出100%的{}失真{}信号。0.5的值会导致50%的原始信号和50%的{}{}{}失真{}{}{}的信号{}{}{}","{}The proportion of the original/reverberated signal in the output [range: 0.0 - 1.0].{} {} A value of 0.0 gives 100% of the original signal, a value of 1.0 gives 100% of the reverberated signal. A value of 0.5 results in 50% of the original and 50% of the reverberated signal.{}":"{}输出中原始/混响信号的比例 [范围: 0.0 - 1.0].{} {} 0.0的值可以得到100%的原始信号。值为1.0时，给出100%的混响信号。 一个0.5的值导致50%的原始信号和50%的混响信号。{}","{}Whether the effect should be bypassed (ignored).{}":"{}效果是否应该被绕过(忽略){}","{}Whether the effect should be bypassed{} (ignored){}.{}":"{}效果是否应该被绕过{}(忽略){}{}","{}{}NOTE{}{}&nbsp;All gain parameters are {}linear{} gains and range from 0 to infinity; values from 0 to 1 indicate a decrease in gain, values from 1 to infinity&nbsp;an increase. They can be converted to dB and back using&nbsp;{}{}lin_to_db{}{}&nbsp;and&nbsp;{}{}db_to_lin{}{}.":"{}{}注意{}{}所有增益参数都是{}线性{}增益，范围从 0 到无穷大;从 0 到 1 的值表示增益减少，从 1 到无穷大的值表示增益增加。可以使用{}{}lin_to_db{}{}和{}{}db_to_lin{}{}将它们相互转换为 dB。","{}{}NOTE{}{}&nbsp;This is a built-in struct, and as such {}GameMaker{} has more control over its contents. This means access to its members is limited and some values may change automatically if invalid values were assigned. You may also have to create and destroy this struct through built-in functions provided by&nbsp;{}GameMaker{} instead of the {}{}new{}{}&nbsp;and {}{}delete{}{} operators.":"{}{}NOTE{}{}&nbsp;这是一个内置结构，因此{}GameMaker{}对其内容有更多控制。 这意味着对其成员的访问是有限的，如果分配了无效的值，一些值可能会自动改变。 你可能还需要通过&nbsp;{}GameMaker{}提供的内置函数来创建和销毁这个结构，而不是通过{}{}new{}{}&nbsp;和{}{}delete{}{}操作符。","{}{}NOTE{}{}&nbsp;This is a built-in struct, and as such {}GameMaker{} has more control over its contents. This means it may contain some additional, inaccessible variables created by GameMaker, and some values may change automatically if invalid values were assigned.":"{}{}注意{}{}这是一个内置结构，因此{}GameMaker{}可以更好地控制其内容。这意味着它可能包含一些由 GameMaker 创建的额外的、无法访问的变量，并且如果分配了无效值，某些值可能会自动更改。"},get_json_global=$.ajax({url:"/global.json",type:"GET",dataType:"json",async:!1,success:function(e){json_global=e}});$(function(){if(addNoTranslationStateButton(),noTranslationState())return!1;$("div.footer a,h4,caption").each(function(){setTranslator($(this),json_global)}),$("p,h1,h2,h3,td,li,a,div.dropspotnote,figcaption").each(function(){setTranslator($(this),json_file)}),$("th,.warning,.important,.optional").each(function(){setTranslator($(this),json_global)}),$(".header").length&&(window.setInterval(function(){$("#toc-panel a:not('isTranslate')").each(function(){$(this).addClass("isTranslate"),setTranslator($(this),json_global)}),$(".GlossDefinitionText:not('isTranslate')").each(function(){$(this).addClass("isTranslate"),setTranslator($(this),json_global)})},250),console.log("成功啦!现在正在疯狂翻译菜单中!")),$(".tooltip").each(function(){setTranslator($(this),json_global,"title")})}),document.addEventListener("DOMContentLoaded",()=>{pangu.autoSpacingPage()})</script><script type="text/javascript" language="JavaScript">function reDo(){innerWidth==origWidth&&innerHeight==origHeight||location.reload()}4==parseInt(navigator.appVersion)&&"Netscape"==navigator.appName&&(origWidth=innerWidth,origHeight=innerHeight,onresize=reDo),onerror=null</script><style type="text/css">p.WebHelpNavBar{text-align:right}</style><script type="text/javascript">gCommonRootRelPath=gRootRelPath="../../../../..",gTopicId="8.2.2.3.5.3.0_7"</script><script type="text/javascript" src="../../../../../template/scripts/rh.min.js"></script><script type="text/javascript" src="../../../../../template/scripts/common.min.js"></script><script type="text/javascript" src="../../../../../template/scripts/topic.min.js"></script><script type="text/javascript" src="../../../../../template/scripts/topicwidgets.min.js"></script><script type="text/javascript" src="../../../../../whxdata/projectsettings.js"></script><link rel="stylesheet" type="text/css" href="../../../../../template/styles/topic.min.css"><link rel="stylesheet" type="text/css" href="../../../../../template/Charcoal_Grey/topicheader.css"><meta name="topic-status" content="Draft"><meta http-equiv="Content-Type" content="text/html; charset=utf-8"><title>AudioEffect Struct</title><meta name="generator" content="Adobe RoboHelp 2022"><link rel="stylesheet" href="../../../../../assets/css/default.css" type="text/css"><script src="../../../../../assets/scripts/main_script.js" type="module"></script><meta name="rh-authors" content="Bart Teunis"><meta name="topic-comment" content="Reference page for the AudioEffect struct"><meta name="rh-index-keywords" content="AudioEffect"><meta name="search-keywords" content="AudioEffect"><meta name="template" content="assets/masterpages/Manual_Page.htt"><meta name="condition-tags" content=""><meta name="brsnext" value="GameMaker_Language/GML_Reference/Asset_Management/Audio/Audio_Effects/AudioEffectType.htm"><meta name="brsprev" value="GameMaker_Language/GML_Reference/Asset_Management/Audio/Audio_Effects/AudioBus.htm"></head><body><div class="topic-header rh-hide" id="rh-topic-header"><div class="logo"></div><div class="nav"><div class="title" title="AudioEffect Struct"><span>AudioEffect Struct</span></div><div class="gotohome" title="Click here to see this page in full context"><a href="#" onclick="rh._.goToFullLayout()">Click here to see this page in full context</a></div></div></div><div class="topic-header-shadow rh-hide" id="rh-topic-header-shadow"></div><h1><span data-field="title" data-format="default">AudioEffect Struct</span></h1><p>An AudioEffect struct stores the parameters used by an audio effect. You can change these values to adjust the effect in real-time.</p><p>This struct must be created using the <span class="inline3_func"><a href="audio_effect_create.htm">audio_effect_create</a></span>&nbsp;function. The parameters that are available in the struct depend on the type of audio effect that you pass to the function (see&nbsp;<span class="inline2"><a href="AudioEffectType.htm">AudioEffectType Enum</a></span>).</p><div data-conref="../../../../../assets/snippets/Note_GM_Managed_Structs.hts"><p class="note"><span data-conref="../../../../../assets/snippets/Tag_note.hts"><span class="note">NOTE</span></span>&nbsp;This is a built-in struct, and as such <span data-keyref="GameMaker Name">GameMaker</span> has more control over its contents. This means it may contain some additional, inaccessible variables created by GameMaker, and some values may change automatically if invalid values were assigned.</p></div><p class="note"><span data-conref="../../../../../assets/snippets/Tag_note.hts"><span class="note">NOTE</span></span>&nbsp;All gain parameters are <em>linear</em> gains and range from 0 to infinity; values from 0 to 1 indicate a decrease in gain, values from 1 to infinity&nbsp;an increase. They can be converted to dB and back using&nbsp;<span class="inline3_func"><a href="../lin_to_db.htm">lin_to_db</a></span>&nbsp;and&nbsp;<span class="inline3_func"><a href="../db_to_lin.htm">db_to_lin</a></span>.</p><p>All structs of this type have a <span class="inline2">type</span> and <span class="inline2">bypass</span> property. All other properties are specific to certain types of effects.</p><p>Below is a list of struct members depending on the type of effect created.</p><h2 id="reverb">Reverb (<a href="AudioEffectType.htm#h">AudioEffectType.Reverb1</a>)</h2><table><colgroup><col style="width:33.33%"><col style="width:33.33%"><col style="width:33.33%"></colgroup><tbody><tr><th>Variable</th><th>Type</th><th>Description</th></tr><tr><td>type</td><td><a href="AudioEffectType.htm">AudioEffectType Enum</a></td><td>A <i>read-only</i> property that stores the type of audio effect stored in this struct. It is set to&nbsp;<a href="AudioEffectType.htm#h">AudioEffectType.Reverb1</a>&nbsp;for Reverb.</td></tr><tr><td>bypass</td><td><span data-keyref="Type_Bool"><a target="_blank" href="../../../../GML_Overview/Data_Types.htm">Boolean</a></span></td><td>Whether the effect should be bypassed (ignored).</td></tr><tr><td>size</td><td><span data-keyref="Type_Real"><a target="_blank" href="../../../../GML_Overview/Data_Types.htm">Real</a></span></td><td>The size of the space [range: 0.0 - 1.0].<br><br>Larger sizes mean more reflections and a longer reverberation.</td></tr><tr><td>damp</td><td><span data-keyref="Type_Real"><a target="_blank" href="../../../../GML_Overview/Data_Types.htm">Real</a></span></td><td>The amount that higher frequencies should be attenuated [range: 0.0 - 1.0].</td></tr><tr><td>mix</td><td><span data-keyref="Type_Real"><a target="_blank" href="../../../../GML_Overview/Data_Types.htm">Real</a></span></td><td>The proportion of the original/reverberated signal in the output [range: 0.0 - 1.0].<br><br>A value of 0.0 gives 100% of the original signal, a value of 1.0 gives 100% of the reverberated signal. A value of 0.5 results in 50% of the original and 50% of the reverberated signal.</td></tr></tbody></table><h2 id="delay">Delay (<a href="AudioEffectType.htm#h1">AudioEffectType.Delay</a>)</h2><table><colgroup><col style="width:33.33%"><col style="width:33.33%"><col style="width:33.33%"></colgroup><tbody><tr><th>Variable</th><th>Type</th><th>Description</th></tr><tr><td>type</td><td><a href="AudioEffectType.htm">AudioEffectType Enum</a></td><td>A <i>read-only</i> property that stores the type of audio effect stored in this struct. It is set to&nbsp;<a href="AudioEffectType.htm#h1">AudioEffectType.Delay</a>&nbsp;for Delay.</td></tr><tr><td>bypass</td><td><span data-keyref="Type_Bool"><a target="_blank" href="../../../../GML_Overview/Data_Types.htm">Boolean</a></span></td><td>Whether the effect should be bypassed (ignored).</td></tr><tr><td>time</td><td><span data-keyref="Type_Real"><a target="_blank" href="../../../../GML_Overview/Data_Types.htm">Real</a></span></td><td>The length of the delay (in seconds).</td></tr><tr><td>feedback</td><td><span data-keyref="Type_Real"><a target="_blank" href="../../../../GML_Overview/Data_Types.htm">Real</a></span></td><td>The proportion of the delayed signal which is fed back into the delay line [range: 0.0 - 1.0].</td></tr><tr><td>mix</td><td><span data-keyref="Type_Real"><a target="_blank" href="../../../../GML_Overview/Data_Types.htm">Real</a></span></td><td>The proportion of the original/delayed signal in the output [range: 0.0 - 1.0].<br><br>A value of 0.0 gives 100% of the original signal, a value of 1.0 gives 100% the delayed signal. A value of 0.5 results in 50% of the original and 50% of the delayed signal.</td></tr></tbody></table><h2 id="distortion">Distortion (<a href="AudioEffectType.htm#h2">AudioEffectType.Bitcrusher</a>)</h2><table><colgroup><col style="width:33.33%"><col style="width:33.33%"><col style="width:33.33%"></colgroup><tbody><tr><th>Variable</th><th>Type</th><th>Description</th></tr><tr><td>type</td><td><a href="AudioEffectType.htm">AudioEffectType Enum</a></td><td>A <i>read-only</i> property that stores the type of audio effect stored in this struct. It is set to&nbsp;<a href="AudioEffectType.htm#h2">AudioEffectType.Bitcrusher</a>&nbsp;for Distortion.</td></tr><tr><td>bypass</td><td><span data-keyref="Type_Bool"><a target="_blank" href="../../../../GML_Overview/Data_Types.htm">Boolean</a></span></td><td>Whether the effect should be bypassed (ignored).</td></tr><tr><td>gain</td><td><span data-keyref="Type_Real"><a target="_blank" href="../../../../GML_Overview/Data_Types.htm">Real</a></span></td><td>The input gain going into the effect.&nbsp;There is a hard clipper (clipping at <span>±</span>1.0) directly after this stage.</td></tr><tr><td>factor</td><td><span data-keyref="Type_Real"><a target="_blank" href="../../../../GML_Overview/Data_Types.htm">Real</a></span></td><td>The factor by which the original signal is&nbsp;downsampled [range: 0.0 - 100.0].<br><br>This is rounded down to an integer.</td></tr><tr><td>resolution</td><td><span data-keyref="Type_Real"><a target="_blank" href="../../../../GML_Overview/Data_Types.htm">Real</a></span></td><td>The bit depth at which the signal is&nbsp;resampled [range: 1.0 - 16.0].<br><br>This is rounded down to an integer.</td></tr><tr><td>mix</td><td><span data-keyref="Type_Real"><a target="_blank" href="../../../../GML_Overview/Data_Types.htm">Real</a></span></td><td>The proportion of the original/distorted signal in the output [range: 0.0 - 1.0].<br><br>A value of 0.0 gives 100% of the original signal, a value of 1.0 gives 100% the distorted signal. A value of 0.5 results in 50% of the original and 50% of the distorted signal.</td></tr></tbody></table><h2 id="lpf">LPF (<a href="AudioEffectType.htm#h3">AudioEffectType.LPF2</a>)</h2><table><colgroup><col style="width:33.33%"><col style="width:33.33%"><col style="width:33.33%"></colgroup><tbody><tr><th>Variable</th><th>Type</th><th>Description</th></tr><tr><td>type</td><td><a href="AudioEffectType.htm">AudioEffectType Enum</a></td><td>A <i>read-only</i> property that stores the type of audio effect stored in this struct. It is set to&nbsp;<a href="AudioEffectType.htm#h3">AudioEffectType.LPF2</a>&nbsp;for LPF.</td></tr><tr><td>bypass</td><td><span data-keyref="Type_Bool"><a target="_blank" href="../../../../GML_Overview/Data_Types.htm">Boolean</a></span></td><td>Whether the effect should be bypassed (ignored).</td></tr><tr><td>cutoff</td><td><span data-keyref="Type_Real"><a target="_blank" href="../../../../GML_Overview/Data_Types.htm">Real</a></span></td><td>The cutoff frequency of the filter. Frequencies higher than the cutoff will be attenuated.</td></tr><tr><td>q</td><td><span data-keyref="Type_Real"><a target="_blank" href="../../../../GML_Overview/Data_Types.htm">Real</a></span></td><td>The quality factor of the filter [range: 1.0 - 100.0].<br><br>This is a dimensionless parameter which indicates how peaked (in gain) the frequency is around the cutoff. The greater the value, the greater the peak.</td></tr></tbody></table><h2 id="hpf">HPF (<a href="AudioEffectType.htm#h4">AudioEffectType.HPF2</a>)</h2><table><colgroup><col style="width:33.33%"><col style="width:33.33%"><col style="width:33.33%"></colgroup><tbody><tr><th>Variable</th><th>Type</th><th>Description</th></tr><tr><td>type</td><td><a href="AudioEffectType.htm">AudioEffectType Enum</a></td><td>A <i>read-only</i> property that stores the type of audio effect stored in this struct. It is set to&nbsp;<a href="AudioEffectType.htm#h4">AudioEffectType.HPF2</a>&nbsp;for HPF.</td></tr><tr><td>bypass</td><td><span data-keyref="Type_Bool"><a target="_blank" href="../../../../GML_Overview/Data_Types.htm">Boolean</a></span></td><td>Whether the effect should be bypassed (ignored).</td></tr><tr><td>cutoff</td><td><span data-keyref="Type_Real"><a target="_blank" href="../../../../GML_Overview/Data_Types.htm">Real</a></span></td><td>The cutoff frequency of the filter. Frequencies lower than the cutoff will be attenuated.</td></tr><tr><td>q</td><td><span data-keyref="Type_Real"><a target="_blank" href="../../../../GML_Overview/Data_Types.htm">Real</a></span></td><td>The quality factor of the filter [range: 1.0 - 100.0].<br><br>This is a dimensionless parameter which indicates how peaked (in gain) the frequency is around the cutoff. The greater the value, the greater the peak.</td></tr></tbody></table><h2 id="gain">Gain (<a href="AudioEffectType.htm#h5">AudioEffectType.Gain</a>)</h2><table><colgroup><col style="width:33.33%"><col style="width:33.33%"><col style="width:33.33%"></colgroup><tbody><tr><th>Variable</th><th>Type</th><th>Description</th></tr><tr><td>type</td><td><a href="AudioEffectType.htm">AudioEffectType Enum</a></td><td>A <i>read-only</i> property that stores the type of audio effect stored in this struct. It is set to&nbsp;<a href="AudioEffectType.htm#h5">AudioEffectType.Gain</a>&nbsp;for Gain.</td></tr><tr><td>bypass</td><td><span data-keyref="Type_Bool"><a target="_blank" href="../../../../GML_Overview/Data_Types.htm">Boolean</a></span></td><td>Whether the effect should be bypassed (ignored).</td></tr><tr><td>gain</td><td><span data-keyref="Type_Real"><a target="_blank" href="../../../../GML_Overview/Data_Types.htm">Real</a></span></td><td>The gain value applied to the input signal.</td></tr></tbody></table><h2 id="tremolo">Tremolo (<a href="AudioEffectType.htm#h6">AudioEffectType.Tremolo</a>)</h2><table><colgroup><col style="width:33.33%"><col style="width:33.33%"><col style="width:33.33%"></colgroup><tbody><tr><th>Variable</th><th>Type</th><th>Description</th></tr><tr><td>type</td><td><a href="AudioEffectType.htm">AudioEffectType Enum</a></td><td>A <i>read-only</i> property that stores the type of audio effect stored in this struct. It is set to&nbsp;<a href="AudioEffectType.htm#h6">AudioEffectType.Tremolo</a>&nbsp;for Tremolo.</td></tr><tr><td>bypass</td><td><span data-keyref="Type_Bool"><a target="_blank" href="../../../../GML_Overview/Data_Types.htm">Boolean</a></span></td><td>Whether the effect should be bypassed (ignored).</td></tr><tr><td>rate</td><td><span data-keyref="Type_Real"><a target="_blank" href="../../../../GML_Overview/Data_Types.htm">Real</a></span></td><td>The frequency of the LFO modulating the gain (0.0-20.0 Hz)</td></tr><tr><td>intensity</td><td><span data-keyref="Type_Real"><a target="_blank" href="../../../../GML_Overview/Data_Types.htm">Real</a></span></td><td>The proportion of the input signal which should be modulated by the LFO (0.0-1.0). Put differently, it is the proportion (or fraction) of the signal's/sample's amplitude that is affected by the LFO.</td></tr><tr><td>offset</td><td><span data-keyref="Type_Real"><a target="_blank" href="../../../../GML_Overview/Data_Types.htm">Real</a></span></td><td>The proportion of a waveform's period that the right-hand channel's LFO should be offset by compared to the left-hand channel (0.0-1.0) At a value of 0.0 and 1.0 the left-hand and right-hand channel's LFO waveforms coincide (because the shape is periodic, i.e. repeats)</td></tr><tr><td>shape</td><td><a href="AudioLFOType.htm">AudioLFOType Enum</a></td><td>The waveform shape that the LFO should output.</td></tr></tbody></table><h2 id="eq">EQ (<a href="AudioEffectType.htm#h7">AudioEffectType.EQ</a>)</h2><table><colgroup><col style="width:33.33%"><col style="width:33.33%"><col style="width:33.33%"></colgroup><tbody><tr><th>Variable</th><th>Type</th><th>Description</th></tr><tr><td>type</td><td><a href="AudioEffectType.htm">AudioEffectType Enum</a></td><td>A <i>read-only</i> property that stores the type of audio effect stored in this struct. It is set to&nbsp;<a href="AudioEffectType.htm#h7">AudioEffectType.EQ</a>&nbsp;for EQ.</td></tr><tr><td>bypass</td><td><span data-keyref="Type_Bool"><a target="_blank" href="../../../../GML_Overview/Data_Types.htm">Boolean</a></span></td><td>Whether the effect should be bypassed (ignored).</td></tr><tr><td>locut</td><td><a href="AudioEffect.htm">AudioEffect Struct</a></td><td>A filter of type&nbsp;<a href="AudioEffectType.htm#h4">AudioEffectType.HPF2</a>.</td></tr><tr><td>loshelf</td><td><a href="AudioEffect.htm">AudioEffect Struct</a></td><td>A filter of type <a href="AudioEffectType.htm#h8">AudioEffectType.LoShelf</a>.</td></tr><tr><td>eq1</td><td><a href="AudioEffect.htm">AudioEffect Struct</a></td><td>A filter of type <a href="AudioEffectType.htm#h9">AudioEffectType.PeakEQ</a>.</td></tr><tr><td>eq2</td><td><a href="AudioEffect.htm">AudioEffect Struct</a></td><td>A filter of type <a href="AudioEffectType.htm#h9">AudioEffectType.PeakEQ</a>.</td></tr><tr><td>eq3</td><td><a href="AudioEffect.htm">AudioEffect Struct</a></td><td>A filter of type <a href="AudioEffectType.htm#h9">AudioEffectType.PeakEQ</a>.</td></tr><tr><td>eq4</td><td><a href="AudioEffect.htm">AudioEffect Struct</a></td><td>A filter of type <a href="AudioEffectType.htm#h9">AudioEffectType.PeakEQ</a>.</td></tr><tr><td>hishelf</td><td><a href="AudioEffect.htm">AudioEffect Struct</a></td><td>A filter of type <a href="AudioEffectType.htm#h10">AudioEffectType.HiShelf</a>.</td></tr><tr><td>hicut</td><td><a href="AudioEffect.htm">AudioEffect Struct</a></td><td>A filter of type <a href="AudioEffectType.htm#h3">AudioEffectType.LPF2</a>.</td></tr></tbody></table><h2 id="peakeq">PeakEQ (<a href="AudioEffectType.htm#h9">AudioEffectType.PeakEQ</a>)</h2><table><colgroup><col style="width:33.33%"><col style="width:33.33%"><col style="width:33.33%"></colgroup><tbody><tr><th>Variable</th><th>Type</th><th>Description</th></tr><tr><td>type</td><td><a href="AudioEffectType.htm">AudioEffectType Enum</a></td><td>A <i>read-only</i> property that stores the type of audio effect stored in this struct. It is set to&nbsp;<a href="AudioEffectType.htm#h9">AudioEffectType.PeakEQ</a>&nbsp;for the Peak EQ Filter.</td></tr><tr><td>bypass</td><td><span data-keyref="Type_Bool"><a target="_blank" href="../../../../GML_Overview/Data_Types.htm">Boolean</a></span></td><td>Whether the effect should be bypassed (ignored).</td></tr><tr><td>freq</td><td><span data-keyref="Type_Real"><a target="_blank" href="../../../../GML_Overview/Data_Types.htm">Real</a></span></td><td>The frequency (in Hz) of the filter [range: 10 - 20,000]*. This represents the centre frequency of the peak.<br><br><span data-conref="../../../../../assets/snippets/Tag_note.hts"><span class="note">NOTE</span></span>&nbsp;*The upper limit is either 20,000 or half of the audio device's sample rate, whichever is lower.</td></tr><tr><td>q</td><td><span data-keyref="Type_Real"><a target="_blank" href="../../../../GML_Overview/Data_Types.htm">Real</a></span></td><td>The quality factor of the filter [range: 1.0 - 100.0]. This is a dimensionless parameter which narrows the peak created, so that a smaller range of frequencies around the centre frequency are affected. The greater the value, the narrower the peak.</td></tr><tr><td>gain</td><td><span data-keyref="Type_Real"><a target="_blank" href="../../../../GML_Overview/Data_Types.htm">Real</a></span></td><td>The linear gain applied to the centre frequency [range: 0.0 - inf]. Frequencies around the centre frequency will also have a gain applied, which reduces depending on the quality factor and distance from the centre frequency. A gain lower than 1 represents a decrease in volume.</td></tr></tbody></table><h2 id="hishelf">HiShelf (<a href="AudioEffectType.htm#h10">AudioEffectType.HiShelf</a>)</h2><table><colgroup><col style="width:33.33%"><col style="width:33.33%"><col style="width:33.33%"></colgroup><tbody><tr><th>Variable</th><th>Type</th><th>Description</th></tr><tr><td>type</td><td><a href="AudioEffectType.htm">AudioEffectType Enum</a></td><td>A <i>read-only</i> property that stores the type of audio effect stored in this struct. It is set to&nbsp;<a href="AudioEffectType.htm#h10">AudioEffectType.HiShelf</a>&nbsp;for the&nbsp;HiShelf&nbsp;Filter.</td></tr><tr><td>bypass</td><td><span data-keyref="Type_Bool"><a target="_blank" href="../../../../GML_Overview/Data_Types.htm">Boolean</a></span></td><td>Whether the effect should be bypassed (ignored).</td></tr><tr><td>freq</td><td><span data-keyref="Type_Real"><a target="_blank" href="../../../../GML_Overview/Data_Types.htm">Real</a></span></td><td>The frequency (in Hz) of the filter [range: 10 - 20,000]*. This represents the midpoint of the shelf's slope.<br><br>Frequencies higher than this value will have a constant gain applied.<br><br><span data-conref="../../../../../assets/snippets/Tag_note.hts"><span class="note">NOTE</span></span>&nbsp;*The upper limit is either 20,000 or half of the audio device's sample rate, whichever is lower.</td></tr><tr><td>q</td><td><span data-keyref="Type_Real"><a target="_blank" href="../../../../GML_Overview/Data_Types.htm">Real</a></span></td><td>The quality factor of the filter [range: 1.0 - 100.0]. This is a dimensionless parameter which increases the steepness of the filter's slope, at the cost of some resonance at frequencies around the top of the shelf's slope. The greater the value, the steeper the slope, and the greater the resonance.</td></tr><tr><td>gain</td><td><span data-keyref="Type_Real"><a target="_blank" href="../../../../GML_Overview/Data_Types.htm">Real</a></span></td><td>The linear gain applied to frequencies in the shelf [range 0.0 - inf]. A gain lower than 1 represents a decrease in volume.</td></tr></tbody></table><h2 id="loshelf">LoShelf (<a href="AudioEffectType.htm#h8">AudioEffectType.LoShelf</a>)</h2><table><colgroup><col style="width:33.33%"><col style="width:33.33%"><col style="width:33.33%"></colgroup><tbody><tr><th>Variable</th><th>Type</th><th>Description</th></tr><tr><td>type</td><td><a href="AudioEffectType.htm">AudioEffectType Enum</a></td><td>A <i>read-only</i> property that stores the type of audio effect stored in this struct. It is set to&nbsp;<a href="AudioEffectType.htm#h8">AudioEffectType.LoShelf</a>&nbsp;for the&nbsp;LoShelf&nbsp;Filter.</td></tr><tr><td>bypass</td><td><span data-keyref="Type_Bool"><a target="_blank" href="../../../../GML_Overview/Data_Types.htm">Boolean</a></span></td><td>Whether the effect should be bypassed (ignored).</td></tr><tr><td>freq</td><td><span data-keyref="Type_Real"><a target="_blank" href="../../../../GML_Overview/Data_Types.htm">Real</a></span></td><td>The frequency (in Hz) of the filter [range: 10 - 20,000]*. This represents the midpoint of the shelf's slope.<br><br>Frequencies lower than this value will have a constant gain applied.<br><br><span data-conref="../../../../../assets/snippets/Tag_note.hts"><span class="note">NOTE</span></span>&nbsp;*The upper limit is either 20,000 or half of the audio device's sample rate, whichever is lower.</td></tr><tr><td>q</td><td><span data-keyref="Type_Real"><a target="_blank" href="../../../../GML_Overview/Data_Types.htm">Real</a></span></td><td>The quality factor of the filter [range: 1.0 - 100.0]. <span>This is a dimensionless parameter which increases the steepness of the filter's slope, at the cost of some resonance at frequencies around the top of the shelf's slope. The greater the value, the steeper the slope, and the greater the resonance.</span></td></tr><tr><td>gain</td><td><span data-keyref="Type_Real"><a target="_blank" href="../../../../GML_Overview/Data_Types.htm">Real</a></span></td><td>The linear gain applied to frequencies in the shelf [range 0.0 - inf]. A gain lower than 1 represents a decrease in volume.</td></tr></tbody></table><h2 id="h">Compressor (<a href="AudioEffectType.htm#h11">AudioEffectType.Compressor</a>)</h2><table><colgroup><col style="width:33.33%"><col style="width:33.33%"><col style="width:33.33%"></colgroup><tbody><tr><th>Variable</th><th>Type</th><th>Description</th></tr><tr><td>type</td><td><a href="AudioEffectType.htm">AudioEffectType Enum</a></td><td>A <i>read-only</i> property that stores the type of audio effect stored in this struct. It is set to&nbsp;<a href="AudioEffectType.htm#h11">AudioEffectType.Compressor</a>&nbsp;for a Compressor effect.</td></tr><tr><td>bypass</td><td><span data-keyref="Type_Bool"><a target="_blank" href="../../../../GML_Overview/Data_Types.htm">Boolean</a></span></td><td>Whether the effect should be bypassed (ignored).</td></tr><tr><td>ingain</td><td><span data-keyref="Type_Real"><a target="_blank" href="../../../../GML_Overview/Data_Types.htm">Real</a></span></td><td>The gain scalar applied to the input signal [range: 0 - inf]. This allows audio to be pushed into the compression threshold.</td></tr><tr><td>threshold</td><td><span data-keyref="Type_Real"><a target="_blank" href="../../../../GML_Overview/Data_Types.htm">Real</a></span></td><td>The amplitude level above which the compressor will begin to apply gain reduction [range: 0.001 - 1].</td></tr><tr><td>ratio</td><td><span data-keyref="Type_Real"><a target="_blank" href="../../../../GML_Overview/Data_Types.htm">Real</a></span></td><td>The ratio by which audio that exceeds the threshold is reduced [range: 1 - inf]. The compression ratio applied is <em>ratio : 1</em>.</td></tr><tr><td>attack</td><td><span data-keyref="Type_Real"><a target="_blank" href="../../../../GML_Overview/Data_Types.htm">Real</a></span></td><td>The responsiveness (in seconds) of the compressor in compressing audio above the threshold [range: 0.001 - 0.1].</td></tr><tr><td>release</td><td><span data-keyref="Type_Real"><a target="_blank" href="../../../../GML_Overview/Data_Types.htm">Real</a></span></td><td>The responsiveness (in seconds) of the compressor in stopping compressing audio below the threshold [range: 0.01 - 1].</td></tr><tr><td>outgain</td><td><span data-keyref="Type_Real"><a target="_blank" href="../../../../GML_Overview/Data_Types.htm">Real</a></span></td><td>The gain scalar applied to the output signal [range: 0 - inf]. This allows compensating for the overall level reduction caused by the compression process.</td></tr></tbody></table><p>&nbsp;</p><p>&nbsp;</p><div class="footer"><div class="buttons"><div class="clear"><div>Back:&nbsp;<a href="Audio_Effects.htm">Audio Effects</a></div><div>Next:&nbsp;<a href="AudioEffectType.htm">AudioEffectType Enum</a></div></div></div><h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2024 All Rights Reserved</span></h5></div></body></html>