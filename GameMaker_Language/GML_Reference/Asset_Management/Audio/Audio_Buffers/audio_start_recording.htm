<!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml"><head><script type="text/javascript" src="../../../../../assets/import/jquery-3.6.1.min.js"></script><script type="text/javascript" src="../../../../../assets/import/layer/layer.js"></script><script type="text/javascript" src="../../../../../assets/import/pangu.min.js"></script><link rel="stylesheet" type="text/css" href="../../../../../assets/import/layer/layui_btn.css"><link rel="stylesheet" type="text/css" href="../../../../../assets/import/layer/layui_col.css"><link rel="stylesheet" type="text/css" href="../../../../../assets/import/layer/theme/default/layer.css"><link rel="stylesheet" type="text/css" href="../../../../../assets/import/main.css"><script>let str;removeHtml=function(e){return e=(e=(e=(e=e.replace(/(<([^>]+)>)/gi,"{}")).replace(/\r\n/g,"\n")).replace(/\n/g,"")).replace(/ {2,}/g," ")},retHtml=function(e){return e.match(/(<([^>]+)>)/gi)},setTranslator=function(e,t,o){let a;a=o?e.attr(o):e.html();let r=t[removeHtml(a)];if(null!=r&&r.length){t=retHtml(a);let n=0;t&&t.forEach(function(e,t){var o=r.replace("{"+n+"}",e);r=o===r?r.replace("{}",e):o,n++}),o?e.attr(o,r):e.html(r)}},noTranslationState=function(){return"true"==window.localStorage.getItem("noTranslationState")},noTranslationStateToggle=function(){window.localStorage.setItem("noTranslationState",!noTranslationState())},addNoTranslationStateButton=function(){var e=`
		
		<button style="
			float: right;
			font-size: 16px;
			padding: 4px 12px;
		"
		onclick="
		window.location.replace('gmmt://'+document.location.hash)
		"
		>打开编辑器</button>

		<button style="
			float: right;
			font-size: 16px;
			padding: 4px 12px;
		"
		onclick="
		noTranslationStateToggle();
		location.reload();
    	event.stopPropagation();
		"
		>切换翻译</button>
		`;$(".header").length?$(".header").append(e):($(".topic-header").append(e),$(".topic-header button").css("position","relative").css("top","44px"))},removeExtensionFromHash=function(e){return e.replaceAll("#t=","").replaceAll("%2F","/").replaceAll(".htm","")};let json_global,json_file={'"{}buffer_id{}" - the ID of the temporary buffer you can use to retrieve the audio data':'"{}buffer_id{}"可用于检索音频数据的临时缓冲区的 ID','"{}channel_index{}" - the recording channel index (as returned by the function) this data came from':'"{}channel_index{}"记录通道索引(由函数返回)，此数据来自','"{}data_len{}" - the length of data (in bytes) you\'ve received':'"{}data_len{}"您接收到的数据长度(以字节为单位)',"Note that after the asynchronous event has been triggered, the audio in the temporary buffer will be wiped, so you should be copying it's data into a custom buffer that you have previously created.":"请注意，在触发异步事件后，临时缓冲区中的音频将被擦除，因此您应该将其数据复制到先前创建的自定义缓冲区中。",'The above code starts recording from the recorder source 0, storing the channel index of the recording in the variable "audio_record" for use in the asynchronous {}Audio Recording{} event.':'上面的代码从记录器源0开始记录，将记录的通道索引存储在变量"音频_记录"中，以便在异步{}音频记录{}事件中使用。',"The index of the recorder source to use.":"要使用的记录器源的索引。","This function will start recording audio from the recorder source indexed. You can get the number of recorder sources using the function {}{}audio_get_recorder_count(){}{}, and once you start recording the audio will be stored in a temporary buffer and start triggering an {}Audio Recording Asynchronous Event{}. This event is triggered every step that recording takes place and will create the special {}DS map{}&nbsp;in the variable {}{}async_load{}{} with the following key/value pairs:":"此函数将从已索引的录音器源开始录制音频。您可以使用函数{}{}audio_get_recorder_count(){}{}获得录音机源数，开始录制后，音频将存储在临时缓冲区中，并开始触发{}音频录制异步事件{}。 此事件会在记录的每个步骤触发，并将在变量{}async_load{}中创建具有以下键/值对的特殊{}{}DS map{}{}：","{}{}NOTE{} {}Most platforms support recording audio in some form, but that does not mean that all devices will permit it, even if the platform does, so you should always check that the {}{}{}audio_get_recorder_count(){}{}{} function returns a value greater than 0 to verify that recording devices are available before using the rest of the recording functions.":"{}{}注意{}{}大多数平台支持以某种形式录制音频，但这并不意味着所有设备都会允许录制，即使平台允许，因此您应始终检查{}{}{}audio_get_recorder_count(){}{}{}函数返回大于0的值，以验证在使用其余录制函数之前录音设备是否可用。"},get_json_global=$.ajax({url:"/global.json",type:"GET",dataType:"json",async:!1,success:function(e){json_global=e}});$(function(){if(addNoTranslationStateButton(),noTranslationState())return!1;$("div.footer a,h4,caption").each(function(){setTranslator($(this),json_global)}),$("p,h1,h2,h3,td,li,a,div.dropspotnote,figcaption").each(function(){setTranslator($(this),json_file)}),$("th,.warning,.important,.optional").each(function(){setTranslator($(this),json_global)}),$(".header").length&&(window.setInterval(function(){$("#toc-panel a:not('isTranslate')").each(function(){$(this).addClass("isTranslate"),setTranslator($(this),json_global)}),$(".GlossDefinitionText:not('isTranslate')").each(function(){$(this).addClass("isTranslate"),setTranslator($(this),json_global)})},250),console.log("成功啦!现在正在疯狂翻译菜单中!")),$(".tooltip").each(function(){setTranslator($(this),json_global,"title")})}),document.addEventListener("DOMContentLoaded",()=>{pangu.autoSpacingPage()})</script><script type="text/javascript" language="JavaScript">function reDo(){innerWidth==origWidth&&innerHeight==origHeight||location.reload()}4==parseInt(navigator.appVersion)&&"Netscape"==navigator.appName&&(origWidth=innerWidth,origHeight=innerHeight,onresize=reDo),onerror=null</script><style type="text/css">p.WebHelpNavBar{text-align:right}</style><script type="text/javascript">gCommonRootRelPath=gRootRelPath="../../../../..",gTopicId="8.2.2.3.5.5.0_6"</script><script type="text/javascript" src="../../../../../template/scripts/rh.min.js"></script><script type="text/javascript" src="../../../../../template/scripts/common.min.js"></script><script type="text/javascript" src="../../../../../template/scripts/topic.min.js"></script><script type="text/javascript" src="../../../../../template/scripts/topicwidgets.min.js"></script><script type="text/javascript" src="../../../../../whxdata/projectsettings.js"></script><link rel="stylesheet" type="text/css" href="../../../../../template/styles/topic.min.css"><link rel="stylesheet" type="text/css" href="../../../../../template/Charcoal_Grey/topicheader.css"><meta name="topic-status" content="Draft"><meta http-equiv="Content-Type" content="text/html; charset=utf-8"><title>audio_start_recording</title><meta name="generator" content="Adobe RoboHelp 2022"><link rel="stylesheet" href="../../../../../assets/css/default.css" type="text/css"><script src="../../../../../assets/scripts/main_script.js" type="module"></script><meta name="rh-authors" content="Mark Alexander"><meta name="topic-comment" content="Page explaining the function audio_start_recording"><meta name="rh-index-keywords" content="audio_start_recording"><meta name="search-keywords" content="audio_start_recording"><meta name="is_pure" content="true"><meta name="brsnext" value="GameMaker_Language/GML_Reference/Asset_Management/Audio/Audio_Buffers/audio_stop_recording.htm"><meta name="brsprev" value="GameMaker_Language/GML_Reference/Asset_Management/Audio/Audio_Buffers/audio_queue_sound.htm"></head><body><div class="topic-header rh-hide" id="rh-topic-header"><div class="logo"></div><div class="nav"><div class="title" title="audio_start_recording"><span>audio_start_recording</span></div><div class="gotohome" title="Click here to see this page in full context"><a href="#" onclick="rh._.goToFullLayout()">Click here to see this page in full context</a></div></div></div><div class="topic-header-shadow rh-hide" id="rh-topic-header-shadow"></div><h1>audio_start_recording</h1><p>This function will start recording audio from the recorder source indexed. You can get the number of recorder sources using the function <a href="audio_get_recorder_count.htm"><span class="inline">audio_get_recorder_count()</span></a>, and once you start recording the audio will be stored in a temporary buffer and start triggering an <a href="../../../../../The_Asset_Editors/Object_Properties/Async_Events/Audio_Recording.htm">Audio Recording Asynchronous Event</a>. This event is triggered every step that recording takes place and will create the special <a href="../../../Data_Structures/DS_Maps/DS_Maps.htm">DS map</a>&nbsp;in the variable <a href="../../../../GML_Overview/Variables/Builtin_Global_Variables/async_load.htm"><span class="inline">async_load</span></a> with the following key/value pairs:</p><ul class="colour"><li>"<strong>buffer_id</strong>" - the ID of the temporary buffer you can use to retrieve the audio data</li><li>"<strong>channel_index</strong>" - the recording channel index (as returned by the function) this data came from</li><li>"<strong>data_len</strong>" - the length of data (in bytes) you've received</li></ul><p>Note that after the asynchronous event has been triggered, the audio in the temporary buffer will be wiped, so you should be copying it's data into a custom buffer that you have previously created.</p><p class="note"><b><span class="note">NOTE</span></b> Most platforms support recording audio in some form, but that does not mean that all devices will permit it, even if the platform does, so you should always check that the <span style="font-size:1px"><a href="audio_get_recorder_count.htm"><span class="inline">audio_get_recorder_count()</span></a></span> function returns a value greater than 0 to verify that recording devices are available before using the rest of the recording functions.</p><p>&nbsp;</p><h4>Syntax:</h4><p class="code">audio_start_recording(recorder_index);</p><table><tbody><tr><th>Argument</th><th>Type</th><th>Description</th></tr><tr><td>recorder_index</td><td><span data-keyref="Type_Real"><a target="_blank" href="../../../../GML_Overview/Data_Types.htm">Real</a></span></td><td>The index of the recorder source to use.</td></tr></tbody></table><p>&nbsp;</p><h4>Returns:</h4><p class="code"><span data-keyref="Type_ID_Buffer"><a target="_blank" href="../../../Buffers/buffer_create.htm">Buffer</a></span></p><p>&nbsp;</p><h4>Example:</h4><p class="code">audio_record = audio_start_recording(0);</p><p>The above code starts recording from the recorder source 0, storing the channel index of the recording in the variable "audio_record" for use in the asynchronous <a href="../../../../../The_Asset_Editors/Object_Properties/Async_Events/Audio_Recording.htm">Audio Recording</a> event.</p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><div class="footer"><div class="buttons"><div class="clear"><div style="float:left">Back: <a href="../Audio.htm">Audio Buffers</a></div><div style="float:right">Next:&nbsp;<a href="audio_stop_recording.htm">Audio_stop_recording</a></div></div></div><h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2024 All Rights Reserved</span></h5></div></body></html>