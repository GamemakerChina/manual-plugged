<!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml"><head><script type="text/javascript" src="../../../../../assets/import/jquery-3.6.1.min.js"></script><script type="text/javascript" src="../../../../../assets/import/layer/layer.js"></script><script type="text/javascript" src="../../../../../assets/import/pangu.min.js"></script><link rel="stylesheet" type="text/css" href="../../../../../assets/import/layer/layui_btn.css"><link rel="stylesheet" type="text/css" href="../../../../../assets/import/layer/layui_col.css"><link rel="stylesheet" type="text/css" href="../../../../../assets/import/layer/theme/default/layer.css"><link rel="stylesheet" type="text/css" href="../../../../../assets/import/main.css"><script>let str;removeHtml=function(t){return t=(t=(t=(t=t.replace(/(<([^>]+)>)/gi,"{}")).replace(/\r\n/g,"\n")).replace(/\n/g,"")).replace(/ {2,}/g," ")},retHtml=function(t){return t.match(/(<([^>]+)>)/gi)},setTranslator=function(t,n,a){let e;e=a?t.attr(a):t.html();let l=n[removeHtml(e)];if(null!=l&&l.length){n=retHtml(e);let o=0;n&&n.forEach(function(t,n){var a=l.replace("{"+o+"}",t);l=a===l?l.replace("{}",t):a,o++}),a?t.attr(a,l):t.html(l)}},noTranslationState=function(){return"true"==window.localStorage.getItem("noTranslationState")},noTranslationStateToggle=function(){window.localStorage.setItem("noTranslationState",!noTranslationState())},addNoTranslationStateButton=function(){$(".header").length&&$(".header").append(`
		
		<button style="
			float: right;
			font-size: 16px;
			padding: 4px 12px;
		"
		onclick="
		window.location.replace('gmmt://'+document.location.hash)
		"
		>打开编辑器</button>

		<button style="
			float: right;
			font-size: 16px;
			padding: 4px 12px;
		"
		onclick="
		noTranslationStateToggle();
		location.reload();
    	event.stopPropagation();
		"
		>切换翻译</button>
		`)},removeExtensionFromHash=function(t){return t.replaceAll("#t=","").replaceAll("%2F","/").replaceAll(".htm","")},$(function(){if(addNoTranslationStateButton(),noTranslationState())return!1;$("div.footer a,h4,caption,blockquote").each(function(){setTranslator($(this),json_global)}),$("p,h1,h2,h3,td,li,a,div.dropspotnote,figcaption,.expandtext").each(function(){setTranslator($(this),json)}),$("th,.warning,.important,.optional").each(function(){setTranslator($(this),json_global)}),$(".header").length&&(window.setInterval(function(){$("#toc-panel a:not('isTranslate')").each(function(){$(this).addClass("isTranslate"),setTranslator($(this),json_global)}),$(".GlossDefinitionText:not('isTranslate')").each(function(){$(this).addClass("isTranslate"),setTranslator($(this),json_global)})},250),console.log("成功啦!现在正在疯狂翻译菜单中!")),$(".tooltip").each(function(){setTranslator($(this),json_global,"title")})}),document.addEventListener("DOMContentLoaded",()=>{pangu.autoSpacingPage()})</script><script type="text/javascript" language="JavaScript">function reDo(){innerWidth==origWidth&&innerHeight==origHeight||location.reload()}4==parseInt(navigator.appVersion)&&"Netscape"==navigator.appName&&(origWidth=innerWidth,origHeight=innerHeight,onresize=reDo),onerror=null</script><style type="text/css">p.WebHelpNavBar{text-align:right}</style><script type="text/javascript">gCommonRootRelPath=gRootRelPath="../../../../..",gTopicId="8.2.2.3.5.5.0_1"</script><script type="text/javascript" src="../../../../../template/scripts/rh.min.js"></script><script type="text/javascript" src="../../../../../template/scripts/common.min.js"></script><script type="text/javascript" src="../../../../../template/scripts/topic.min.js"></script><script type="text/javascript" src="../../../../../template/scripts/topicwidgets.min.js"></script><script type="text/javascript" src="../../../../../whxdata/projectsettings.js"></script><link rel="stylesheet" type="text/css" href="../../../../../template/styles/topic.min.css"><link rel="stylesheet" type="text/css" href="../../../../../template/Charcoal_Grey/topicheader.css"><meta name="topic-status" content="Draft"><meta http-equiv="Content-Type" content="text/html; charset=utf-8"><title>audio_create_buffer_sound</title><meta name="generator" content="Adobe RoboHelp 2022"><link rel="stylesheet" href="../../../../../assets/css/default.css" type="text/css"><script src="../../../../../assets/scripts/main_script.js" type="module"></script><meta name="rh-authors" content="Mark Alexander"><meta name="topic-comment" content="Page explaining the function audio_create_buffer_sound"><meta name="rh-index-keywords" content="audio_create_buffer_sound"><meta name="search-keywords" content="audio_create_buffer_sound,audio_mono,audio_stereo,audio_3D"><meta name="is_pure" content="true"><meta name="brsnext" value="GameMaker_Language/GML_Reference/Asset_Management/Audio/Audio_Buffers/audio_free_buffer_sound.htm"><meta name="brsprev" value="GameMaker_Language/GML_Reference/Asset_Management/Audio/Audio_Buffers/Audio_Buffers.htm"></head><body><div class="topic-header rh-hide" id="rh-topic-header"><div class="logo"></div><div class="nav"><div class="title" title="audio_create_buffer_sound"><span>audio_create_buffer_sound</span></div><div class="gotohome" title="Click here to see this page in full context"><a href="#" onclick="rh._.goToFullLayout()">Click here to see this page in full context</a></div></div></div><div class="topic-header-shadow rh-hide" id="rh-topic-header-shadow"></div><h1>audio_create_buffer_sound</h1><p>With this function you can create a new sound from the contents of a buffer.</p><p>The buffer should have been created previously (see the <a href="../../../Buffers/Buffers.htm">buffer functions</a>&nbsp;for details on how to do this), and have had data added or loaded into it. You then pass it to this function with the data format (only <span class="inline">buffer_u8</span> or <span class="inline">buffer_s16</span> are currently supported), the sample rate (which can be between 8000hz and 48000hz), and an offset into the buffer to get the data from.</p><p class="note"><span data-conref="../../../../../assets/snippets/Tag_note.hts"><span class="note">NOTE</span></span>&nbsp;You cannot pass a buffer of the type <a href="../../../Buffers/buffer_create.htm"><span class="inline2">buffer_grow</span></a> into this function.</p><p>You also need to supply the number of samples in the buffer and the channels that the sound requires. These channels are defined by one of the following constants:</p><table><colgroup><col><col></colgroup><tbody><tr><th colspan="2"><span data-keyref="Type_Constant_Audio_Channel_Type"><a target="_blank" href="audio_create_buffer_sound.htm">Audio Channel Constant</a></span></th></tr><tr><th>Constant</th><th>Description</th></tr><tr><td><span class="inline">audio_mono</span></td><td>Mono (single channel) audio</td></tr><tr><td><span class="inline">audio_stereo</span></td><td>Stereo (dual channel) audio</td></tr><tr><td><span class="inline">audio_3D</span></td><td>3D (5.1) audio</td></tr></tbody></table><p>Note that after you have created a sound, you should free the pointer index associated with it when it is no longer required using the function <a href="audio_free_buffer_sound.htm"><span class="inline">audio_free_buffer_sound()</span></a>. If you fail to do this and then re-assign the variable or change rooms etc. the sound ID will be lost and you will have a memory leak.</p><p>You can't delete the buffer if any sound has been created from it and the sound has not been freed up first. So you would free the sound(s) first, and&nbsp;<i>then</i> delete the buffer.</p><p>Adding anything to the buffer, or changing the buffer size, after it has had a sound created from it, will give unexpected results and is not recommended - once you have started creating sounds from any buffer you should not manipulate it in any other way afterwards.</p><p>&nbsp;</p><h4>Syntax:</h4><p class="code">audio_create_buffer_sound(bufferId, bufferFormat, bufferRate, bufferOffset, bufferLength, bufferChannels);</p><table><tbody><tr><th>Argument</th><th>Type</th><th>Description</th></tr><tr><td>bufferId</td><td><span data-keyref="Type_ID_Buffer"><a target="_blank" href="../../../Buffers/buffer_create.htm">Buffer</a></span></td><td>The ID of the buffer to use.</td></tr><tr><td>bufferFormat</td><td><span data-keyref="Type_Constant_Buffer_Data_Type"><a target="_blank" href="../../../Buffers/buffer_write.htm">Buffer Data Type Constant</a></span></td><td>The format of the data in the buffer (<span class="inline">buffer_u8</span> or <span class="inline">buffer_s16</span>).</td></tr><tr><td>bufferRate</td><td><span data-keyref="Type_Real"><a target="_blank" href="../../../../GML_Overview/Data_Types.htm">Real</a></span></td><td>The sample rate of the data in the buffer.</td></tr><tr><td>bufferOffset</td><td><span data-keyref="Type_Real"><a target="_blank" href="../../../../GML_Overview/Data_Types.htm">Real</a></span></td><td>The offset into the buffer to read the sample data from (in bytes).</td></tr><tr><td>bufferLength</td><td><span data-keyref="Type_Real"><a target="_blank" href="../../../../GML_Overview/Data_Types.htm">Real</a></span></td><td>The length of the buffer (the number of bytes of audio data, excluding the header).</td></tr><tr><td>bufferChannels</td><td><span data-keyref="Type_Constant_Audio_Channel_Type"><a target="_blank" href="audio_create_buffer_sound.htm">Audio Channel Constant</a></span></td><td>The channels to use from one of the constants listed above.</td></tr></tbody></table><p>&nbsp;</p><h4>Returns:</h4><p class="code"><span data-keyref="Type_Asset_Sound"><a target="_blank" href="../../../../../The_Asset_Editors/Sounds.htm">Sound Asset</a></span></p><p>&nbsp;</p><h4>Example:</h4><p class="code">var rate = 44100;<br>var hertz = irandom_range(220, 880);<br>var samples = 44100;<br><br>var bufferId = buffer_create(rate, buffer_fast, 1);<br>buffer_seek(bufferId, buffer_seek_start, 0);<br><br>var num_to_write = rate / hertz;<br>var length = buffer_get_size(bufferId);<br>var val_to_write = 1;<br><br>for (var i = 0; i &lt; (samples / num_to_write) + 1; i++)<br>{<br>&nbsp; &nbsp; for (var j = 0; j &lt; num_to_write; j++)<br>&nbsp; &nbsp; {<br>&nbsp; &nbsp; &nbsp; &nbsp; buffer_write(bufferId, buffer_u8, val_to_write * 255);<br>&nbsp; &nbsp; }<br>&nbsp; &nbsp; val_to_write = (1 - val_to_write);<br>}<br><br>soundId = audio_create_buffer_sound(bufferId, buffer_u8, rate, 0, length, audio_stereo);</p><p>The above creates a buffer and then procedurally fills it with data. This data is then used to create a new sound, which is stored in the variable "soundId".</p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><div class="footer"><div class="buttons"><div class="clear"><div style="float:left">Back: <a href="../Audio.htm">Audio Buffers</a></div><div style="float:right">Next:&nbsp;<a href="audio_free_buffer_sound.htm">audio_free_buffer_sound</a></div></div></div><h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2024 All Rights Reserved</span></h5></div></body></html>