<!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml"><head><script type="text/javascript" src="../../../../assets/import/jquery-3.6.1.min.js"></script><script type="text/javascript" src="../../../../assets/import/layer/layer.js"></script><script type="text/javascript" src="../../../../assets/import/pangu.min.js"></script><link rel="stylesheet" type="text/css" href="../../../../assets/import/layer/layui_btn.css"><link rel="stylesheet" type="text/css" href="../../../../assets/import/layer/layui_col.css"><link rel="stylesheet" type="text/css" href="../../../../assets/import/layer/theme/default/layer.css"><link rel="stylesheet" type="text/css" href="../../../../assets/import/main.css"><script>let str;removeHtml=function(t){return t=(t=(t=(t=t.replace(/(<([^>]+)>)/gi,"{}")).replace(/\r\n/g,"\n")).replace(/\n/g,"")).replace(/ {2,}/g," ")},retHtml=function(t){return t.match(/(<([^>]+)>)/gi)},setTranslator=function(t,e,n){let o;o=n?t.attr(n):t.html();let a=e[removeHtml(o)];if(null!=a&&a.length){e=retHtml(o);let i=0;e&&e.forEach(function(t,e){var n=a.replace("{"+i+"}",t);a=n===a?a.replace("{}",t):n,i++}),n?t.attr(n,a):t.html(a)}},noTranslationState=function(){return"true"==window.localStorage.getItem("noTranslationState")},noTranslationStateToggle=function(){window.localStorage.setItem("noTranslationState",!noTranslationState())},addNoTranslationStateButton=function(){var t=`
		
		<button style="
			float: right;
			font-size: 16px;
			padding: 4px 12px;
		"
		onclick="
		window.location.replace('gmmt://'+document.location.hash)
		"
		>打开编辑器</button>

		<button style="
			float: right;
			font-size: 16px;
			padding: 4px 12px;
		"
		onclick="
		noTranslationStateToggle();
		location.reload();
    	event.stopPropagation();
		"
		>切换翻译</button>
		`;$(".header").length?$(".header").append(t):($(".topic-header").append(t),$(".topic-header button").css("position","relative").css("top","44px"))},removeExtensionFromHash=function(t){return t.replaceAll("#t=","").replaceAll("%2F","/").replaceAll(".htm","")};let json_global,json_file={"A struct containing all the animation frames. Each tile number has a key in the struct, each entry is an array of the frames to use (each array should be {}frame_count{} long).":"包含所有动画帧的结构。每个图块编号在结构中都有一个键，每个条目都是要使用的帧的数组 (每个数组的长度应该是 {}frame_count{})。","The above code calls&nbsp;{}{}tileset_get_info{}{}&nbsp;to get information about an existing tile set {}ts_Forest{}&nbsp;and stores the result in a temporary variable {}_info{}. The info is then shown in a debug message.":"上面的代码调用 {}{}tileset_get_info{}{} 以获取有关现有图块集 {}ts_Forest{} 的信息，并将结果存储在临时变量 {}_info{} 中。然后，该信息将显示在调试消息中。","The above code finds the coordinates of the top-left corner of the given tile index. First the index of the tile is defined and stored in a temporary variable {}_tnumber{}. Then&nbsp;{}{}tileset_get_info{}{}&nbsp;is called on an existing tile set {}ts_Forest{}&nbsp;and the returned struct is stored in {}_ts_info{}. Next an if statement checks if the variable contains a valid struct (accessing the variables in the next steps will throw errors otherwise).{} If it does, some variables are calculated. {}_twidth{} and {}_theight{}&nbsp;are the total width and height of a tile on the tile set, including the border on both sides ({}_ts_info.tile_horizontal_separator{} and&nbsp;{}_ts_info.tile_vertical_separator{}) {}_tile_x{} is the remainder of the tile index divided by the number of columns and {}_tile_y{}&nbsp;is the number of times {}_ts_info.tile_columns{} fits into the tile index. After this, a debug message is shown with the top-left coordinates (the separator offsets not yet included).{} If the case an invalid tile set was provided to the function a different debug message is shown.":"面的代码查找给定图块索引的左上角的坐标。首先，图块的索引被定义并存储在临时变量 {}_tnumber{} 中。然后 {}{}tileset_get_info{}{} 在现有磁贴集 {}ts_Forest{} 上调用并且返回的结构存储在 {}_ts_info{} 中。接下来，if 语句检查变量是否包含有效的结构(否则在接下来的步骤中访问变量将抛出错误){} 如果包含，则会计算一些变量。{}_twidth{} 和 {}_theight{} 是图块集上的图块的总宽度和高度，包括两侧的边框({}_ts_info.tile_horizontal_separator{} 和 {}_ts_info.tile_vertical_separator{}<br>{}_tile_x{} 是图块索引的剩余部分除以列数和 {}_tile_y{} 是 {}_ts_info.tile_columns{} 适应图块索引的次数。之后，将显示带有左上角坐标的调试消息(尚未包括分隔符偏移){} 如果向函数提供了无效的图块集，则会显示不同的调试消息。","The above code finds the coordinates of the top-left corner of the given tile index. First the index of the tile is defined and stored in a temporary variable {}_tnumber{}. Then&nbsp;{}{}tileset_get_info{}{}&nbsp;is called on an existing tile set {}ts_Forest{}&nbsp;and the returned struct is stored in {}_ts_info{}. Next an if statement checks if the variable contains a valid struct (accessing the variables in the next steps will throw errors otherwise){} If it does, some variables are calculated. {}_twidth{} and {}_theight{}&nbsp;are the total width and height of a tile on the tile set, including the border on both sides ({}_ts_info.tile_horizontal_separator{} and&nbsp;{}_ts_info.tile_vertical_separator{}) {}_tile_x{} is the remainder of the tile index divided by the number of columns and {}_tile_y{}&nbsp;is the number of times {}_ts_info.tile_columns{} fits into the tile index. After this, a debug message is shown with the top-left coordinates (the separator offsets not yet included){} If the case an invalid tile set was provided to the function a different debug message is shown.":"上面的代码查找给定图块索引的左上角的坐标。首先，图块的索引被定义并存储在临时变量 {}_tnumber{} 中。然后 {}{}tileset_get_info{}{} 在现有磁贴集 {}ts_Forest{} 上调用并且返回的结构存储在 {}_ts_info{} 中。接下来，if 语句检查变量是否包含有效的结构(否则在接下来的步骤中访问变量将抛出错误){} 如果包含，则会计算一些变量。{}_twidth{} 和 {}_theight{} 是图块集上的图块的总宽度和高度，包括两侧的边框({}_ts_info.tile_horizontal_separator{} 和 {}_ts_info.tile_vertical_separator{}<br>{}_tile_x{} 是图块索引的剩余部分除以列数和 {}_tile_y{} 是 {}_ts_info.tile_columns{} 适应图块索引的次数。之后，将显示带有左上角坐标的调试消息(尚未包括分隔符偏移){} 如果向函数提供了无效的图块集，则会显示不同的调试消息。","The height of a single tile (in pixels)":"单个图块的高度(以像素为单位)","The number of frames of animation per animation":"每个动画的动画帧数","The number of pixels horizontally on each side of each tile (making the space between two tiles {}2 * tile_horizontal_separator{})":"每个图块每一面的水平像素数 (使两个图块之间的间距为 {}2 * tile_horizontal_separator{})","The number of pixels vertically&nbsp;on each side of each tile&nbsp;(making the space between two tiles&nbsp;{}2 * tile_vertical_separator{})":"每个图块每一面的垂直像素数 (使两个图块之间的间距为 {}2 * tile_vertical_separator{})","The returned struct contains the following variables:&nbsp;":"返回的结构包含以下变量： ","The texture ID":"纹理 ID","The tile set to get the info from":"要从中获取信息的图块集","The width of a single tile (in pixels)":"单个图块的宽度(以像素为单位)","The width of the whole tile set texture (in pixels)":"整个图块集纹理的宽度(像素)","The&nbsp;height of the whole tile set texture&nbsp;(in pixels)":"整个图块集纹理的高度(像素)","The&nbsp;number of columns on each row of the tile set":"图块集每行上的列数","The&nbsp;number of milliseconds for frame animation":"帧动画的毫秒数","The&nbsp;number of tiles":"图块数量","This function returns a {}struct{} containing information on a tile set.":"此函数返回一个包含有关图块集信息的{}结构{}。","Tile Set Info Struct":"图块集信息结构","{}{}Tile Set Info Struct{}{}&nbsp;(in case of a valid&nbsp;{}{}Tile Set Asset{}{}) or&nbsp;{}{}undefined{}{}&nbsp;(no valid tile set given)":"{}{}图块集信息结构{}{} (如果是有效的{}{}图块集资源{}{}) 或 {}{}undefined{}{} (未指定有效的图块集)"},get_json_global=$.ajax({url:"/global.json",type:"GET",dataType:"json",async:!1,success:function(t){json_global=t}});$(function(){if(addNoTranslationStateButton(),noTranslationState())return!1;$("div.footer a,h4,caption").each(function(){setTranslator($(this),json_global)}),$("p,h1,h2,h3,td,li,a,div.dropspotnote,figcaption").each(function(){setTranslator($(this),json_file)}),$("th,.warning,.important,.optional").each(function(){setTranslator($(this),json_global)}),$(".header").length&&(window.setInterval(function(){$("#toc-panel a:not('isTranslate')").each(function(){$(this).addClass("isTranslate"),setTranslator($(this),json_global)}),$(".GlossDefinitionText:not('isTranslate')").each(function(){$(this).addClass("isTranslate"),setTranslator($(this),json_global)})},250),console.log("成功啦!现在正在疯狂翻译菜单中!")),$(".tooltip").each(function(){setTranslator($(this),json_global,"title")})}),document.addEventListener("DOMContentLoaded",()=>{pangu.autoSpacingPage()})</script><script type="text/javascript" language="JavaScript">function reDo(){innerWidth==origWidth&&innerHeight==origHeight||location.reload()}4==parseInt(navigator.appVersion)&&"Netscape"==navigator.appName&&(origWidth=innerWidth,origHeight=innerHeight,onresize=reDo),onerror=null</script><style type="text/css">p.WebHelpNavBar{text-align:right}</style><script type="text/javascript">gCommonRootRelPath=gRootRelPath="../../../..",gTopicId="8.2.2.3.4.0_4"</script><script type="text/javascript" src="../../../../template/scripts/rh.min.js"></script><script type="text/javascript" src="../../../../template/scripts/common.min.js"></script><script type="text/javascript" src="../../../../template/scripts/topic.min.js"></script><script type="text/javascript" src="../../../../template/scripts/topicwidgets.min.js"></script><script type="text/javascript" src="../../../../whxdata/projectsettings.js"></script><link rel="stylesheet" type="text/css" href="../../../../template/styles/topic.min.css"><link rel="stylesheet" type="text/css" href="../../../../template/Charcoal_Grey/topicheader.css"><meta name="topic-status" content="Draft"><meta http-equiv="Content-Type" content="text/html; charset=utf-8"><title>tileset_get_info</title><meta name="generator" content="Adobe RoboHelp 2022"><link rel="stylesheet" type="text/css" href="../../../../assets/css/default.css"><script src="../../../../assets/scripts/main_script.js" type="module"></script><meta name="rh-authors" content=""><meta name="topic-comment" content=""><meta name="rh-index-keywords" content="tileset_get_info"><meta name="search-keywords" content="tileset_get_info"><meta name="template" content="assets/masterpages/Manual_Keyword_Page.htt"><meta name="brsnext" value="GameMaker_Language/GML_Reference/Asset_Management/Audio/Audio.htm"><meta name="brsprev" value="GameMaker_Language/GML_Reference/Asset_Management/Tilsets/tileset_get_uvs.htm"></head><body><div class="topic-header rh-hide" id="rh-topic-header"><div class="logo"></div><div class="nav"><div class="title" title="tileset_get_info"><span>tileset_get_info</span></div><div class="gotohome" title="Click here to see this page in full context"><a href="#" onclick="rh._.goToFullLayout()">Click here to see this page in full context</a></div></div></div><div class="topic-header-shadow rh-hide" id="rh-topic-header-shadow"></div><h1><span data-field="title" data-format="default">tileset_get_info</span></h1><p>This function returns a <a href="../../../GML_Overview/Structs.htm#struct">struct</a> containing information on a tile set.</p><p>The returned struct contains the following variables:&nbsp;</p><table><caption><span data-keyref="Type_Struct_TileSet_Info"><a target="_blank" href="tileset_get_info.htm">Tile Set Info Struct</a></span></caption><colgroup><col><col><col></colgroup><tbody><tr><th>Variable Name</th><th style="">Data Type</th><th style="">Description</th></tr><tr><td>width</td><td style=""><span data-keyref="Type_Real"><a target="_blank" href="../../../GML_Overview/Data_Types.htm">Real</a></span></td><td style="">The width of the whole tile set texture (in pixels)</td></tr><tr><td>height</td><td style=""><span data-keyref="Type_Real"><a target="_blank" href="../../../GML_Overview/Data_Types.htm">Real</a></span></td><td style="">The&nbsp;height of the whole tile set texture&nbsp;(in pixels)</td></tr><tr><td>texture</td><td style=""><span data-keyref="Type_Real"><a target="_blank" href="../../../GML_Overview/Data_Types.htm">Real</a></span></td><td style="">The texture ID</td></tr><tr><td>tile_width</td><td style=""><span data-keyref="Type_Real"><a target="_blank" href="../../../GML_Overview/Data_Types.htm">Real</a></span></td><td style="">The width of a single tile (in pixels)</td></tr><tr><td>tile_height</td><td style=""><span data-keyref="Type_Real"><a target="_blank" href="../../../GML_Overview/Data_Types.htm">Real</a></span></td><td style="">The height of a single tile (in pixels)</td></tr><tr><td>tile_horizontal_separator</td><td style=""><span data-keyref="Type_Real"><a target="_blank" href="../../../GML_Overview/Data_Types.htm">Real</a></span></td><td style="">The number of pixels horizontally on each side of each tile (making the space between two tiles <span class="inline2">2 * tile_horizontal_separator</span>)</td></tr><tr><td>tile_vertical_separator</td><td style=""><span data-keyref="Type_Real"><a target="_blank" href="../../../GML_Overview/Data_Types.htm">Real</a></span></td><td style="">The number of pixels vertically&nbsp;on each side of each tile&nbsp;(making the space between two tiles&nbsp;<span class="inline2">2 * tile_vertical_separator</span>)</td></tr><tr><td>tile_columns</td><td style=""><span data-keyref="Type_Real"><a target="_blank" href="../../../GML_Overview/Data_Types.htm">Real</a></span></td><td style="">The&nbsp;number of columns on each row of the tile set</td></tr><tr><td>tile_count</td><td style=""><span data-keyref="Type_Real"><a target="_blank" href="../../../GML_Overview/Data_Types.htm">Real</a></span></td><td style="">The&nbsp;number of tiles</td></tr><tr><td>frame_count</td><td style=""><span data-keyref="Type_Real"><a target="_blank" href="../../../GML_Overview/Data_Types.htm">Real</a></span></td><td style="">The number of frames of animation per animation</td></tr><tr><td>frame_length_ms</td><td style=""><span data-keyref="Type_Real_int64"><a target="_blank" href="../../../GML_Overview/Data_Types.htm">int64 (signed 64-bit integer)</a></span></td><td style="">The&nbsp;number of milliseconds for frame animation</td></tr><tr><td>frames</td><td style=""><span data-keyref="Type_Struct"><a target="_blank" href="../../../GML_Overview/Structs.htm">Struct</a></span></td><td style="">A struct containing all the animation frames. Each tile number has a key in the struct, each entry is an array of the frames to use (each array should be <span class="inline2">frame_count</span> long).</td></tr></tbody></table><p>&nbsp;</p><h4>Syntax:</h4><p class="code"><span data-field="title" data-format="default">tileset_get_info</span>(index);</p><table><colgroup><col><col><col></colgroup><tbody><tr><th>Argument</th><th>Type</th><th>Description</th></tr><tr><td>index</td><td><span data-keyref="Type_Asset_Tile_Set"><a target="_blank" href="../../../../The_Asset_Editors/Tile_Sets.htm">Tile Set Asset</a></span></td><td>The tile set to get the info from</td></tr></tbody></table><p>&nbsp;</p><h4>Returns:</h4><p class="code"><span data-keyref="Type_Struct_TileSet_Info"><a target="_blank" href="tileset_get_info.htm">Tile Set Info Struct</a></span>&nbsp;(in case of a valid&nbsp;<span data-keyref="Type_Asset_Tile_Set"><a target="_blank" href="../../../../The_Asset_Editors/Tile_Sets.htm">Tile Set Asset</a></span>) or&nbsp;<span data-keyref="Type_Undefined"><a target="_blank" href="../../../GML_Overview/Data_Types.htm">undefined</a></span>&nbsp;(no valid tile set given)</p><p>&nbsp;</p><h4>Example 1: Showing the output&nbsp;</h4><p class="code">var _info =&nbsp;<span data-field="title" data-format="default">tileset_get_info</span>(ts_Forest);<br>show_debug_message(_info);</p><p>The above code calls&nbsp;<span class="inline2"><span data-field="title" data-format="default">tileset_get_info</span></span>&nbsp;to get information about an existing tile set <span class="inline2">ts_Forest</span>&nbsp;and stores the result in a temporary variable <span class="inline2">_info</span>. The info is then shown in a debug message.</p><p>&nbsp;</p><h4>Example 2:&nbsp;Finding the top-left corner position of a tile</h4><p class="code">// tnumber is the number of the tile that you want to find<br>var _tnumber = 7;<br>var _ts_info = <span data-field="title" data-format="default">tileset_get_info</span>(ts_Forest);<br>if (is_undefined(_ts_info) == false)<br>{<br>&nbsp; &nbsp; var _twidth = _ts_info.tile_width + 2 * _ts_info.tile_horizontal_separator;<br>&nbsp; &nbsp; var _theight = _ts_info.tile_height + 2 * _ts_info.tile_vertical_separator;<br>&nbsp; &nbsp; var _tile_x = (_tnumber mod _ts_info.tile_columns) * _twidth;<br>&nbsp; &nbsp;&nbsp;var _tile_y = (_tnumber div _ts_info.tile_columns) * _theight;<br>&nbsp; &nbsp; show_debug_message("The top-left coordinates of tile index {0} are: ({1}, {2})", _tnumber, _tile_x, _tile_y);<br>}<br>else<br>{<br>&nbsp; &nbsp; show_debug_message("No valid tile set was provided to the function");<br>}</p><p>The above code finds the coordinates of the top-left corner of the given tile index. First the index of the tile is defined and stored in a temporary variable <span class="inline2">_tnumber</span>. Then&nbsp;<span class="inline2"><span data-field="title" data-format="default">tileset_get_info</span></span>&nbsp;is called on an existing tile set <span class="inline2">ts_Forest</span>&nbsp;and the returned struct is stored in <span class="inline2">_ts_info</span>. Next an if statement checks if the variable contains a valid struct (accessing the variables in the next steps will throw errors otherwise).<br>If it does, some variables are calculated. <span class="inline2">_twidth</span> and <span class="inline2">_theight</span>&nbsp;are the total width and height of a tile on the tile set, including the border on both sides (<span class="inline2">_ts_info.tile_horizontal_separator</span> and&nbsp;<span class="inline2">_ts_info.tile_vertical_separator</span>) <span class="inline2">_tile_x</span> is the remainder of the tile index divided by the number of columns and <span class="inline2">_tile_y</span>&nbsp;is the number of times <span class="inline2">_ts_info.tile_columns</span> fits into the tile index. After this, a debug message is shown with the top-left coordinates (the separator offsets not yet included).<br>If the case an invalid tile set was provided to the function a different debug message is shown.</p><p>&nbsp;</p><p>&nbsp;</p><div class="footer"><div class="buttons"><div class="clear"><div>Back:&nbsp;<a href="Tile_Sets.htm">Tile Sets</a></div><div>Next:&nbsp;<a href="tileset_get_name.htm">tileset_get_name</a></div></div></div><h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2024 All Rights Reserved</span></h5></div></body></html>