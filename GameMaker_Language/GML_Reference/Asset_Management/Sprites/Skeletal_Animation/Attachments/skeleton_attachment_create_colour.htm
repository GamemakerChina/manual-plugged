<!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml"><head><script type="text/javascript" src="../../../../../../assets/import/jquery-3.6.1.min.js"></script><script type="text/javascript" src="../../../../../../assets/import/layer/layer.js"></script><script type="text/javascript" src="../../../../../../assets/import/pangu.min.js"></script><link rel="stylesheet" type="text/css" href="../../../../../../assets/import/layer/layui_btn.css"><link rel="stylesheet" type="text/css" href="../../../../../../assets/import/layer/layui_col.css"><link rel="stylesheet" type="text/css" href="../../../../../../assets/import/layer/theme/default/layer.css"><link rel="stylesheet" type="text/css" href="../../../../../../assets/import/main.css"><script>let str;removeHtml=function(t){return t=(t=(t=(t=t.replace(/(<([^>]+)>)/gi,"{}")).replace(/\r\n/g,"\n")).replace(/\n/g,"")).replace(/ {2,}/g," ")},retHtml=function(t){return t.match(/(<([^>]+)>)/gi)},setTranslator=function(t,e,a){let o;o=a?t.attr(a):t.html();let i=e[removeHtml(o)];if(null!=i&&i.length){e=retHtml(o);let n=0;e&&e.forEach(function(t,e){var a=i.replace("{"+n+"}",t);i=a===i?i.replace("{}",t):a,n++}),a?t.attr(a,i):t.html(i)}},noTranslationState=function(){return"true"==window.localStorage.getItem("noTranslationState")},noTranslationStateToggle=function(){window.localStorage.setItem("noTranslationState",!noTranslationState())},addNoTranslationStateButton=function(){var t=`
		
		<button style="
			float: right;
			font-size: 16px;
			padding: 4px 12px;
		"
		onclick="
		window.location.replace('gmmt://'+document.location.hash)
		"
		>打开编辑器</button>

		<button style="
			float: right;
			font-size: 16px;
			padding: 4px 12px;
		"
		onclick="
		noTranslationStateToggle();
		location.reload();
    	event.stopPropagation();
		"
		>切换翻译</button>
		`;$(".header").length?$(".header").append(t):($(".topic-header").append(t),$(".topic-header button").css("position","relative").css("top","44px"))},removeExtensionFromHash=function(t){return t.replaceAll("#t=","").replaceAll("%2F","/").replaceAll(".htm","")};let json_global,json_file={"It is worth noting that the instance sprite can have a blend colour and alpha setting ({}{}image_blend{}{} and {}{}image_alpha{}{}), as can the attachment slot (see the function {}{}skeleton_slot_colour_set(){}{}), and so the final colour and alpha that the assigned attachment sprite for the slot will have will be a composite of all these values.":"值得注意的是，实例sprite可以有一个混合颜色和alpha设置({}{}image_blend{}{}和{}{}image_alpha{}{})，附件槽也是如此(请参阅函数{}{}skeleton_slot_colour_set(){}{})。因此，为该插槽分配的附件精灵将具有的最终颜色和阿尔法将是所有这些值的合成。",'The above code would check the currently assigned attachment name for the slot named "slot_leftHand" and if an empty string is returned, a new sprite is attached.':'上面的代码将检查当前为名为"插槽_LeftHand "的插槽分配的附件名称，如果返回空字符串，则附加新的精灵。',"The alpha value to use (from 0 to 1).":"要使用的alpha值(从0到1)。","The colour value to use (A constant, integer or hex value).":"要使用的颜色值(常量、整数或十六进制值)。","The horizontal scaling of the image, as a multiplier: 1 = normal scaling, 0.5 is half etc...":"图像的水平缩放，作为乘数：1=正常缩放，0.5为一半等。","The image_index to get the attachment image from.":"要从中获取附件图像的image_index。","The name (as a string) of the attachment to create.":"要创建的附件的名称(字符串形式)。","The rotation of the image: 0 = normal, 90 = turned 90° counter-clockwise etc.":"图像的旋转：0=正常，90=逆时针旋转90°等。","The sprite_index to get the attachment image from.":"要从中获取附件图像的精灵_索引。","The vertical scaling of the image, as a multiplier: 1 = normal scaling, 0.5 is half etc...":"图像的垂直缩放，作为乘数：1=正常缩放，0.5为一半等。","The x origin for the image being used.":"正在使用的图像的X原点。","The y origin for the image being used.":"正在使用的图像的Y原点。","When you create you skeletal animation sprite, you can assign {}attachment slots{} and {}attachments{} to go in them. These are simply images (sprites) that are separate from the animation but when attached will move along with the bone they are attached to. Normally you would assign these attachments in your animation program (Spine), but with this function you can create your own at run-time using a sprite asset from your game. the function requires that you give the attachment a name (as a string) and then set the {}{}sprite_index{}{} and {}{}image_index{}{} to use, as well as the x and y origin (which can be different to that defined by the sprite in the sprite properties), and you can also set any transforms that you wish to be applied to the image when attached, as well as the colour to be blended with the image and it's alpha (transparency) value. If the attachment was successfully created the function will return {}1{} and if it was not (you supplied an invalid sprite index, or the base sprite is not a Spine sprite) then it will return {}-1{}.":"当你创建你的骨骼动画精灵时，你可以指定{}附件插槽{}和{}附件{}进入其中。这些只是与动画分离的图像(精灵)，但在附加时将与它们附加到的骨骼一起移动。通常你会在你的动画程序(脊柱)中指定这些附件，但有了这个函数，你可以在运行时使用游戏中的精灵资源创建自己的附件。该函数要求您为附件提供一个名称(作为一个字符串)，然后设置要使用的{}{}sprite_index{}{}和{}{}image_index{}{}，以及X和y原点(可以不同于精灵属性中的精灵所定义的原点)。此外，您还可以设置附加时要应用于图像的任何变换，以及要与图像混合的颜色及其Alpha(透明度)值。如果附件创建成功，该函数将返回{}1{}，如果未成功创建(您提供了无效的精灵索引，或者基础sprite不是脊柱sprite)，则该函数将返回{}-1{}。","{}{}NOTE{}{}&nbsp;In case there is a possibility that an attachment with the given name already exists you can check this using&nbsp;{}{}skeleton_attachment_exists{}{}, as trying to create an attachment with an existing name will throw an error.":"{}{}注意{}{}如果具有给定名称的附件可能已经存在，您可以使用{}{}skeleton_attachment_exists{}{}进行检查，因为尝试使用现有名称创建附件将引发错误。"},get_json_global=$.ajax({url:"/global.json",type:"GET",dataType:"json",async:!1,success:function(t){json_global=t}});$(function(){if(addNoTranslationStateButton(),noTranslationState())return!1;$("div.footer a,h4,caption").each(function(){setTranslator($(this),json_global)}),$("p,h1,h2,h3,td,li,a,div.dropspotnote,figcaption").each(function(){setTranslator($(this),json_file)}),$("th,.warning,.important,.optional").each(function(){setTranslator($(this),json_global)}),$(".header").length&&(window.setInterval(function(){$("#toc-panel a:not('isTranslate')").each(function(){$(this).addClass("isTranslate"),setTranslator($(this),json_global)}),$(".GlossDefinitionText:not('isTranslate')").each(function(){$(this).addClass("isTranslate"),setTranslator($(this),json_global)})},250),console.log("成功啦!现在正在疯狂翻译菜单中!")),$(".tooltip").each(function(){setTranslator($(this),json_global,"title")})}),document.addEventListener("DOMContentLoaded",()=>{pangu.autoSpacingPage()})</script><script type="text/javascript" language="JavaScript">function reDo(){innerWidth==origWidth&&innerHeight==origHeight||location.reload()}4==parseInt(navigator.appVersion)&&"Netscape"==navigator.appName&&(origWidth=innerWidth,origHeight=innerHeight,onresize=reDo),onerror=null</script><style type="text/css">p.WebHelpNavBar{text-align:right}</style><script type="text/javascript">gCommonRootRelPath=gRootRelPath="../../../../../..",gTopicId="8.2.2.3.3.4.3.0_5"</script><script type="text/javascript" src="../../../../../../template/scripts/rh.min.js"></script><script type="text/javascript" src="../../../../../../template/scripts/common.min.js"></script><script type="text/javascript" src="../../../../../../template/scripts/topic.min.js"></script><script type="text/javascript" src="../../../../../../template/scripts/topicwidgets.min.js"></script><script type="text/javascript" src="../../../../../../whxdata/projectsettings.js"></script><link rel="stylesheet" type="text/css" href="../../../../../../template/styles/topic.min.css"><link rel="stylesheet" type="text/css" href="../../../../../../template/Charcoal_Grey/topicheader.css"><meta name="topic-status" content="Draft"><meta http-equiv="Content-Type" content="text/html; charset=utf-8"><title>skeleton_attachment_create_colour</title><meta name="generator" content="Adobe RoboHelp 2022"><link rel="stylesheet" href="../../../../../../assets/css/default.css" type="text/css"><script src="../../../../../../assets/scripts/main_script.js" type="module"></script><meta name="rh-authors" content="Mark Alexander"><meta name="topic-comment" content="Page explaining the function skeleton_attachment_create_colour"><meta name="rh-index-keywords" content="skeleton_attachment_create_colour,skeleton_attachment_create_color"><meta name="search-keywords" content="skeleton_attachment_create_colour,skeleton_attachment_create_color"><meta name="is_pure" content="true"><meta name="brsnext" value="GameMaker_Language/GML_Reference/Asset_Management/Sprites/Skeletal_Animation/Attachments/skeleton_attachment_replace.htm"><meta name="brsprev" value="GameMaker_Language/GML_Reference/Asset_Management/Sprites/Skeletal_Animation/Attachments/skeleton_attachment_create.htm"></head><body><div class="topic-header rh-hide" id="rh-topic-header"><div class="logo"></div><div class="nav"><div class="title" title="skeleton_attachment_create_colour"><span>skeleton_attachment_create_colour</span></div><div class="gotohome" title="Click here to see this page in full context"><a href="#" onclick="rh._.goToFullLayout()">Click here to see this page in full context</a></div></div></div><div class="topic-header-shadow rh-hide" id="rh-topic-header-shadow"></div><h1><span data-field="title" data-format="default">skeleton_attachment_create_colour</span></h1><p>When you create you skeletal animation sprite, you can assign <i>attachment slots</i> and <i>attachments</i> to go in them. These are simply images (sprites) that are separate from the animation but when attached will move along with the bone they are attached to. Normally you would assign these attachments in your animation program (Spine), but with this function you can create your own at run-time using a sprite asset from your game. the function requires that you give the attachment a name (as a string) and then set the <a href="../../Sprite_Instance_Variables/sprite_index.htm"><span class="inline">sprite_index</span></a> and <a href="../../Sprite_Instance_Variables/image_index.htm"><span class="inline">image_index</span></a> to use, as well as the x and y origin (which can be different to that defined by the sprite in the sprite properties), and you can also set any transforms that you wish to be applied to the image when attached, as well as the colour to be blended with the image and it's alpha (transparency) value. If the attachment was successfully created the function will return <span class="inline">1</span> and if it was not (you supplied an invalid sprite index, or the base sprite is not a Spine sprite) then it will return <span class="inline">-1</span>.</p><p>It is worth noting that the instance sprite can have a blend colour and alpha setting (<a href="../../Sprite_Instance_Variables/image_blend.htm"><span class="inline">image_blend</span></a> and <a href="../../Sprite_Instance_Variables/image_alpha.htm"><span class="inline">image_alpha</span></a>), as can the attachment slot (see the function <a href="../Slots/skeleton_slot_colour_set.htm"><span class="inline">skeleton_slot_colour_set()</span></a>), and so the final colour and alpha that the assigned attachment sprite for the slot will have will be a composite of all these values.</p><div data-conref="../../../../../../assets/snippets/Skeleton_attachment_exists_before_create.hts"><p class="note"><span data-conref="../../../../../../assets/snippets/Tag_note.hts"><span class="note">NOTE</span></span>&nbsp;In case there is a possibility that an attachment with the given name already exists you can check this using&nbsp;<span class="inline2"><a href="skeleton_attachment_exists.htm">skeleton_attachment_exists</a></span>, as trying to create an attachment with an existing name will throw an error.</p></div><h4>Syntax:</h4><p class="code"><span data-field="title" data-format="default">skeleton_attachment_create_colour</span>(name, sprite, ind, xorigin, yorigin, xscale, yscale, rot, colour, alpha);</p><table><tbody><tr><th>Argument</th><th>Type</th><th>Description</th></tr><tr><td>name</td><td><span data-keyref="Type_String"><a target="_blank" href="../../../../../GML_Overview/Data_Types.htm">String</a></span></td><td>The name (as a string) of the attachment to create.</td></tr><tr><td>sprite</td><td><span data-keyref="Type_Asset_Sprite"><a target="_blank" href="../../../../../../The_Asset_Editors/Sprites.htm">Sprite Asset</a></span></td><td>The sprite_index to get the attachment image from.</td></tr><tr><td>ind</td><td><span data-keyref="Type_Real"><a target="_blank" href="../../../../../GML_Overview/Data_Types.htm">Real</a></span></td><td>The image_index to get the attachment image from.</td></tr><tr><td>xorigin</td><td><span data-keyref="Type_Real"><a target="_blank" href="../../../../../GML_Overview/Data_Types.htm">Real</a></span></td><td>The x origin for the image being used.</td></tr><tr><td>yorigin</td><td><span data-keyref="Type_Real"><a target="_blank" href="../../../../../GML_Overview/Data_Types.htm">Real</a></span></td><td>The y origin for the image being used.</td></tr><tr><td>xscale</td><td><span data-keyref="Type_Real"><a target="_blank" href="../../../../../GML_Overview/Data_Types.htm">Real</a></span></td><td>The horizontal scaling of the image, as a multiplier: 1 = normal scaling, 0.5 is half etc...</td></tr><tr><td>yscale</td><td><span data-keyref="Type_Real"><a target="_blank" href="../../../../../GML_Overview/Data_Types.htm">Real</a></span></td><td>The vertical scaling of the image, as a multiplier: 1 = normal scaling, 0.5 is half etc...</td></tr><tr><td>rot</td><td><span data-keyref="Type_Real"><a target="_blank" href="../../../../../GML_Overview/Data_Types.htm">Real</a></span></td><td>The rotation of the image: 0 = normal, 90 = turned 90° counter-clockwise etc.</td></tr><tr><td>Colour</td><td><span data-keyref="Type_Constant_Colour"><a target="_blank" href="../../../../Drawing/Colour_And_Alpha/Colour_And_Alpha.htm">Colour</a></span></td><td>The colour value to use (A constant, integer or hex value).</td></tr><tr><td>Alpha</td><td><span data-keyref="Type_Real"><a target="_blank" href="../../../../../GML_Overview/Data_Types.htm">Real</a></span></td><td>The alpha value to use (from 0 to 1).</td></tr></tbody></table><p>&nbsp;</p><h4>Returns:</h4><p class="code"><span data-keyref="Type_Real"><a target="_blank" href="../../../../../GML_Overview/Data_Types.htm">Real</a></span> (1 if successful, -1 if not)</p><p>&nbsp;</p><h4>Example:</h4><p class="code"><span data-field="title" data-format="default">skeleton_attachment_create_colour</span>("sword", spr_Weapons, 0, 0, 80, 1, 1, 90, c_red, 1);<br><span data-field="title" data-format="default">skeleton_attachment_create_colour</span>("knife", spr_Weapons, 1, 0, 45, 1, 1, 90, c_yellow, 1);<br><span data-field="title" data-format="default">skeleton_attachment_create_colour</span>("crossbow", spr_Weapons, 0, 10, 30, 1, 1, 0, c_white, 0.5);<br>skeleton_attachment_set("slot_leftHand", choose("sword", "knife", "crossbow"));</p><p>The above code would check the currently assigned attachment name for the slot named "slot_leftHand" and if an empty string is returned, a new sprite is attached.</p><p>&nbsp;</p><p>&nbsp;</p><div class="footer"><div class="buttons"><div class="clear"><div style="float:left">Back:&nbsp;<a href="Attachments.htm">Attachments</a></div><div style="float:right">Next:&nbsp;<a href="skeleton_attachment_replace.htm">skeleton_attachment_replace</a></div></div></div><h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2024 All Rights Reserved</span></h5></div></body></html>