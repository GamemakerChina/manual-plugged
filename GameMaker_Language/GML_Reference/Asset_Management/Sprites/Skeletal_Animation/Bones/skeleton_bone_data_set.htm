<!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml"><head><script type="text/javascript" src="../../../../../../assets/import/jquery-3.6.1.min.js"></script><script type="text/javascript" src="../../../../../../assets/import/layer/layer.js"></script><script type="text/javascript" src="../../../../../../assets/import/pangu.min.js"></script><link rel="stylesheet" type="text/css" href="../../../../../../assets/import/layer/layui_btn.css"><link rel="stylesheet" type="text/css" href="../../../../../../assets/import/layer/layui_col.css"><link rel="stylesheet" type="text/css" href="../../../../../../assets/import/layer/theme/default/layer.css"><link rel="stylesheet" type="text/css" href="../../../../../../assets/import/main.css"><script>let str;removeHtml=function(t){return t=(t=(t=(t=t.replace(/(<([^>]+)>)/gi,"{}")).replace(/\r\n/g,"\n")).replace(/\n/g,"")).replace(/ {2,}/g," ")},retHtml=function(t){return t.match(/(<([^>]+)>)/gi)},setTranslator=function(t,e,a){let o;o=a?t.attr(a):t.html();let l=e[removeHtml(o)];if(null!=l&&l.length){e=retHtml(o);let n=0;e&&e.forEach(function(t,e){var a=l.replace("{"+n+"}",t);l=a===l?l.replace("{}",t):a,n++}),a?t.attr(a,l):t.html(l)}},noTranslationState=function(){return"true"==window.localStorage.getItem("noTranslationState")},noTranslationStateToggle=function(){window.localStorage.setItem("noTranslationState",!noTranslationState())},addNoTranslationStateButton=function(){var t=`
		
		<button style="
			float: right;
			font-size: 16px;
			padding: 4px 12px;
		"
		onclick="
		window.location.replace('gmmt://'+document.location.hash)
		"
		>打开编辑器</button>

		<button style="
			float: right;
			font-size: 16px;
			padding: 4px 12px;
		"
		onclick="
		noTranslationStateToggle();
		location.reload();
    	event.stopPropagation();
		"
		>切换翻译</button>
		`;$(".header").length?$(".header").append(t):($(".topic-header").append(t),$(".topic-header button").css("position","relative").css("top","44px"))},removeExtensionFromHash=function(t){return t.replaceAll("#t=","").replaceAll("%2F","/").replaceAll(".htm","")};let json_global,json_file={"The (previously created) DS map that stores the bone data.":"存储骨骼数据的(先前创建的)DS map。",'The above code creates a DS map and then populates it with the data from the bone named "head". It then replaces the "parent" bone key in the map with a new value and sets the "head" bone again with the new set of data.':'上面的代码创建了一个DSmap，然后用名为" Head "的骨骼中的数据填充它。然后，它用新值替换贴图中的"parent"骨骼关键点，并用新的数据集再次设置"head"骨骼。',"The name (as a string) of the bone.":"骨骼的名称(作为字符串)。",'Your skeletal animation is made up of a number of "bones", which you will have defined and given names to in your animation program, and this function can be used to set certain data for the named bone at any time. Note that this data refers to the {}default{} pose for the skeleton, and {}not{} the current pose that is being drawn (for that use the function {}{}skeleton_bone_state_set(){}{}), and must be set from a previously created {}DS map{}, which should have the following keys and their equivalent values:':'骨骼动画由许多"骨骼"组成，您将在动画程序中定义这些骨骼并为其命名，此函数可用于随时为命名的骨骼设置某些数据。请注意，此数据指的是骨骼的{}默认{}姿势，而{}不是{}正在绘制的当前姿势(对于该姿势，请使用函数{}{}skeleton_bone_state_set(){}{})，并且必须从先前创建的{}DS Map{}中设置，该映射应具有以下关键帧及其等效值：','{}"angle":{} The local rotation of the bone relative to the parent bone.':'{}"angle"：{}骨骼相对于父骨骼的局部旋转。','{}"parent":{} The name (a string) of the parent bone.':'{}" parent "：{}父骨骼的名称(字符串)。','{}"x":{} The local x position of the bone relative to the parent bone.':'{}" X "：{}骨骼相对于父骨骼的局部X位置。','{}"xscale":{} The local horizontal scale of the bone.':'{}" xScale "：{}骨骼的局部水平比例。','{}"y":{} The local y position of the bone relative to the parent bone.':'{}" Y "：{}骨骼相对于父骨骼的局部Y位置。','{}"yscale":{} The local vertical scale of the bone.':'{}" yScale "：{}骨骼的局部垂直比例。'},get_json_global=$.ajax({url:"/global.json",type:"GET",dataType:"json",async:!1,success:function(t){json_global=t}});$(function(){if(addNoTranslationStateButton(),noTranslationState())return!1;$("div.footer a,h4,caption").each(function(){setTranslator($(this),json_global)}),$("p,h1,h2,h3,td,li,a,div.dropspotnote,figcaption").each(function(){setTranslator($(this),json_file)}),$("th,.warning,.important,.optional").each(function(){setTranslator($(this),json_global)}),$(".header").length&&(window.setInterval(function(){$("#toc-panel a:not('isTranslate')").each(function(){$(this).addClass("isTranslate"),setTranslator($(this),json_global)}),$(".GlossDefinitionText:not('isTranslate')").each(function(){$(this).addClass("isTranslate"),setTranslator($(this),json_global)})},250),console.log("成功啦!现在正在疯狂翻译菜单中!")),$(".tooltip").each(function(){setTranslator($(this),json_global,"title")})}),document.addEventListener("DOMContentLoaded",()=>{pangu.autoSpacingPage()})</script><script type="text/javascript" language="JavaScript">function reDo(){innerWidth==origWidth&&innerHeight==origHeight||location.reload()}4==parseInt(navigator.appVersion)&&"Netscape"==navigator.appName&&(origWidth=innerWidth,origHeight=innerHeight,onresize=reDo),onerror=null</script><style type="text/css">p.WebHelpNavBar{text-align:right}</style><script type="text/javascript">gCommonRootRelPath=gRootRelPath="../../../../../..",gTopicId="8.2.2.3.3.4.4.0_2"</script><script type="text/javascript" src="../../../../../../template/scripts/rh.min.js"></script><script type="text/javascript" src="../../../../../../template/scripts/common.min.js"></script><script type="text/javascript" src="../../../../../../template/scripts/topic.min.js"></script><script type="text/javascript" src="../../../../../../template/scripts/topicwidgets.min.js"></script><script type="text/javascript" src="../../../../../../whxdata/projectsettings.js"></script><link rel="stylesheet" type="text/css" href="../../../../../../template/styles/topic.min.css"><link rel="stylesheet" type="text/css" href="../../../../../../template/Charcoal_Grey/topicheader.css"><meta name="topic-status" content="Draft"><meta http-equiv="Content-Type" content="text/html; charset=utf-8"><title>skeleton_bone_data_set</title><meta name="generator" content="Adobe RoboHelp 2022"><link rel="stylesheet" href="../../../../../../assets/css/default.css" type="text/css"><script src="../../../../../../assets/scripts/main_script.js" type="module"></script><meta name="rh-authors" content="Mark Alexander"><meta name="topic-comment" content="Page explaining the function skeleton_bone_data_set"><meta name="rh-index-keywords" content="skeleton_bone_data_set"><meta name="search-keywords" content="skeleton_bone_data_set"><meta name="brsnext" value="GameMaker_Language/GML_Reference/Asset_Management/Sprites/Skeletal_Animation/Bones/skeleton_bone_state_get.htm"><meta name="brsprev" value="GameMaker_Language/GML_Reference/Asset_Management/Sprites/Skeletal_Animation/Bones/skeleton_bone_data_get.htm"></head><body><div class="topic-header rh-hide" id="rh-topic-header"><div class="logo"></div><div class="nav"><div class="title" title="skeleton_bone_data_set"><span>skeleton_bone_data_set</span></div><div class="gotohome" title="Click here to see this page in full context"><a href="#" onclick="rh._.goToFullLayout()">Click here to see this page in full context</a></div></div></div><div class="topic-header-shadow rh-hide" id="rh-topic-header-shadow"></div><h1>skeleton_bone_data_set</h1><p>Your skeletal animation is made up of a number of "bones", which you will have defined and given names to in your animation program, and this function can be used to set certain data for the named bone at any time. Note that this data refers to the <b>default</b> pose for the skeleton, and <i>not</i> the current pose that is being drawn (for that use the function <a href="skeleton_bone_state_set.htm"><span class="inline">skeleton_bone_state_set()</span></a>), and must be set from a previously created <a href="../../../../Data_Structures/DS_Maps/DS_Maps.htm">DS map</a>, which should have the following keys and their equivalent values:</p><ul class="colour"><li><b>"x":</b> The local x position of the bone relative to the parent bone.</li><li><b>"y":</b> The local y position of the bone relative to the parent bone.</li><li><b>"angle":</b> The local rotation of the bone relative to the parent bone.</li><li><b>"xscale":</b> The local horizontal scale of the bone.</li><li><b>"yscale":</b> The local vertical scale of the bone.</li><li><b>"parent":</b> The name (a string) of the parent bone.</li></ul><p>&nbsp;</p><h4>Syntax:</h4><p class="code">skeleton_bone_data_set(bone, map);</p><table><tbody><tr><th>Argument</th><th>Type</th><th>Description</th></tr><tr><td>bone</td><td><span data-keyref="Type_String"><a target="_blank" href="../../../../../GML_Overview/Data_Types.htm">String</a></span></td><td>The name (as a string) of the bone.</td></tr><tr><td>map</td><td><span data-keyref="Type_ID_DS_Map"><a target="_blank" href="../../../../Data_Structures/DS_Maps/ds_map_create.htm">DS Map</a></span></td><td>The (previously created) DS map that stores the bone data.</td></tr></tbody></table><p>&nbsp;</p><h4>Returns:</h4><p class="code"><span data-keyref="Type_Void">N/A</span></p><p>&nbsp;</p><h4>Example:</h4><p class="code">var bone_map = ds_map_create();<br>skeleton_bone_data_get("head", bone_map);<br>ds_map_replace(bone_map, "parent", "body");<br>skeleton_bone_data_set("head", bone_map);<br>ds_map_destroy(bone_map);</p><p>The above code creates a DS map and then populates it with the data from the bone named "head". It then replaces the "parent" bone key in the map with a new value and sets the "head" bone again with the new set of data.</p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><div class="footer"><div class="buttons"><div class="clear"><div style="float:left">Back: <a href="Bones.htm">Bones</a></div><div style="float:right">Next:&nbsp;<a href="skeleton_bone_state_get.htm">skeleton_bone_state_get</a></div></div></div><h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2024 All Rights Reserved</span></h5></div></body></html>