<!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml"><head><script type="text/javascript" src="../../../../../../assets/import/jquery-3.6.1.min.js"></script><script type="text/javascript" src="../../../../../../assets/import/layer/layer.js"></script><script type="text/javascript" src="../../../../../../assets/import/pangu.min.js"></script><link rel="stylesheet" type="text/css" href="../../../../../../assets/import/layer/layui_btn.css"><link rel="stylesheet" type="text/css" href="../../../../../../assets/import/layer/layui_col.css"><link rel="stylesheet" type="text/css" href="../../../../../../assets/import/layer/theme/default/layer.css"><link rel="stylesheet" type="text/css" href="../../../../../../assets/import/main.css"><script>let str;removeHtml=function(e){return e=(e=(e=(e=e.replace(/(<([^>]+)>)/gi,"{}")).replace(/\r\n/g,"\n")).replace(/\n/g,"")).replace(/ {2,}/g," ")},retHtml=function(e){return e.match(/(<([^>]+)>)/gi)},setTranslator=function(e,t,a){let n;n=a?e.attr(a):e.html();let l=t[removeHtml(n)];if(null!=l&&l.length){t=retHtml(n);let o=0;t&&t.forEach(function(e,t){var a=l.replace("{"+o+"}",e);l=a===l?l.replace("{}",e):a,o++}),a?e.attr(a,l):e.html(l)}},noTranslationState=function(){return"true"==window.localStorage.getItem("noTranslationState")},noTranslationStateToggle=function(){window.localStorage.setItem("noTranslationState",!noTranslationState())},addNoTranslationStateButton=function(){var e=`
		
		<button style="
			float: right;
			font-size: 16px;
			padding: 4px 12px;
		"
		onclick="
		window.location.replace('gmmt://'+document.location.hash)
		"
		>打开编辑器</button>

		<button style="
			float: right;
			font-size: 16px;
			padding: 4px 12px;
		"
		onclick="
		noTranslationStateToggle();
		location.reload();
    	event.stopPropagation();
		"
		>切换翻译</button>
		`;$(".header").length?$(".header").append(e):($(".topic-header").append(e),$(".topic-header button").css("position","relative").css("top","44px"))},removeExtensionFromHash=function(e){return e.replaceAll("#t=","").replaceAll("%2F","/").replaceAll(".htm","")};let json_global,json_file={"The (previously created) DS map that stores the bone data.":"存储骨骼数据的(先前创建的)DS map。",'The above code creates a DS map and then populates it with the data from the bone named "head". It then extracts the world position for the bone, and uses that data to set the "angle" of the bone to track the mouse position in the game.':'上面的代码创建了一个DS map，然后用名为" Head "的骨骼中的数据填充它。然后，它提取骨骼的世界位置，并使用该数据来设置骨骼的"angle"，以跟踪游戏中的鼠标位置。','The map data returned is similar to that returned for the default pose when you use {}{}skeleton_bone_data_get(){}{}, only now you have the extra "world" keys. These refer to the position of the bone relative to the {}root{} (origin) of the skeletal animation sprite, and the returned values do not take into consideration any scaling or rotation that has been done by setting the built-in sprite variables like {}image_xscale{} or {}image_angle{}. The world values are {}read only{} and cannot be set.':'返回的贴图数据类似于使用{}{}skeleton_bone_data_get(){}{}时为默认姿势返回的贴图数据，只是现在您有了额外的" world "键。这些是指骨骼相对于骨骼动画精灵的{}根{}(原点)的位置，并且返回的值不考虑通过设置内置精灵变量(如{}image_xScale{}或{}}image_angle{})所进行的任何缩放或旋转。世界值为{}只读{}，无法设置。',"The name (as a string) of the bone.":"骨骼的名称(作为字符串)。",'This function is provided so that you can "intercept" animation data and modify it before it is drawn on the screen, and as such you would want to use it in the {}Other - Animation Update{} event, since this event is triggered just before the Draw Events.':'提供此函数是为了让您可以"拦截"动画数据，并在将其绘制到屏幕上之前对其进行修改，因此您可能希望在{}Other-Animation Update{}事件中使用它，因为此事件恰好在绘制事件之前触发。','Your skeletal animation is made up of a number of "bones", which you will have defined and given names to in your animation program, and this function can be used to get certain data for the named bone at any time. Note that this data refers to the {}current{} pose for the skeleton, depending on the animation set used, and the function requires a previously created {}DS map{}, which will then have the following keys and their equivalent values after calling the function:':'骨骼动画由许多"bones"组成，您将在动画程序中定义这些骨骼并为其命名，此函数可用于随时获取命名骨骼的某些数据。请注意，此数据是指骨骼的{}当前{}姿势，具体取决于所使用的动画集，并且该函数需要以前创建的{}DS map{}，调用该函数后，该贴图将具有以下关键点及其等效值：','{}"angle":{} The local rotation of the bone relative to the parent bone.':'{}"angle"：{}骨骼相对于父骨骼的局部旋转。','{}"appliedAngle":{} This is the local rotation used to pose the skeleton bones.':'{}" AppliedAngle "：{}这是用于设置骨骼姿势的局部旋转。','{}"parent":{} The name (a string) of the parent bone.':'{}" parent "：{}父骨骼的名称(字符串)。','{}"worldAngleX":{} The world rotation for the X axis (this is a {}read only{} value).':'{}" WorldAngLex "：{}X轴的世界旋转(这是一个{}只读{}值)。','{}"worldAngleY":{} The world rotation for the Y axis (this is a {}read only{} value).':'{}" WorldAngley "：{}Y轴的世界旋转(这是一个{}只读{}值)。','{}"worldScaleX":{} The magnitude (always positive) of the world scale X (this is a {}read only{} value).':'{}" WorldScaleX "：{}世界标度X的大小(始终为正)(这是一个{}只读{}值)。','{}"worldScaleY":{} The magnitude (always positive) of the world scale Y (this is a {}read only{} value).':'{}" WorldScaleY "：{}世界标度Y的大小(始终为正)(这是{}只读{}值)。','{}"worldX":{} The world X position (this is a {}read only{} value).':'{}" worldX "：{}世界X位置(这是一个{}只读{}值)。','{}"worldY":{} The world Y position (this is a {}read only{} value).':'{}" WorldY "：{}世界Y位置(这是一个{}只读{}值)。','{}"x":{} The local x position of the bone relative to the parent bone.':'{}" X "：{}骨骼相对于父骨骼的局部X位置。','{}"xscale":{} The local horizontal scale of the bone, in reference to the parent bone.':'{}" xScale "：{}骨骼的局部水平比例，参照父级骨骼。','{}"y":{} The local y position of the bone relative to the parent bone.':'{}" Y "：{}骨骼相对于父骨骼的局部Y位置。','{}"yscale":{} The local vertical scale of the bone, in reference to the parent bone.':'{}" yScale "：{}骨骼的局部垂直比例，参照父级骨骼。'},get_json_global=$.ajax({url:"/global.json",type:"GET",dataType:"json",async:!1,success:function(e){json_global=e}});$(function(){if(addNoTranslationStateButton(),noTranslationState())return!1;$("div.footer a,h4,caption").each(function(){setTranslator($(this),json_global)}),$("p,h1,h2,h3,td,li,a,div.dropspotnote,figcaption").each(function(){setTranslator($(this),json_file)}),$("th,.warning,.important,.optional").each(function(){setTranslator($(this),json_global)}),$(".header").length&&(window.setInterval(function(){$("#toc-panel a:not('isTranslate')").each(function(){$(this).addClass("isTranslate"),setTranslator($(this),json_global)}),$(".GlossDefinitionText:not('isTranslate')").each(function(){$(this).addClass("isTranslate"),setTranslator($(this),json_global)})},250),console.log("成功啦!现在正在疯狂翻译菜单中!")),$(".tooltip").each(function(){setTranslator($(this),json_global,"title")})}),document.addEventListener("DOMContentLoaded",()=>{pangu.autoSpacingPage()})</script><script type="text/javascript" language="JavaScript">function reDo(){innerWidth==origWidth&&innerHeight==origHeight||location.reload()}4==parseInt(navigator.appVersion)&&"Netscape"==navigator.appName&&(origWidth=innerWidth,origHeight=innerHeight,onresize=reDo),onerror=null</script><style type="text/css">p.WebHelpNavBar{text-align:right}</style><script type="text/javascript">gCommonRootRelPath=gRootRelPath="../../../../../..",gTopicId="8.2.2.3.3.4.4.0_3"</script><script type="text/javascript" src="../../../../../../template/scripts/rh.min.js"></script><script type="text/javascript" src="../../../../../../template/scripts/common.min.js"></script><script type="text/javascript" src="../../../../../../template/scripts/topic.min.js"></script><script type="text/javascript" src="../../../../../../template/scripts/topicwidgets.min.js"></script><script type="text/javascript" src="../../../../../../whxdata/projectsettings.js"></script><link rel="stylesheet" type="text/css" href="../../../../../../template/styles/topic.min.css"><link rel="stylesheet" type="text/css" href="../../../../../../template/Charcoal_Grey/topicheader.css"><meta name="topic-status" content="Draft"><meta http-equiv="Content-Type" content="text/html; charset=utf-8"><title>skeleton_bone_state_get</title><meta name="generator" content="Adobe RoboHelp 2022"><link rel="stylesheet" href="../../../../../../assets/css/default.css" type="text/css"><script src="../../../../../../assets/scripts/main_script.js" type="module"></script><meta name="rh-authors" content="Mark Alexander"><meta name="topic-comment" content="Page explaining the function skeleton_bone_state_get"><meta name="rh-index-keywords" content="skeleton_bone_state_get"><meta name="search-keywords" content="skeleton_bone_state_get"><meta name="is_pure" content="true"><meta name="brsnext" value="GameMaker_Language/GML_Reference/Asset_Management/Sprites/Skeletal_Animation/Bones/skeleton_bone_state_set.htm"><meta name="brsprev" value="GameMaker_Language/GML_Reference/Asset_Management/Sprites/Skeletal_Animation/Bones/skeleton_bone_data_set.htm"></head><body><div class="topic-header rh-hide" id="rh-topic-header"><div class="logo"></div><div class="nav"><div class="title" title="skeleton_bone_state_get"><span>skeleton_bone_state_get</span></div><div class="gotohome" title="Click here to see this page in full context"><a href="#" onclick="rh._.goToFullLayout()">Click here to see this page in full context</a></div></div></div><div class="topic-header-shadow rh-hide" id="rh-topic-header-shadow"></div><h1>skeleton_bone_state_get</h1><p>Your skeletal animation is made up of a number of "bones", which you will have defined and given names to in your animation program, and this function can be used to get certain data for the named bone at any time. Note that this data refers to the <b>current</b> pose for the skeleton, depending on the animation set used, and the function requires a previously created <a href="../../../../Data_Structures/DS_Maps/DS_Maps.htm">DS map</a>, which will then have the following keys and their equivalent values after calling the function:</p><ul class="colour"><li><b>"x":</b> The local x position of the bone relative to the parent bone.</li><li><b>"y":</b> The local y position of the bone relative to the parent bone.</li><li><b>"angle":</b> The local rotation of the bone relative to the parent bone.</li><li><b>"xscale":</b> The local horizontal scale of the bone, in reference to the parent bone.</li><li><b>"yscale":</b> The local vertical scale of the bone, in reference to the parent bone.</li><li><b>"worldScaleX":</b> The magnitude (always positive) of the world scale X (this is a <i>read only</i> value).</li><li><b>"worldScaleY":</b> The magnitude (always positive) of the world scale Y (this is a <i>read only</i> value).</li><li><b>"worldAngleX":</b> The world rotation for the X axis (this is a <i>read only</i> value).</li><li><b>"worldAngleY":</b> The world rotation for the Y axis (this is a <i>read only</i> value).</li><li><b>"worldX":</b> The world X position (this is a <i>read only</i> value).</li><li><b>"worldY":</b> The world Y position (this is a <i>read only</i> value).</li><li><b>"appliedAngle":</b> This is the local rotation used to pose the skeleton bones.</li><li><b>"parent":</b> The name (a string) of the parent bone.</li></ul><p>The map data returned is similar to that returned for the default pose when you use <a href="skeleton_bone_state_get.htm"><span class="inline">skeleton_bone_data_get()</span></a>, only now you have the extra "world" keys. These refer to the position of the bone relative to the <i>root</i> (origin) of the skeletal animation sprite, and the returned values do not take into consideration any scaling or rotation that has been done by setting the built-in sprite variables like <span class="inline">image_xscale</span> or <span class="inline">image_angle</span>. The world values are <i>read only</i> and cannot be set.</p><p>This function is provided so that you can "intercept" animation data and modify it before it is drawn on the screen, and as such you would want to use it in the <a href="../../../../../../The_Asset_Editors/Object_Properties/Other_Events.htm">Other - Animation Update</a> event, since this event is triggered just before the Draw Events.</p><p>&nbsp;</p><h4>Syntax:</h4><p class="code">skeleton_bone_state_get(bone, map);</p><table><tbody><tr><th>Argument</th><th>Type</th><th>Description</th></tr><tr><td>bone</td><td><span data-keyref="Type_String"><a target="_blank" href="../../../../../GML_Overview/Data_Types.htm">String</a></span></td><td>The name (as a string) of the bone.</td></tr><tr><td>map</td><td><span data-keyref="Type_ID_DS_Map"><a target="_blank" href="../../../../Data_Structures/DS_Maps/ds_map_create.htm">DS Map</a></span></td><td>The (previously created) DS map that stores the bone data.</td></tr></tbody></table><p>&nbsp;</p><p>&nbsp;</p><h4>Returns:</h4><p class="code"><span data-keyref="Type_Void">N/A</span></p><p>&nbsp;</p><h4>Example:</h4><p class="code">var map = ds_map_create();<br>skeleton_bone_state_get("head", map);<br>var xx = ds_map_find_value(map, "worldX");<br>var yy = ds_map_find_value(map, "worldY");<br>var deltax = mouse_x - (x + xx);<br>var deltay = mouse_y - (y + yy);<br>var angle = -radtodeg(arctan2(deltay, deltax));<br>ds_map_replace(map, "angle", angle);<br>skeleton_bone_state_set("head", map);<br>ds_map_destroy(map);</p><p>The above code creates a DS map and then populates it with the data from the bone named "head". It then extracts the world position for the bone, and uses that data to set the "angle" of the bone to track the mouse position in the game.</p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><div class="footer"><div class="buttons"><div class="clear"><div style="float:left">Back: <a href="Bones.htm">Bones</a></div><div style="float:right">Next:&nbsp;<a href="skeleton_bone_state_set.htm">skeleton_bone_state_set</a></div></div></div><h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2024 All Rights Reserved</span></h5></div></body></html>