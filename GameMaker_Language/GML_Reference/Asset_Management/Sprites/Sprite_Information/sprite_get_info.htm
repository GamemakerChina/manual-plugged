<!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml"><head><script type="text/javascript" src="../../../../../assets/import/jquery-3.6.1.min.js"></script><script type="text/javascript" src="../../../../../assets/import/layer/layer.js"></script><script type="text/javascript" src="../../../../../assets/import/pangu.min.js"></script><link rel="stylesheet" type="text/css" href="../../../../../assets/import/layer/layui_btn.css"><link rel="stylesheet" type="text/css" href="../../../../../assets/import/layer/layui_col.css"><link rel="stylesheet" type="text/css" href="../../../../../assets/import/layer/theme/default/layer.css"><link rel="stylesheet" type="text/css" href="../../../../../assets/import/main.css"><script>let str;removeHtml=function(e){return e=(e=(e=(e=e.replace(/(<([^>]+)>)/gi,"{}")).replace(/\r\n/g,"\n")).replace(/\n/g,"")).replace(/ {2,}/g," ")},retHtml=function(e){return e.match(/(<([^>]+)>)/gi)},setTranslator=function(e,t,i){let a;a=i?e.attr(i):e.html();let o=t[removeHtml(a)];if(null!=o&&o.length){t=retHtml(a);let n=0;t&&t.forEach(function(e,t){var i=o.replace("{"+n+"}",e);o=i===o?o.replace("{}",e):i,n++}),i?e.attr(i,o):e.html(o)}},noTranslationState=function(){return"true"==window.localStorage.getItem("noTranslationState")},noTranslationStateToggle=function(){window.localStorage.setItem("noTranslationState",!noTranslationState())},addNoTranslationStateButton=function(){var e=`
		
		<button style="
			float: right;
			font-size: 16px;
			padding: 4px 12px;
		"
		onclick="
		window.location.replace('gmmt://'+document.location.hash)
		"
		>打开编辑器</button>

		<button style="
			float: right;
			font-size: 16px;
			padding: 4px 12px;
		"
		onclick="
		noTranslationStateToggle();
		location.reload();
    	event.stopPropagation();
		"
		>切换翻译</button>
		`;$(".header").length?$(".header").append(e):($(".topic-header").append(e),$(".topic-header button").css("position","relative").css("top","44px"))},removeExtensionFromHash=function(e){return e.replaceAll("#t=","").replaceAll("%2F","/").replaceAll(".htm","")};let json_global,json_file={"&nbsp;{}NOTE{}: Please consult the {}Spine documentation{} for more information regarding Spine's internal variables.":"{}注意{}：有关 Spine 的内部变量的更多信息，请参考 {}Spine 文档 {}。","(Internal to Spine) Blend mode for the slot":"(Spine 内部) 插槽的混合模式","(Internal to Spine) Scale value on X":"(Spine 内部) X 轴上的缩放值","(Internal to Spine) Scale value on Y":"(Spine 内部) Y 轴上的缩放值","(Internal to Spine) Shear value on X":"(Spine 内部) X 轴上的剪切值","(Internal to Spine) Shear value on Y":"(Spine 内部) Y 轴上的剪切值","(Internal to Spine) The transform mode":"(Spine 内部) 变形模式","*&nbsp;{}NOTE{}: The dark color variables are only available if the slot has {}Tint Black{} enabled.":"*{}注意{}：深色变量仅在插槽启用了{}浅黑色{}时才可用。","*&nbsp;{}{}NOTE{}{} The dark colour variables are only available if the slot has {}Tint Black{} enabled.":"* {}{}注意{}{} 深色变量仅在插槽启用了{}浅黑色{}时才可用。","Alpha component of the slot's colour (0-1)":"插槽颜色的 Alpha 分量 (0-1)","Alpha component of the slot's {}dark {}colour (0-1)":"插槽的 {} 暗 {} 颜色的 Alpha 分量 (0-1)",'Array containing structs for each bone in this sprite&nbsp;(more information under "Spine Sprite Data")':'包含此精灵中每个骨骼的结构的数组("Spine 精灵数据"下的更多信息)','Array containing structs for each slot in this sprite&nbsp;(more information under "Spine Sprite Data")':'包含此精灵中每个槽的结构的数组("Spine 精灵数据"下的更多信息)',"Array containing the names of each animation in this sprite":"数组，包含此精灵中每个动画的名称。","Array containing the names of each skin in this sprite":"数组，包含此精灵中每个皮肤的名称。",'Array of broadcast messages for this sprite, where each broadcast message is a struct containing information on the message (more information under "General Sprite Data")':"此精灵的广播消息数组，其中每个广播消息都是一个包含有关该消息的信息的结构(“常规精灵数据”下的更多信息)",'Array of frames for this sprite, where each frame is a struct containing information on its texture&nbsp;(more information under "Bitmap Sprite Data")':"此精灵的帧数组，其中每个帧都是一个包含其纹理信息的结构(“位图精灵数据”下的更多信息)",'Array of frames for this sprite, where each frame is a struct containing information on its timing&nbsp;(more information under "General Sprite Data")':"此精灵的帧数组，其中每个帧都是一个包含其计时信息的结构(“常规精灵数据”下的更多信息)","Array of texture IDs used for the atlas":"用于图集的纹理ID的数组","Attachment name":"附件名称","Blue component of the slot's colour (0-1)":"插槽颜色的蓝色分量 (0-1)","Blue component of the slot's {}dark {}colour (0-1)":"插槽的 {} 暗 {} 颜色的蓝色分量 (0-1)","Green component of the slot's colour (0-1)":"插槽颜色的绿色分量 (0-1)","Green component of the slot's {}dark {}colour (0-1)":"插槽的 {} 暗 {} 颜色的绿色分量 (0-1)","Position of the bottom edge of the bounding box (in pixels)":"边界框下边缘的位置(以像素为单位)","Position of the left edge of the bounding box (in pixels)":"边界框左边缘的位置(以像素为单位)","Position of the right edge of the bounding box (in pixels)":"边界框右边缘的位置(以像素为单位)","Position of the top edge of the bounding box (in pixels)":"边界框上边缘的位置(以像素为单位)","Red component of the slot's colour (0-1)":"插槽颜色的红色分量 (0-1)","Red component of the slot's {}dark {}colour (0-1)":"插槽的 {} 暗 {} 颜色的红色分量 (0-1)","Sprite Info Struct":"精灵信息结构","The X offset from the left edge of the original image to the left edge of the cropped section":"从原始图像的左边缘到裁剪部分的左边缘的 X 偏移","The X position of this bone":"骨骼的 X 位置","The X position of this frame on its texture page (in pixels)":"此框架在其纹理页面上的 X 位置 (以像素为单位)","The Y offset from the top edge of the original image to the top edge of the cropped section":"从原始图像的左边缘到裁剪部分的左边缘的 Y 偏移","The Y position of this bone":"骨骼的 Y 位置","The Y position of this frame on its texture page (in pixels)":"此框架在其纹理页面上的 Y 位置 (以像素为单位)","The above code gets the info struct for the instance's sprite,&nbsp;and then checks if it's not {}undefined{} and that its type is 0 (meaning that it's a bitmap sprite). In that case, it gets the broadcast message&nbsp;array for that sprite and then runs a for loop to print each broadcast message (along with its frame) to the output log.":"上面的代码获取实例的精灵的信息结构，然后检查它是否不是{}undefined{}并且它的类型是0(意味着它是一个位图精灵)。在这种情况下，它获取该精灵的广播消息数组，然后运行 for 循环以将每个广播消息(及其帧)打印到输出日志。","The above code gets the info struct for the instance's sprite,&nbsp;and then checks if it's not&nbsp;{}{}{}undefined{}{}{} and that its type is 0 (meaning that it's a bitmap sprite). In that case, it gets the broadcast message&nbsp;array for that sprite and then runs a for loop to print each broadcast message (along with its frame) to the output log.":"上面的代码获取实例的精灵的信息结构，然后检查它是否不是 {}{}{}undefined{}{}{}，并且它的类型是 0( 意味着它是位图精灵)。在这种情况下，它获取该精灵的广播消息数组，然后运行 for 循环将每个广播消息 (及其帧) 输出到输出日志。","The actual height of the frame on the texture page after cropping and scaling":"裁剪和缩放后纹理页面上框架的实际高度","The actual width of the frame on the texture page after cropping and scaling (since {}GameMaker{} automatically trims the empty space around an image, and also scales it down if it doesn't fit)":"裁剪和缩放后纹理页面上框架的实际宽度 (因为 {}GameMaker{} 会自动裁剪图像周围的空白空间，如果不适合，也会缩小)","The broadcast message string":"广播消息字符串","The duration of this frame (in frames)":"此帧的持续时间(以帧为单位)","The frame speed set for the sprite (see:&nbsp;{}The Sprite Editor{})":"为精灵设置的帧速度(请参阅：{}精灵编辑器{})","The function returns a {}struct{} with the following variables:":"该函数将返回包含以下变量的{}结构{}：","The function will return {}undefined{} if the given sprite doesn't exist. Also note that information returned in this struct should be considered {}read-only{} as modifying any of these variables will not affect the sprite.":"如果给定的精灵不存在，该函数将返回{}undefined{}。另请注意，此结构中返回的信息应被视为{}只读{}，因为修改这些变量中的任何一个都不会影响精灵.","The image index of this frame":"此帧的图像索引","The index of the slot":"插槽的索引","The index of the sprite to get the information for.":"要获取其信息的精灵的索引。","The index of this bone":"骨骼的索引","The length of this bone":"骨骼的长度","The logical height of the frame (in pixels) used internally":"内部使用的帧的逻辑高度(以像素为单位)","The logical width of the frame (in pixels) used internally":"内部使用的帧的逻辑宽度(以像素为单位)","The name of the parent bone, or&nbsp;{}undefined{} if this bone doesn't have a parent":"父骨骼的名称，如果此骨骼没有父骨骼，则为 {}未定义(undefined){}","The name of the slot":"插槽的名称",'The name of the slot\'s bone, or {}"(none)"{} if there is no bone for this slot':'插槽骨骼的名称，如果该插槽没有骨骼，则为{}"(none)"{}',"The name of the sprite":"精灵的名称","The name of this bone":"骨骼的名称","The number of atlas textures used":"使用的图集纹理的数量","The number of masks in this sprite (will be greater than 1 if the sprite uses per-frame masks)":"此精灵中的遮罩数(如果精灵使用每帧遮罩，则大于1)","The number of sub-images (or frames) in the sprite":"精灵中的子图像(或帧)数","The original height of the frame (in pixels)":"帧的原始高度(以像素为单位)","The original width of the frame (in pixels)":"帧的原始宽度(以像素为单位)","The rotation of this bone":"骨骼的旋转值","The sections below contain information on the arrays and structs included in the returned struct based on the sprite type:":"以下部分包含有关基于精灵类型返回的结构中包含的数组和结构的信息：","The sprite's X offset/origin (in pixels)":"精灵的X偏移/原点(以像素为单位)","The sprite's Y offset/origin (in pixels)":"精灵的Y偏移/原点(以像素为单位)","The sprite's height (in pixels)":"精灵的高度(以像素为单位)","The sprite's width (in pixels)":"精灵的宽度(以像素为单位)","The texture page ID for this frame":"此框架的纹理页面 ID","The timing for the start of this frame (in frames)":"此帧开始的时间(以帧为单位)","The timing of this broadcast message from the start of the animation (in frames)":"该广播消息从动画开始的计时(以帧为单位)","The type of speed set for the sprite, either {}spritespeed_framespersecond{} or {}spritespeed_framespergameframe{}":"为精灵设置的速度类型，可以是 {}spritespeed_framespersecond{} 或 {}spritespeed_framespergameframe{}","The type of the sprite:{} {}0{} - Bitmap (Regular sprites){} {}1{} - SWF{} {}2{} - Spine ":"精灵的类型：{}{}0{}-Bitmap(常规精灵){}{}1{}-SWF{}{}2{}-Spine","The {}Nine Slice struct{} for this sprite, or {}undefined{} if it has no nine slice data":"此精灵的{}九宫格结构{}，或者{}undefined{}(如果它没有九宫格数据)","The {}bones{} variable is an array that contains information on all bones in the given Spine sprite. Each bone in this array is a struct containing the following variables:":"{}骨骼(bones){} 变量是一个数组，它包含给定 Spine 精灵中所有骨骼的信息。此数组中的每个骨骼都是一个包含以下变量的结构：","The {}frame_info{} variable is an array that contains information on the timings of the sprite's frames. Each frame in this array is a struct containing the following variables:":"{}帧信息(frame_info){} 变量是一个数组，它包含有关精灵帧的计时的信息。此数组中的每个帧都是一个包含以下变量的结构：","The {}frames{} variable is an array that contains information on the textures of the sprite's frames. Each frame in this array is a struct containing the following variables:":"{}帧(frames){} 变量是一个数组，它包含有关精灵帧的纹理的信息。此数组中的每个帧都是一个包含以下变量的结构：","The {}messages{} variable is an array that contains information on the broadcast messages that exist in the given sprite. Each broadcast message in this array is a struct containing the following variables:":"{}消息(messages){} 变量是一个数组，它包含有关给定精灵中存在的广播消息的信息。该数组中的每个广播消息都是一个包含以下变量的结构：","The {}slots{} variable is an array that contains information on all slots in the given Spine sprite. Each slot in this array is a struct containing the following variables:":"{}插槽(slots){} 变量是一个数组，包含给定 Spine 精灵中所有插槽的信息。此数组中的每个槽都是一个包含以下变量的结构：","This function is used to retrieve information for the given sprite. You supply a sprite index (which can be an asset added through the {}Asset Browser{} or a sprite&nbsp;{}added{} at runtime)":"此函数用于检索给定精灵的信息。您提供一个精灵索引(可以是通过{}资源浏览器{}添加的资源，也可以是在运行时{}添加{}的精灵)","This function is used to retrieve information for the given sprite. You supply a sprite index (which can be an asset added through the {}Asset Browser{} or a sprite&nbsp;{}added{} at runtime) and the function returns a {}struct{} with the following variables:":"此函数用于检索给定精灵的信息。您提供一个精灵索引(可以是通过{}Asset Browser{}添加的资源，也可以是在运行时{}添加{}的精灵)，该函数将返回包含以下变量的{}结构{}：","This section contains information on variables included in the struct for Bitmap sprites (sprites that are not Spine or SWF type sprites).":"本节包含有关位图精灵 (不是 Spine 或 SWF 类型精灵) 的结构中包含的变量的信息。","This section contains information on variables included in the struct for Spine sprites.":"本节包含有关 Spine 精灵的结构中包含的变量的信息。","This section contains information on variables included in the struct for all kinds of&nbsp;sprites.":"本节包含有关所有精灵的结构中包含的变量的信息。",'Whether the mask is "Rectangle with rotation" or not':'遮罩是否为"旋转矩形"',"{}Bitmap Sprite Data{}{}Bitmap Sprite Data{}":"{}位图精灵数据{}{}位图精灵数据{}","{}General Sprite Data{}{}General Sprite Data{}":"{}通用精灵数据{}{}通用精灵数据{}","{}Spine Sprite Data{}{}Spine Sprite Data{}":"{}Spine 精灵数据{}{}Spine 精灵数据{}","{}These additional variables are available only for Spine sprites:{}":"{}以下附加变量仅适用于 Spine 精灵：{}","{}This additional variable is available only for Bitmap (regular)&nbsp;sprites:{}":"{}此附加变量仅适用于位图(常规)精灵：{}","{}true{} if the sprite is marked as smooth, otherwise {}false{}{} (This can only be specified through {}{}sprite_add(){}{}&nbsp;or similar functions, and will be {}false{} for sprites created in the IDE) ":"如果精灵被标记为平滑，则为{}true{}，否则为{}false{}{}(这只能通过{}{}sprite_add(){}{}或类似函数指定，并且将为{}false{}对于在 IDE 中创建的精灵)","{}true{} if the sprite is marked as smooth, otherwise {}false{}{} {}{}(This can only be specified through {}{}sprite_add(){}{}&nbsp;or similar functions, and will be {}false{} for sprites created in the IDE){}{}{}{} ":"如果精灵标记为平滑，则为{}true{}，否则为{}false{}{}{}{}(这只能通过{}{}sprite_add(){}{})或类似的函数来指定，并且对于在IDE中创建的精灵将为{}false{}){}{}{}{}","{}true{} if the sprite is marked as transparent, otherwise {}false{}{} {}(This can only be specified through {}{}sprite_add(){}{}&nbsp;or similar functions, and will be {}false{} for sprites created in the IDE){} ":"如果精灵标记为透明，则为{}true{}，否则为{}false{}{}{}(这只能通过{}{}sprite_add(){}{}或类似的函数来指定，并且对于在IDE中创建的精灵将为{}false{}){}","{}true{} if this sprite is marked as premultiplied, otherwise {}false{}":"如果此精灵标记为预乘，则为{}true{}，否则为{}false{}","{}true{} if this sprite uses a collision mask (either generated from a shape or the image itself), otherwise {}false{} (meaning it uses a bounding box)":"如果此精灵使用碰撞遮罩(从形状或图像本身生成)，则为{}true{}，否则为{}false{}(表示它使用边界框)","{}true{} if this sprite uses a collision mask, otherwise {}false{}":"如果此精灵使用碰撞遮罩，则为{}true{}，否则为{}false{}","{}{}NOTE{}{}&nbsp;Please consult the {}Spine documentation{} for more information regarding Spine's internal variables.":"{}{}注意{}{} 有关 Spine 内部变量的更多信息，请参考{} Spine 文档{}。"},get_json_global=$.ajax({url:"/global.json",type:"GET",dataType:"json",async:!1,success:function(e){json_global=e}});$(function(){if(addNoTranslationStateButton(),noTranslationState())return!1;$("div.footer a,h4,caption").each(function(){setTranslator($(this),json_global)}),$("p,h1,h2,h3,td,li,a,div.dropspotnote,figcaption").each(function(){setTranslator($(this),json_file)}),$("th,.warning,.important,.optional").each(function(){setTranslator($(this),json_global)}),$(".header").length&&(window.setInterval(function(){$("#toc-panel a:not('isTranslate')").each(function(){$(this).addClass("isTranslate"),setTranslator($(this),json_global)}),$(".GlossDefinitionText:not('isTranslate')").each(function(){$(this).addClass("isTranslate"),setTranslator($(this),json_global)})},250),console.log("成功啦!现在正在疯狂翻译菜单中!")),$(".tooltip").each(function(){setTranslator($(this),json_global,"title")})}),document.addEventListener("DOMContentLoaded",()=>{pangu.autoSpacingPage()})</script><script type="text/javascript" language="JavaScript">function reDo(){innerWidth==origWidth&&innerHeight==origHeight||location.reload()}4==parseInt(navigator.appVersion)&&"Netscape"==navigator.appName&&(origWidth=innerWidth,origHeight=innerHeight,onresize=reDo),onerror=null</script><style type="text/css">p.WebHelpNavBar{text-align:right}</style><script type="text/javascript">gCommonRootRelPath=gRootRelPath="../../../../..",gTopicId="8.2.2.3.3.1.0_19"</script><script type="text/javascript" src="../../../../../template/scripts/rh.min.js"></script><script type="text/javascript" src="../../../../../template/scripts/common.min.js"></script><script type="text/javascript" src="../../../../../template/scripts/topic.min.js"></script><script type="text/javascript" src="../../../../../template/scripts/topicwidgets.min.js"></script><script type="text/javascript" src="../../../../../whxdata/projectsettings.js"></script><link rel="stylesheet" type="text/css" href="../../../../../template/styles/topic.min.css"><link rel="stylesheet" type="text/css" href="../../../../../template/Charcoal_Grey/topicheader.css"><meta name="topic-status" content="Draft"><meta http-equiv="Content-Type" content="text/html; charset=utf-8"><title>sprite_get_info</title><meta name="generator" content="Adobe RoboHelp 2022"><link rel="stylesheet" href="../../../../../assets/css/default.css" type="text/css"><script src="../../../../../assets/scripts/main_script.js" type="module"></script><meta name="rh-authors" content="Gurpreet S. Matharoo"><meta name="topic-comment" content="Page explaining the function sprite_get_info"><meta name="rh-index-keywords" content="sprite_get_info"><meta name="search-keywords" content="sprite_get_info"><meta name="is_pure" content="true"><meta name="brsnext" value="GameMaker_Language/GML_Reference/Asset_Management/Sprites/Sprite_Manipulation/Sprite_Manipulation.htm"><meta name="brsprev" value="GameMaker_Language/GML_Reference/Asset_Management/Sprites/Sprite_Information/sprite_get_uvs.htm"></head><body><div class="topic-header rh-hide" id="rh-topic-header"><div class="logo"></div><div class="nav"><div class="title" title="sprite_get_info"><span>sprite_get_info</span></div><div class="gotohome" title="Click here to see this page in full context"><a href="#" onclick="rh._.goToFullLayout()">Click here to see this page in full context</a></div></div></div><div class="topic-header-shadow rh-hide" id="rh-topic-header-shadow"></div><h1><span data-field="title" data-format="default">sprite_get_info</span></h1><p>This function is used to retrieve information for the given sprite. You supply a sprite index (which can be an asset added through the <a href="../../../../../Introduction/The_Asset_Browser.htm">Asset Browser</a> or a sprite&nbsp;<a href="../Sprite_Manipulation/sprite_add.htm">added</a> at runtime)</p><p>The function returns a <a href="../../../../GML_Overview/Structs.htm">struct</a> with the following variables:</p><table><colgroup><col><col><col></colgroup><tbody><tr><th colspan="3" style=""><span data-keyref="Type_Struct_Sprite_Info"><a target="_blank" href="sprite_get_info.htm">Sprite Info Struct</a></span></th></tr><tr><th style="">Variable</th><th>Type</th><th style="">Description</th></tr><tr><td style=""><strong>width</strong></td><td><span data-keyref="Type_Real"><a target="_blank" href="../../../../GML_Overview/Data_Types.htm">Real</a></span></td><td style="">The sprite's width (in pixels)</td></tr><tr><td style=""><strong>height</strong></td><td><span data-keyref="Type_Real"><a target="_blank" href="../../../../GML_Overview/Data_Types.htm">Real</a></span></td><td style="">The sprite's height (in pixels)</td></tr><tr><td style=""><strong>xoffset</strong></td><td><span data-keyref="Type_Real"><a target="_blank" href="../../../../GML_Overview/Data_Types.htm">Real</a></span></td><td style="">The sprite's X offset/origin (in pixels)</td></tr><tr><td style=""><strong>yoffset</strong></td><td><span data-keyref="Type_Real"><a target="_blank" href="../../../../GML_Overview/Data_Types.htm">Real</a></span></td><td style="">The sprite's Y offset/origin (in pixels)</td></tr><tr><td style=""><strong>transparent</strong></td><td><span data-keyref="Type_Bool"><a target="_blank" href="../../../../GML_Overview/Data_Types.htm">Boolean</a></span></td><td style=""><span class="inline">true</span> if the sprite is marked as transparent, otherwise <span class="inline">false</span><br><span>(This can only be specified through <span class="inline"><a href="../Sprite_Manipulation/sprite_add.htm">sprite_add()</a></span>&nbsp;or similar functions, and will be <span class="inline">false</span> for sprites created in the IDE)</span></td></tr><tr><td style=""><strong>smooth</strong></td><td><span data-keyref="Type_Bool"><a target="_blank" href="../../../../GML_Overview/Data_Types.htm">Boolean</a></span></td><td style=""><span class="inline">true</span> if the sprite is marked as smooth, otherwise <span class="inline">false</span><br>(This can only be specified through <span class="inline"><a href="../Sprite_Manipulation/sprite_add.htm">sprite_add()</a></span>&nbsp;or similar functions, and will be <span class="inline">false</span> for sprites created in the IDE)</td></tr><tr><td style=""><strong>type</strong></td><td><span data-keyref="Type_Real"><a target="_blank" href="../../../../GML_Overview/Data_Types.htm">Real</a></span></td><td style="">The type of the sprite:<br><span class="inline">0</span> - Bitmap (Regular sprites)<br><span class="inline">1</span> - SWF<br><span class="inline">2</span> - Spine</td></tr><tr><td style=""><strong>bbox_left</strong></td><td><span data-keyref="Type_Real"><a target="_blank" href="../../../../GML_Overview/Data_Types.htm">Real</a></span></td><td style="">Position of the left edge of the bounding box (in pixels)</td></tr><tr><td style=""><strong>bbox_top</strong></td><td><span data-keyref="Type_Real"><a target="_blank" href="../../../../GML_Overview/Data_Types.htm">Real</a></span></td><td style="">Position of the top edge of the bounding box (in pixels)</td></tr><tr><td style=""><strong>bbox_right</strong></td><td><span data-keyref="Type_Real"><a target="_blank" href="../../../../GML_Overview/Data_Types.htm">Real</a></span></td><td style="">Position of the right edge of the bounding box (in pixels)</td></tr><tr><td style=""><strong>bbox_bottom</strong></td><td><span data-keyref="Type_Real"><a target="_blank" href="../../../../GML_Overview/Data_Types.htm">Real</a></span></td><td style="">Position of the bottom edge of the bounding box (in pixels)</td></tr><tr><td style=""><strong>name</strong></td><td><span data-keyref="Type_String"><a target="_blank" href="../../../../GML_Overview/Data_Types.htm">String</a></span></td><td style="">The name of the sprite</td></tr><tr><td style=""><strong>num_subimages</strong></td><td><span data-keyref="Type_Real"><a target="_blank" href="../../../../GML_Overview/Data_Types.htm">Real</a></span></td><td style="">The number of sub-images (or frames) in the sprite</td></tr><tr><td style=""><strong>use_mask</strong></td><td>boolean</td><td style=""><span class="inline">true</span> if this sprite uses a collision mask (either generated from a shape or the image itself), otherwise <span class="inline">false</span> (meaning it uses a bounding box)</td></tr><tr><td style=""><strong>num_masks</strong></td><td><span data-keyref="Type_Real"><a target="_blank" href="../../../../GML_Overview/Data_Types.htm">Real</a></span></td><td style="">The number of masks in this sprite (will be greater than 1 if the sprite uses per-frame masks)</td></tr><tr><td style=""><strong>rotated_bounds</strong></td><td>boolean</td><td style="">Whether the mask is "Rectangle with rotation" or not</td></tr><tr><td style=""><strong>nineslice</strong><strong></strong></td><td><span data-keyref="Type_Struct"><a target="_blank" href="../../../../GML_Overview/Structs.htm">Struct</a></span></td><td style="">The <a href="../Nine_Slice_Struct.htm">Nine Slice struct</a> for this sprite, or <span class="inline">undefined</span> if it has no nine slice data</td></tr><tr><td style=""><strong>messages</strong></td><td><span data-keyref="Type_Array"><a target="_blank" href="../../../../GML_Overview/Arrays.htm">Array</a></span></td><td style="">Array of broadcast messages for this sprite, where each broadcast message is a struct containing information on the message (more information under "General Sprite Data")</td></tr><tr><td style=""><strong>frame_info</strong></td><td><span data-keyref="Type_Array"><a target="_blank" href="../../../../GML_Overview/Arrays.htm">Array</a></span></td><td style="">Array of frames for this sprite, where each frame is a struct containing information on its timing&nbsp;(more information under "General Sprite Data")</td></tr><tr><td style=""><strong>frame_speed</strong></td><td><span data-keyref="Type_Real"><a target="_blank" href="../../../../GML_Overview/Data_Types.htm">Real</a></span></td><td style="">The frame speed set for the sprite (see:&nbsp;<a href="../../../../../The_Asset_Editors/Sprites.htm#h">The Sprite Editor</a>)</td></tr><tr><td style=""><strong>frame_type</strong></td><td><span data-keyref="Type_Constant_Sprite_Speed"><a target="_blank" href="sprite_get_speed_type.htm">Sprite Speed Constant</a></span></td><td style="">The type of speed set for the sprite, either <span class="inline2">spritespeed_framespersecond</span> or <span class="inline2">spritespeed_framespergameframe</span></td></tr></tbody></table><p class="note"><strong>This additional variable is available only for Bitmap (regular)&nbsp;sprites:</strong></p><table><colgroup><col><col><col></colgroup><tbody><tr><th colspan="3"><span data-keyref="Type_Struct_Sprite_Info"><a target="_blank" href="sprite_get_info.htm">Sprite Info Struct</a></span></th></tr><tr><th>Variable</th><th style="">Type</th><th style="">Description</th></tr><tr><td><strong>frames</strong></td><td style=""><span data-keyref="Type_Array"><a target="_blank" href="../../../../GML_Overview/Arrays.htm">Array</a></span></td><td style="">Array of frames for this sprite, where each frame is a struct containing information on its texture&nbsp;(more information under "Bitmap Sprite Data")</td></tr></tbody></table><p class="note"><strong>These additional variables are available only for Spine sprites:</strong></p><table><colgroup><col><col><col></colgroup><tbody><tr><th colspan="3" style=""><span data-keyref="Type_Struct_Sprite_Info"><a target="_blank" href="sprite_get_info.htm">Sprite Info Struct</a></span></th></tr><tr><th style="">Variable</th><th>Type</th><th style="">Description</th></tr><tr><td style=""><strong>num_atlas</strong></td><td><span data-keyref="Type_Real"><a target="_blank" href="../../../../GML_Overview/Data_Types.htm">Real</a></span></td><td style="">The number of atlas textures used</td></tr><tr><td style=""><strong>atlas_texture</strong></td><td><span data-keyref="Type_Array"><a target="_blank" href="../../../../GML_Overview/Arrays.htm">Array</a></span></td><td style="">Array of texture IDs used for the atlas</td></tr><tr><td style=""><strong>premultiplied</strong></td><td><span data-keyref="Type_Bool"><a target="_blank" href="../../../../GML_Overview/Data_Types.htm">Boolean</a></span></td><td style=""><span class="inline">true</span> if this sprite is marked as premultiplied, otherwise <span class="inline">false</span></td></tr><tr><td style=""><strong>animation_names</strong></td><td><span data-keyref="Type_Array"><a target="_blank" href="../../../../GML_Overview/Arrays.htm">Array</a></span></td><td style="">Array containing the names of each animation in this sprite</td></tr><tr><td style=""><strong>skin_names</strong></td><td><span data-keyref="Type_Array"><a target="_blank" href="../../../../GML_Overview/Arrays.htm">Array</a></span></td><td style="">Array containing the names of each skin in this sprite</td></tr><tr><td style=""><strong>bones</strong></td><td><span data-keyref="Type_Array"><a target="_blank" href="../../../../GML_Overview/Arrays.htm">Array</a></span></td><td style="">Array containing structs for each bone in this sprite&nbsp;(more information under "Spine Sprite Data")</td></tr><tr><td style=""><strong>slots</strong></td><td><span data-keyref="Type_Array"><a target="_blank" href="../../../../GML_Overview/Arrays.htm">Array</a></span></td><td style="">Array containing structs for each slot in this sprite&nbsp;(more information under "Spine Sprite Data")</td></tr></tbody></table><p>The function will return <span class="inline">undefined</span> if the given sprite doesn't exist. Also note that information returned in this struct should be considered <strong>read-only</strong> as modifying any of these variables will not affect the sprite.</p><p>The sections below contain information on the arrays and structs included in the returned struct based on the sprite type:</p><p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down2" href="#"><span data-open-text="true" data-skip-index="true">General Sprite Data</span><span data-close-text="true">General Sprite Data</span></a></p><div class="droptext" data-targetname="drop-down2"><p class="dropspot">This section contains information on variables included in the struct for all kinds of&nbsp;sprites.</p><p class="dropspot">The <span class="inline">messages</span> variable is an array that contains information on the broadcast messages that exist in the given sprite. Each broadcast message in this array is a struct containing the following variables:</p><table class="cke_show_border"><tbody><tr><th style="">Variable Name</th><th>Data Type</th><th style="">Description</th></tr><tr><td style=""><strong>frame</strong></td><td><span data-keyref="Type_Real"><a target="_blank" href="../../../../GML_Overview/Data_Types.htm">Real</a></span></td><td style="">The timing of this broadcast message from the start of the animation (in frames)</td></tr><tr><td style=""><strong>message</strong></td><td><span data-keyref="Type_String"><a target="_blank" href="../../../../GML_Overview/Data_Types.htm">String</a></span></td><td style="">The broadcast message string</td></tr></tbody></table><p class="dropspot">The <span class="inline">frame_info</span> variable is an array that contains information on the timings of the sprite's frames. Each frame in this array is a struct containing the following variables:</p><table class="cke_show_border"><tbody><tr><th style="">Variable Name</th><th>Data Type</th><th style="">Description</th></tr><tr><td style=""><strong>frame</strong></td><td><span data-keyref="Type_Real"><a target="_blank" href="../../../../GML_Overview/Data_Types.htm">Real</a></span></td><td style="">The timing for the start of this frame (in frames)</td></tr><tr><td style=""><strong>duration</strong></td><td><span data-keyref="Type_Real"><a target="_blank" href="../../../../GML_Overview/Data_Types.htm">Real</a></span></td><td style="">The duration of this frame (in frames)</td></tr><tr><td style=""><strong>image_index</strong></td><td><span data-keyref="Type_Real"><a target="_blank" href="../../../../GML_Overview/Data_Types.htm">Real</a></span></td><td style="">The image index of this frame</td></tr></tbody></table><p>&nbsp;</p></div><p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down" href="#"><span data-open-text="true" data-skip-index="true">Bitmap Sprite Data</span><span data-close-text="true">Bitmap Sprite Data</span></a></p><div class="droptext" data-targetname="drop-down"><p class="dropspot">This section contains information on variables included in the struct for Bitmap sprites (sprites that are not Spine or SWF type sprites).</p><p class="dropspot">The <span class="inline">frames</span> variable is an array that contains information on the textures of the sprite's frames. Each frame in this array is a struct containing the following variables:</p><table class="cke_show_border"><colgroup><col><col style="width:54px"><col style="width:623px"></colgroup><tbody><tr><th style="">Variable Name</th><th style="">Data Type</th><th>Description</th></tr><tr><td style=""><strong>x</strong></td><td style=""><span data-keyref="Type_Real"><a target="_blank" href="../../../../GML_Overview/Data_Types.htm">Real</a></span></td><td>The X position of this frame on its texture page (in pixels)</td></tr><tr><td style=""><strong>y</strong></td><td style=""><span data-keyref="Type_Real"><a target="_blank" href="../../../../GML_Overview/Data_Types.htm">Real</a></span></td><td>The Y position of this frame on its texture page (in pixels)</td></tr><tr><td style=""><strong>w</strong></td><td style=""><span data-keyref="Type_Real"><a target="_blank" href="../../../../GML_Overview/Data_Types.htm">Real</a></span></td><td>The logical width of the frame (in pixels) used internally</td></tr><tr><td style=""><strong>h</strong></td><td style=""><span data-keyref="Type_Real"><a target="_blank" href="../../../../GML_Overview/Data_Types.htm">Real</a></span></td><td>The logical height of the frame (in pixels) used internally</td></tr><tr><td style=""><strong>texture</strong></td><td style=""><span data-keyref="Type_Real"><a target="_blank" href="../../../../GML_Overview/Data_Types.htm">Real</a></span></td><td>The texture page ID for this frame</td></tr><tr><td style=""><strong>original_width</strong></td><td style=""><span data-keyref="Type_Real"><a target="_blank" href="../../../../GML_Overview/Data_Types.htm">Real</a></span></td><td>The original width of the frame (in pixels)</td></tr><tr><td style=""><strong>original_height</strong></td><td style=""><span data-keyref="Type_Real"><a target="_blank" href="../../../../GML_Overview/Data_Types.htm">Real</a></span></td><td>The original height of the frame (in pixels)</td></tr><tr><td style=""><strong>crop_width</strong></td><td style=""><span data-keyref="Type_Real"><a target="_blank" href="../../../../GML_Overview/Data_Types.htm">Real</a></span></td><td>The actual width of the frame on the texture page after cropping and scaling (since <span data-keyref="GameMaker Name">GameMaker</span> automatically trims the empty space around an image, and also scales it down if it doesn't fit)</td></tr><tr><td style=""><strong>crop_height</strong></td><td style=""><span data-keyref="Type_Real"><a target="_blank" href="../../../../GML_Overview/Data_Types.htm">Real</a></span></td><td>The actual height of the frame on the texture page after cropping and scaling</td></tr><tr><td style=""><strong>x_offset</strong></td><td style=""><span data-keyref="Type_Real"><a target="_blank" href="../../../../GML_Overview/Data_Types.htm">Real</a></span></td><td>The X offset from the left edge of the original image to the left edge of the cropped section</td></tr><tr><td style=""><strong>y_offset</strong></td><td style=""><span data-keyref="Type_Real"><a target="_blank" href="../../../../GML_Overview/Data_Types.htm">Real</a></span></td><td>The Y offset from the top edge of the original image to the top edge of the cropped section</td></tr></tbody></table><p>&nbsp;</p></div><p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down1" href="#"><span data-open-text="true" data-skip-index="true">Spine Sprite Data</span><span data-close-text="true">Spine Sprite Data</span></a></p><div class="droptext" data-targetname="drop-down1"><p class="dropspot">This section contains information on variables included in the struct for Spine sprites.</p><p class="dropspot">The <span class="inline">bones</span> variable is an array that contains information on all bones in the given Spine sprite. Each bone in this array is a struct containing the following variables:</p><table class="cke_show_border"><tbody><tr><th style="">Variable Name</th><th>Data Type</th><th style="">Description</th></tr><tr><td style=""><strong>parent</strong></td><td><span data-keyref="Type_String"><a target="_blank" href="../../../../GML_Overview/Data_Types.htm">String</a></span></td><td style="">The name of the parent bone, or&nbsp;<span class="inline">undefined</span> if this bone doesn't have a parent</td></tr><tr><td style=""><strong>name</strong></td><td><span data-keyref="Type_String"><a target="_blank" href="../../../../GML_Overview/Data_Types.htm">String</a></span></td><td style="">The name of this bone</td></tr><tr><td style=""><strong>index</strong></td><td><span data-keyref="Type_Real"><a target="_blank" href="../../../../GML_Overview/Data_Types.htm">Real</a></span></td><td style="">The index of this bone</td></tr><tr><td style=""><strong>length</strong></td><td><span data-keyref="Type_Real"><a target="_blank" href="../../../../GML_Overview/Data_Types.htm">Real</a></span></td><td style="">The length of this bone</td></tr><tr><td style=""><strong>x</strong></td><td><span data-keyref="Type_Real"><a target="_blank" href="../../../../GML_Overview/Data_Types.htm">Real</a></span></td><td style="">The X position of this bone</td></tr><tr><td style=""><strong>y</strong></td><td><span data-keyref="Type_Real"><a target="_blank" href="../../../../GML_Overview/Data_Types.htm">Real</a></span></td><td style="">The Y position of this bone</td></tr><tr><td style=""><strong>rotation</strong></td><td><span data-keyref="Type_Real"><a target="_blank" href="../../../../GML_Overview/Data_Types.htm">Real</a></span></td><td style="">The rotation of this bone</td></tr><tr><td style=""><strong>scale_x</strong></td><td><span data-keyref="Type_Real"><a target="_blank" href="../../../../GML_Overview/Data_Types.htm">Real</a></span></td><td style="">(Internal to Spine) Scale value on X</td></tr><tr><td style=""><strong>scale_y</strong></td><td><span data-keyref="Type_Real"><a target="_blank" href="../../../../GML_Overview/Data_Types.htm">Real</a></span></td><td style="">(Internal to Spine) Scale value on Y</td></tr><tr><td style=""><strong>shear_x</strong></td><td><span data-keyref="Type_Real"><a target="_blank" href="../../../../GML_Overview/Data_Types.htm">Real</a></span></td><td style="">(Internal to Spine) Shear value on X</td></tr><tr><td style=""><strong>shear_y</strong></td><td><span data-keyref="Type_Real"><a target="_blank" href="../../../../GML_Overview/Data_Types.htm">Real</a></span></td><td style="">(Internal to Spine) Shear value on Y</td></tr><tr><td style=""><strong>transform_mode</strong></td><td><span data-keyref="Type_Real"><a target="_blank" href="../../../../GML_Overview/Data_Types.htm">Real</a></span></td><td style="">(Internal to Spine) The transform mode</td></tr></tbody></table><p class="note"><span data-conref="../../../../../assets/snippets/Tag_note.hts"><span class="note">NOTE</span></span>&nbsp;Please consult the <a href="http://en.esotericsoftware.com/spine-documentation" title="Spine Documentation">Spine documentation</a> for more information regarding Spine's internal variables.</p><p class="dropspot">The <span class="inline">slots</span> variable is an array that contains information on all slots in the given Spine sprite. Each slot in this array is a struct containing the following variables:</p><table class="cke_show_border"><tbody><tr><th style="">Variable Name</th><th>Data Type</th><th style="">Description</th></tr><tr><td style=""><strong>name</strong></td><td><span data-keyref="Type_String"><a target="_blank" href="../../../../GML_Overview/Data_Types.htm">String</a></span></td><td style="">The name of the slot</td></tr><tr><td style=""><strong>index</strong></td><td><span data-keyref="Type_Real"><a target="_blank" href="../../../../GML_Overview/Data_Types.htm">Real</a></span></td><td style="">The index of the slot</td></tr><tr><td style=""><strong>bone</strong></td><td><span data-keyref="Type_String"><a target="_blank" href="../../../../GML_Overview/Data_Types.htm">String</a></span></td><td style="">The name of the slot's bone, or <span class="inline">"(none)"</span> if there is no bone for this slot</td></tr><tr><td style=""><strong>attachment</strong></td><td><span data-keyref="Type_String"><a target="_blank" href="../../../../GML_Overview/Data_Types.htm">String</a></span></td><td style="">Attachment name</td></tr><tr><td style=""><strong>red</strong></td><td><span data-keyref="Type_Real"><a target="_blank" href="../../../../GML_Overview/Data_Types.htm">Real</a></span></td><td style="">Red component of the slot's colour (0-1)</td></tr><tr><td style=""><strong>green</strong></td><td><span data-keyref="Type_Real"><a target="_blank" href="../../../../GML_Overview/Data_Types.htm">Real</a></span></td><td style="">Green component of the slot's colour (0-1)</td></tr><tr><td style=""><strong>blue</strong></td><td><span data-keyref="Type_Real"><a target="_blank" href="../../../../GML_Overview/Data_Types.htm">Real</a></span></td><td style="">Blue component of the slot's colour (0-1)</td></tr><tr><td style=""><strong>alpha</strong></td><td><span data-keyref="Type_Real"><a target="_blank" href="../../../../GML_Overview/Data_Types.htm">Real</a></span></td><td style="">Alpha component of the slot's colour (0-1)</td></tr><tr><td style=""><strong>blend_mode</strong></td><td><span data-keyref="Type_Real"><a target="_blank" href="../../../../GML_Overview/Data_Types.htm">Real</a></span></td><td style="">(Internal to Spine) Blend mode for the slot</td></tr><tr><td style=""><strong>dark_red*</strong></td><td><span data-keyref="Type_Real"><a target="_blank" href="../../../../GML_Overview/Data_Types.htm">Real</a></span></td><td style="">Red component of the slot's <strong>dark</strong> colour (0-1)</td></tr><tr><td style=""><strong>dark_green*</strong></td><td><span data-keyref="Type_Real"><a target="_blank" href="../../../../GML_Overview/Data_Types.htm">Real</a></span></td><td style="">Green component of the slot's <strong>dark</strong> colour (0-1)</td></tr><tr><td style=""><strong>dark_blue*</strong></td><td><span data-keyref="Type_Real"><a target="_blank" href="../../../../GML_Overview/Data_Types.htm">Real</a></span></td><td style="">Blue component of the slot's <strong>dark</strong> colour (0-1)</td></tr><tr><td style=""><strong>dark_alpha*</strong></td><td><span data-keyref="Type_String"><a target="_blank" href="../../../../GML_Overview/Data_Types.htm">String</a></span></td><td style="">Alpha component of the slot's <strong>dark</strong> colour (0-1)</td></tr><tr><td style=""><span class="inline">attachments</span></td><td><span data-keyref="Type_Array"><a target="_blank" href="../../../../GML_Overview/Arrays.htm">Array</a></span>&nbsp;of&nbsp;<span data-keyref="Type_String"><a target="_blank" href="../../../../GML_Overview/Data_Types.htm">String</a></span></td><td style="">An array containing the names&nbsp;of all available attachments for this slot.</td></tr></tbody></table><p class="note">*&nbsp;<span data-conref="../../../../../assets/snippets/Tag_note.hts"><span class="note">NOTE</span></span> The dark colour variables are only available if the slot has <a href="http://en.esotericsoftware.com/spine-slots#Tint-black" title="Tint Black">Tint Black</a> enabled.</p><p>&nbsp;</p></div><p>&nbsp;</p><h4>Syntax:</h4><p class="code"><span data-field="title" data-format="default">sprite_get_info</span>(index);</p><table><tbody><tr><th>Argument</th><th>Type</th><th>Description</th></tr><tr><td>index</td><td><span data-keyref="Type_Asset_Sprite"><a target="_blank" href="../../../../../The_Asset_Editors/Sprites.htm">Sprite Asset</a></span></td><td>The index of the sprite to get the information for.</td></tr></tbody></table><p>&nbsp;</p><h4>Returns</h4><p class="code"><span data-keyref="Type_Struct_Sprite_Info"><a target="_blank" href="sprite_get_info.htm">Sprite Info Struct</a></span> (or <span data-keyref="Type_Undefined"><a target="_blank" href="../../../../GML_Overview/Data_Types.htm">undefined</a></span>)</p><p>&nbsp;</p><h4>Example:</h4><p class="code">var _info = <span data-field="title" data-format="default">sprite_get_info</span>(sprite_index);<br><br>if (_info != undefined &amp;&amp; _info.type == 0)<br>{<br>&nbsp;&nbsp; &nbsp;var _messages = _info.messages;<br>&nbsp;&nbsp; &nbsp;var _messageCount = array_length(_messages);<br>&nbsp;&nbsp; &nbsp;<br>&nbsp;&nbsp; &nbsp;for (var i = 0; i &lt; _messageCount; i ++)<br>&nbsp;&nbsp; &nbsp;{<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;var _message = _messages[i];<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;show_debug_message("Message at frame " + string(_message.frame) + ": " + _message.message);<br>&nbsp;&nbsp; &nbsp;}<br>}</p><p>The above code gets the info struct for the instance's sprite,&nbsp;and then checks if it's not&nbsp;<span class="inline2"><span data-keyref="Type_Undefined"><a target="_blank" href="../../../../GML_Overview/Data_Types.htm">undefined</a></span></span> and that its type is 0 (meaning that it's a bitmap sprite). In that case, it gets the broadcast message&nbsp;array for that sprite and then runs a for loop to print each broadcast message (along with its frame) to the output log.</p><p>&nbsp;</p><p>&nbsp;</p><div class="footer"><div class="buttons"><div class="clear"><div style="float:left">Back:&nbsp;<a href="Sprite_Information.htm">Sprite Information</a></div><div style="float:right">Next:&nbsp;<a href="../Sprite_Manipulation/sprite_exists.htm">sprite_exists</a></div></div></div><h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2024 All Rights Reserved</span></h5></div></body></html>