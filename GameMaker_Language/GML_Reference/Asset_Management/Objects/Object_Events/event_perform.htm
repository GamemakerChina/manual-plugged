<!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml"><head><script type="text/javascript" src="../../../../../assets/import/jquery-3.6.1.min.js"></script><script type="text/javascript" src="../../../../../assets/import/layer/layer.js"></script><script type="text/javascript" src="../../../../../assets/import/pangu.min.js"></script><link rel="stylesheet" type="text/css" href="../../../../../assets/import/layer/layui_btn.css"><link rel="stylesheet" type="text/css" href="../../../../../assets/import/layer/layui_col.css"><link rel="stylesheet" type="text/css" href="../../../../../assets/import/layer/theme/default/layer.css"><link rel="stylesheet" type="text/css" href="../../../../../assets/import/main.css"><script>let str;removeHtml=function(t){return t=(t=(t=(t=t.replace(/(<([^>]+)>)/gi,"{}")).replace(/\r\n/g,"\n")).replace(/\n/g,"")).replace(/ {2,}/g," ")},retHtml=function(t){return t.match(/(<([^>]+)>)/gi)},setTranslator=function(t,n,a){let e;e=a?t.attr(a):t.html();let l=n[removeHtml(e)];if(null!=l&&l.length){n=retHtml(e);let o=0;n&&n.forEach(function(t,n){var a=l.replace("{"+o+"}",t);l=a===l?l.replace("{}",t):a,o++}),a?t.attr(a,l):t.html(l)}},noTranslationState=function(){return"true"==window.localStorage.getItem("noTranslationState")},noTranslationStateToggle=function(){window.localStorage.setItem("noTranslationState",!noTranslationState())},addNoTranslationStateButton=function(){$(".header").length&&$(".header").append(`
		
		<button style="
			float: right;
			font-size: 16px;
			padding: 4px 12px;
		"
		onclick="
		window.location.replace('gmmt://'+document.location.hash)
		"
		>打开编辑器</button>

		<button style="
			float: right;
			font-size: 16px;
			padding: 4px 12px;
		"
		onclick="
		noTranslationStateToggle();
		location.reload();
    	event.stopPropagation();
		"
		>切换翻译</button>
		`)},removeExtensionFromHash=function(t){return t.replaceAll("#t=","").replaceAll("%2F","/").replaceAll(".htm","")},$(function(){if(addNoTranslationStateButton(),noTranslationState())return!1;$("div.footer a,h4,caption,blockquote").each(function(){setTranslator($(this),json_global)}),$("p,h1,h2,h3,td,li,a,div.dropspotnote,figcaption,.expandtext").each(function(){setTranslator($(this),json)}),$("th,.warning,.important,.optional").each(function(){setTranslator($(this),json_global)}),$(".header").length&&(window.setInterval(function(){$("#toc-panel a:not('isTranslate')").each(function(){$(this).addClass("isTranslate"),setTranslator($(this),json_global)}),$(".GlossDefinitionText:not('isTranslate')").each(function(){$(this).addClass("isTranslate"),setTranslator($(this),json_global)})},250),console.log("成功啦!现在正在疯狂翻译菜单中!")),$(".tooltip").each(function(){setTranslator($(this),json_global,"title")})}),document.addEventListener("DOMContentLoaded",()=>{pangu.autoSpacingPage()})</script><script type="text/javascript" language="JavaScript">function reDo(){innerWidth==origWidth&&innerHeight==origHeight||location.reload()}4==parseInt(navigator.appVersion)&&"Netscape"==navigator.appName&&(origWidth=innerWidth,origHeight=innerHeight,onresize=reDo),onerror=null</script><style type="text/css">p.WebHelpNavBar{text-align:right}</style><script type="text/javascript">gCommonRootRelPath=gRootRelPath="../../../../..",gTopicId="8.2.2.3.12.1.0_2"</script><script type="text/javascript" src="../../../../../template/scripts/rh.min.js"></script><script type="text/javascript" src="../../../../../template/scripts/common.min.js"></script><script type="text/javascript" src="../../../../../template/scripts/topic.min.js"></script><script type="text/javascript" src="../../../../../template/scripts/topicwidgets.min.js"></script><script type="text/javascript" src="../../../../../whxdata/projectsettings.js"></script><link rel="stylesheet" type="text/css" href="../../../../../template/styles/topic.min.css"><link rel="stylesheet" type="text/css" href="../../../../../template/Charcoal_Grey/topicheader.css"><meta name="topic-status" content="Draft"><meta http-equiv="Content-Type" content="text/html; charset=utf-8"><title>event_perform</title><meta name="generator" content="Adobe RoboHelp 2022"><link rel="stylesheet" href="../../../../../assets/css/default.css" type="text/css"><script src="../../../../../assets/scripts/main_script.js" type="module"></script><meta name="rh-authors" content="Mark Alexander"><meta name="topic-comment" content="Page outlining the function event_perform"><meta name="rh-index-keywords" content="event_perform,ev_create,ev_destroy,ev_cleanup,ev_step,ev_step_normal,ev_step_begin,ev_step_end,ev_alarm,ev_keyboard,ev_keypress,ev_keyrelease,ev_mouse,ev_left_button,ev_right_button,ev_middle_button,ev_no_button,ev_left_press,ev_right_press,ev_middle_press,ev_left_release,ev_right_release,ev_middle_release,ev_mouse_enter,ev_mouse_leave,ev_mouse_wheel_up,ev_mouse_wheel_down,ev_global_left_button,ev_global_right_button,ev_global_middle_button,ev_global_left_press,ev_global_right_press,ev_global_middle_press,ev_global_left_release,ev_global_right_release,ev_global_middle_release,ev_gesture,ev_gesture_tap,ev_gesture_double_tap,ev_gesture_drag_start,ev_gesture_dragging,ev_gesture_drag_end,ev_gesture_flick,ev_gesture_pinch_start,ev_gesture_pinch_in,ev_gesture_pinch_out,ev_gesture_pinch_end,ev_gesture_rotate_start,ev_gesture_rotating,ev_gesture_rotate_end,ev_global_gesture_tap,ev_global_gesture_double_tap,ev_global_gesture_drag_start,ev_global_gesture_dragging,ev_global_gesture_drag_end,ev_global_gesture_flick,ev_global_gesture_pinch_start,ev_global_gesture_pinch_in,ev_global_gesture_pinch_out,ev_global_gesture_pinch_end,ev_global_gesture_rotate_start,ev_global_gesture_rotating,ev_global_gesture_rotate_end,ev_collision,ev_other,ev_outside,ev_boundary,ev_game_start,ev_game_end,ev_room_start,ev_room_end,ev_no_more_lives,ev_no_more_health,ev_animation_end,ev_end_of_path,ev_close_button,ev_user,ev_draw,ev_draw_begin,ev_draw_end,ev_draw_pre,ev_draw_post,ev_gui,ev_gui_begin,ev_gui_end,ev_outside_view0,ev_outside_view1,ev_outside_view2,ev_outside_view3,ev_outside_view4,ev_outside_view5,ev_outside_view6,ev_outside_view7,ev_boundary_view0,ev_boundary_view1,ev_boundary_view2,ev_boundary_view3,ev_boundary_view4,ev_boundary_view5,ev_boundary_view6,ev_boundary_view7,ev_animation_update,ev_animation_event,ev_user0,ev_user1,ev_user2,ev_user3,ev_user4,ev_user5,ev_user6,ev_user7,ev_user8,ev_user9,ev_user10,ev_user11,ev_user12,ev_user13,ev_user14,ev_user15,ev_broadcast_message,ev_draw_normal"><meta name="search-keywords" content="event_perform,ev_create,ev_destroy,ev_cleanup,ev_step,ev_step_normal,ev_step_begin,ev_step_end,ev_alarm,ev_keyboard,ev_keypress,ev_keyrelease,ev_mouse,ev_left_button,ev_right_button,ev_middle_button,ev_no_button,ev_left_press,ev_right_press,ev_middle_press,ev_left_release,ev_right_release,ev_middle_release,ev_mouse_enter,ev_mouse_leave,ev_mouse_wheel_up,ev_mouse_wheel_down,ev_global_left_button,ev_global_right_button,ev_global_middle_button,ev_global_left_press,ev_global_right_press,ev_global_middle_press,ev_global_left_release,ev_global_right_release,ev_global_middle_release,ev_gesture,ev_gesture_tap,ev_gesture_double_tap,ev_gesture_drag_start,ev_gesture_dragging,ev_gesture_drag_end,ev_gesture_flick,ev_gesture_pinch_start,ev_gesture_pinch_in,ev_gesture_pinch_out,ev_gesture_pinch_end,ev_gesture_rotate_start,ev_gesture_rotating,ev_gesture_rotate_end,ev_global_gesture_tap,ev_global_gesture_double_tap,ev_global_gesture_drag_start,ev_global_gesture_dragging,ev_global_gesture_drag_end,ev_global_gesture_flick,ev_global_gesture_pinch_start,ev_global_gesture_pinch_in,ev_global_gesture_pinch_out,ev_global_gesture_pinch_end,ev_global_gesture_rotate_start,ev_global_gesture_rotating,ev_global_gesture_rotate_end,ev_collision,ev_other,ev_outside,ev_boundary,ev_game_start,ev_game_end,ev_room_start,ev_room_end,ev_no_more_lives,ev_no_more_health,ev_animation_end,ev_end_of_path,ev_close_button,ev_user,ev_draw,ev_draw_begin,ev_draw_end,ev_draw_pre,ev_draw_post,ev_gui,ev_gui_begin,ev_gui_end,ev_outside_view0,ev_outside_view1,ev_outside_view2,ev_outside_view3,ev_outside_view4,ev_outside_view5,ev_outside_view6,ev_outside_view7,ev_boundary_view0,ev_boundary_view1,ev_boundary_view2,ev_boundary_view3,ev_boundary_view4,ev_boundary_view5,ev_boundary_view6,ev_boundary_view7,ev_animation_update,ev_animation_event,ev_user0,ev_user1,ev_user2,ev_user3,ev_user4,ev_user5,ev_user6,ev_user7,ev_user8,ev_user9,ev_user10,ev_user11,ev_user12,ev_user13,ev_user14,ev_user15,ev_broadcast_message,ev_draw_normal"><meta name="brsnext" value="GameMaker_Language/GML_Reference/Asset_Management/Objects/Object_Events/event_perform_async.htm"><meta name="brsprev" value="GameMaker_Language/GML_Reference/Asset_Management/Objects/Object_Events/event_inherited.htm"></head><body><div class="topic-header rh-hide" id="rh-topic-header"><div class="logo"></div><div class="nav"><div class="title" title="event_perform"><span>event_perform</span></div><div class="gotohome" title="Click here to see this page in full context"><a href="#" onclick="rh._.goToFullLayout()">Click here to see this page in full context</a></div></div></div><div class="topic-header-shadow rh-hide" id="rh-topic-header-shadow"></div><h1><span data-field="title" data-format="default">event_perform</span></h1><p>This function will perform the code in the specified event, with the designated argument, for the instance running the code. There are many options here which allow complete simulation of all possible events, but note that this literally just performs all the code in the event; the game will not modify anything to make it trigger itself manually.</p><p>For example if you choose to perform a keyboard press event <span class="inline2">ev_keypress</span>, the event will be triggered but the relevant key will not be recognised as having been pressed. Or if you perform an alarm event <span class="inline2">ev_alarm</span>, the alarm counter will not be set to -1 but rather continue to count down.</p><p class="note"><span data-conref="../../../../../assets/snippets/Tag_note.hts"><span class="note">NOTE</span></span>&nbsp;Asynchronous events can be called using <span class="inline2"><a href="event_perform_async.htm">event_perform_async</a></span>.</p><p>The table below outlines all the constants that are included in <span data-keyref="GameMaker Name">GameMaker</span> for referencing event <em>types</em>, as well as their <em>number</em> value. The events themselves are marked in <b>bold text</b> and are the same as the return values of the <span class="inline2"><a href="event_type.htm">event_type</a></span>&nbsp;variable (to be passed into the first argument of this function), while their number values are marked with <i>italic text</i> and are the same as the return values for the&nbsp;<span class="inline2"><a href="event_number.htm">event_number</a></span> variable (to be passed into the second argument of this function):&nbsp;</p><table><colgroup><col><col></colgroup><tbody><tr><th colspan="2" width="40%"><span data-keyref="Type_Constant_Event_Type"><a target="_blank" href="event_perform.htm">Event Type Constant</a></span>&nbsp;&amp;&nbsp;<span data-keyref="Type_Constant_Event_Number"><a target="_blank" href="event_perform.htm">Event Number Constant</a></span></th></tr><tr><th width="40%">Constant</th><th>Description</th></tr><tr><td><b>ev_create</b></td><td>Create event</td></tr><tr><td><b>ev_destroy</b></td><td>Destroy event</td></tr><tr><td><b>ev_cleanup</b></td><td>Clean Up Event</td></tr><tr><td><b>ev_step</b></td><td>Step event</td></tr><tr><td><i>&nbsp;&nbsp;&nbsp;---- ev_step_normal</i></td><td>Step</td></tr><tr><td><i>&nbsp;&nbsp;&nbsp;---- ev_step_begin</i></td><td>Begin Step</td></tr><tr><td><i>&nbsp;&nbsp;&nbsp;---- ev_step_end</i></td><td>End Step</td></tr><tr><td><b>ev_alarm</b></td><td>Alarm event</td></tr><tr><td><i>&nbsp;&nbsp;&nbsp;---- 0 ... 11</i></td><td>The number relevant to which of the 12 alarms you wish to trigger the event of</td></tr><tr><td><b>ev_keyboard, ev_keypress, ev_keyrelease</b></td><td>Keyboard/Keyboard Pressed/Keyboard Released</td></tr><tr><td><i>&nbsp;&nbsp;&nbsp;---- any key code</i></td><td>vk_space or ord("W") for example.</td></tr><tr><td><b>ev_mouse</b></td><td>Mouse event</td></tr><tr><td><i>&nbsp;&nbsp;&nbsp;---- ev_left_button</i></td><td>Left button held down on object</td></tr><tr><td><i>&nbsp;&nbsp;&nbsp;---- ev_right_button</i></td><td>Right button held down on object</td></tr><tr><td><i>&nbsp;&nbsp;&nbsp;---- ev_middle_button</i></td><td>Middle button (or clickable wheel) held down on object</td></tr><tr><td><i>&nbsp;&nbsp;&nbsp;---- ev_no_button</i></td><td>No buttons held down</td></tr><tr><td><i>&nbsp;&nbsp;&nbsp;---- ev_left_press</i></td><td>Left button just pressed on object</td></tr><tr><td><i>&nbsp;&nbsp;&nbsp;---- ev_right_press</i></td><td>Right button just pressed on object</td></tr><tr><td><i>&nbsp;&nbsp;&nbsp;---- ev_middle_press</i></td><td>Middle button (or clickable wheel) just pressed on object</td></tr><tr><td><i>&nbsp;&nbsp;&nbsp;---- ev_left_release</i></td><td>Left button just released on object</td></tr><tr><td><i>&nbsp;&nbsp;&nbsp;---- ev_right_release</i></td><td>Right button just released on object</td></tr><tr><td><i>&nbsp;&nbsp;&nbsp;---- ev_middle_release</i></td><td>Middle button just released on object</td></tr><tr><td><i>&nbsp;&nbsp;&nbsp;---- ev_mouse_enter</i></td><td>Mouse just entered object's bounding box</td></tr><tr><td><i>&nbsp;&nbsp;&nbsp;---- ev_mouse_leave</i></td><td>Mouse just left object's bounding box</td></tr><tr><td><i>&nbsp;&nbsp;&nbsp;---- ev_mouse_wheel_up</i></td><td>Mouse wheel scrolled upwards</td></tr><tr><td><i>&nbsp;&nbsp;&nbsp;---- ev_mouse_wheel_down</i></td><td>Mouse wheel scrolled downwards</td></tr><tr><td><i>&nbsp;&nbsp;&nbsp;---- ev_global_left_button</i></td><td>Left button held down anywhere</td></tr><tr><td><i>&nbsp;&nbsp;&nbsp;---- ev_global_right_button</i></td><td>Right button held down anywhere</td></tr><tr><td><i>&nbsp;&nbsp;&nbsp;---- ev_global_middle_button</i></td><td>Middle button (or clickable wheel) held down anywhere</td></tr><tr><td><i>&nbsp;&nbsp;&nbsp;---- ev_global_left_press</i></td><td>Left button just pressed anywhere</td></tr><tr><td><i>&nbsp;&nbsp;&nbsp;---- ev_global_right_press</i></td><td>Right button just pressed anywhere</td></tr><tr><td><i>&nbsp;&nbsp;&nbsp;---- ev_global_middle_press</i></td><td>Middle button (or clickable wheel) just pressed anywhere</td></tr><tr><td><i>&nbsp;&nbsp;&nbsp;---- ev_global_left_release</i></td><td>Left button just released anywhere</td></tr><tr><td><i>&nbsp;&nbsp;&nbsp;---- ev_global_right_release</i></td><td>Right button just released anywhere</td></tr><tr><td><i>&nbsp;&nbsp;&nbsp;---- ev_global_middle_release</i></td><td>Middle button just released anywhere</td></tr><tr><td><b>ev_gesture</b></td><td>A gesture event (Tap, Drag, Flick, Pinch or Rotate)</td></tr><tr><td><i>&nbsp;&nbsp;&nbsp;---- ev_gesture_tap</i></td><td>A single click/touch and release has been detected for an <i>instance</i></td></tr><tr><td><i>&nbsp;&nbsp;&nbsp;---- ev_gesture_double_tap</i></td><td>Two quick touches/clicks and releases have been detected for an <i>instance</i></td></tr><tr><td><i>&nbsp;&nbsp;&nbsp;---- ev_gesture_drag_start</i></td><td>The beginning of a drag gesture has been detected for an <i>instance</i></td></tr><tr><td><i>&nbsp;&nbsp;&nbsp;---- ev_gesture_dragging</i></td><td>A touch/click has been held and moved for an <i>instance</i></td></tr><tr><td><i>&nbsp;&nbsp;&nbsp;---- ev_gesture_drag_end</i></td><td>The release of the touch/click from a drag has been detected for an <i>instance</i></td></tr><tr><td><i>&nbsp;&nbsp;&nbsp;---- ev_gesture_flick</i></td><td>The release of a touch/click from a drag had enough movement for a flick event to be detected for the <i>instance</i></td></tr><tr><td><i>&nbsp;&nbsp;&nbsp;---- ev_gesture_pinch_start</i></td><td>Two touches and a straight movement have been detected for an <i>instance</i></td></tr><tr><td><i>&nbsp;&nbsp;&nbsp;---- ev_gesture_pinch_in</i></td><td>The movement between two touches for an <i>instance</i> has been detected as inwards</td></tr><tr><td><i>&nbsp;&nbsp;&nbsp;---- ev_gesture_pinch_out</i></td><td>The movement between two touches for an <i>instance</i> has been detected as outwards</td></tr><tr><td><i>&nbsp;&nbsp;&nbsp;---- ev_gesture_pinch_end</i></td><td>The release of one (or both) touches for a pinch has been detected for an <i>instance</i></td></tr><tr><td><i>&nbsp;&nbsp;&nbsp;---- ev_gesture_rotate_start</i></td><td>The movement between two touches for an <i>instance</i> has been detected as a rotation</td></tr><tr><td><i>&nbsp;&nbsp;&nbsp;---- ev_gesture_rotating</i></td><td>The movement between two touches for an <i>instance</i> has been detected as rotating</td></tr><tr><td><i>&nbsp;&nbsp;&nbsp;---- ev_gesture_rotate_end</i></td><td>The release of one (or both) touches for a rotation has been detected for an <i>instance</i></td></tr><tr><td><i>&nbsp;&nbsp;&nbsp;---- ev_global_gesture_tap</i></td><td>A single click/touch and release has been detected <i>anywhere</i> in the room</td></tr><tr><td><i>&nbsp;&nbsp;&nbsp;---- ev_global_gesture_double_tap</i></td><td>Two quick touches/clicks and releases have been detected <i>anywhere</i> in the room</td></tr><tr><td><i>&nbsp;&nbsp;&nbsp;---- ev_global_gesture_drag_start</i></td><td>The beginning of a drag gesture has been detected <i>anywhere</i> in the room</td></tr><tr><td><i>&nbsp;&nbsp;&nbsp;---- ev_global_gesture_dragging</i></td><td>A touch/click has been held and moved <i>anywhere</i> in the room</td></tr><tr><td><i>&nbsp;&nbsp;&nbsp;---- ev_global_gesture_drag_end</i></td><td>The release of the touch/click from a drag has been detected <i>anywhere</i> in the room</td></tr><tr><td><i>&nbsp;&nbsp;&nbsp;---- ev_global_gesture_flick</i></td><td>The release of a touch/click from a drag had enough movement for a flick event to be detected <i>anywhere</i> in the room</td></tr><tr><td><i>&nbsp;&nbsp;&nbsp;---- ev_global_gesture_pinch_start</i></td><td>Two touches and a straight movement have been detected <i>anywhere</i> in the room</td></tr><tr><td><i>&nbsp;&nbsp;&nbsp;---- ev_global_gesture_pinch_in</i></td><td>The movement between two touches <i>anywhere</i> in the room has been detected as inwards</td></tr><tr><td><i>&nbsp;&nbsp;&nbsp;---- ev_global_gesture_pinch_out</i></td><td>The movement between two touches <i>anywhere</i> in the room has been detected as outwards</td></tr><tr><td><i>&nbsp;&nbsp;&nbsp;---- ev_global_gesture_pinch_end</i></td><td>The release of one (or both) touches for a pinch has been detected <i>anywhere</i> in the room</td></tr><tr><td><i>&nbsp;&nbsp;&nbsp;---- ev_global_gesture_rotate_start</i></td><td>The movement between two touches <i>anywhere</i> in the room has been detected as a rotation</td></tr><tr><td><i>&nbsp;&nbsp;&nbsp;---- ev_global_gesture_rotating</i></td><td>The movement between two touches <i>anywhere</i> in the room has been detected as rotating</td></tr><tr><td><i>&nbsp;&nbsp;&nbsp;---- ev_global_gesture_rotate_end</i></td><td>The release of one (or both) touches for a rotation has been detected <i>anywhere</i> in the room</td></tr><tr><td><b>ev_collision</b></td><td>Collision with an object</td></tr><tr><td><i>&nbsp;&nbsp;&nbsp;---- The index of the object to check.</i></td><td><span class="inline">obj_enemy</span> for example.</td></tr><tr><td><b>ev_other</b></td><td>One of the actions listed under 'Other'</td></tr><tr><td><i>&nbsp;&nbsp;&nbsp;---- ev_outside</i></td><td>Whether the instance is outside of the room</td></tr><tr><td><i>&nbsp;&nbsp;&nbsp;---- ev_boundary</i></td><td>Whether the instance is intersecting the boundary</td></tr><tr><td><em>&nbsp; &nbsp;---- ev_outside_view0...7</em></td><td>Whether the instance is outside the given view (0 to 7)</td></tr><tr><td><em>&nbsp; &nbsp;---- ev_boundary_view0...7</em></td><td>Whether the instance is interesecting with the boundary of the given view (0 to 7)</td></tr><tr><td><i>&nbsp;&nbsp;&nbsp;---- ev_game_start</i></td><td>Only triggered at the start of the game</td></tr><tr><td><i>&nbsp;&nbsp;&nbsp;---- ev_game_end</i></td><td>Only triggered at the end of the game</td></tr><tr><td><i>&nbsp;&nbsp;&nbsp;---- ev_room_start</i></td><td>Only triggered at the start of a room</td></tr><tr><td><i>&nbsp;&nbsp;&nbsp;---- ev_room_end</i></td><td>Only triggered at the end of a room</td></tr><tr><td><i>&nbsp;&nbsp;&nbsp;---- ev_animation_end</i></td><td>If the object's sprite has reached the end of its animation</td></tr><tr><td><em><i>&nbsp;&nbsp;&nbsp;---- ev_animation_update</i></em></td><td>Animation event that runs every step for objects that use skeletal animations</td></tr><tr><td><em><i>&nbsp;&nbsp;&nbsp;---- ev_animation_event</i></em></td><td>Animation event that runs for skeletal animations as assigned in the skeletal animation tool</td></tr><tr><td><i>&nbsp;&nbsp;&nbsp;---- ev_end_of_path</i></td><td>If the object has reached the end of a path it is following</td></tr><tr><td><i>&nbsp;&nbsp;&nbsp;---- ev_user0... ev_user15</i></td><td>One of the 16 available user events.</td></tr><tr><td><em>&nbsp; &nbsp;---- ev_broadcast_message</em></td><td>Broadcast Message event used for sprites and sequences</td></tr><tr><td><b>ev_draw</b></td><td>Draw event.&nbsp;<i><b><span data-conref="../../../../../assets/snippets/Tag_note.hts"><span class="note">NOTE</span></span>&nbsp;</b>This event cannot be forced outside of a draw event and the constants are only for identifying the event when performed in these cases.</i></td></tr><tr><td>&nbsp; <em>&nbsp;---- ev_draw_normal</em></td><td>The normal draw event.</td></tr><tr><td><i>&nbsp;&nbsp;&nbsp;---- ev_draw_begin</i></td><td>The draw begin event.</td></tr><tr><td><i>&nbsp;&nbsp;&nbsp;---- ev_draw_end</i></td><td>The draw end event.</td></tr><tr><td><i>&nbsp;&nbsp;&nbsp;---- ev_draw_pre</i></td><td>The pre draw event.</td></tr><tr><td><i>&nbsp;&nbsp;&nbsp;---- ev_draw_post</i></td><td>The post draw event.</td></tr><tr><td><i>&nbsp;&nbsp;&nbsp;---- ev_gui</i></td><td>The draw gui event.</td></tr><tr><td><i>&nbsp;&nbsp;&nbsp;---- ev_gui_begin</i></td><td>The draw gui begin event.</td></tr><tr><td><i>&nbsp;&nbsp;&nbsp;---- ev_gui_end</i></td><td>The draw gui end event.</td></tr></tbody></table><p>&nbsp;</p><h4>Syntax:</h4><p class="code"><span data-field="title" data-format="default">event_perform</span>(type, numb);</p><table><tbody><tr><th>Argument</th><th>Type</th><th>Description</th></tr><tr><td>type</td><td><span data-keyref="Type_Constant_Event_Type"><a target="_blank" href="event_perform.htm">Event Type Constant</a></span></td><td>The type of event to perform (see the table above).</td></tr><tr><td>numb</td><td><span data-keyref="Type_Real"><a target="_blank" href="../../../../GML_Overview/Data_Types.htm">Real</a></span>&nbsp;or&nbsp;<span data-keyref="Type_Constant_Event_Number"><a target="_blank" href="event_perform.htm">Event Number Constant</a></span></td><td>The specific event constant or value. No matter if an event has sub-events or not, its "default" event is always referred to by event number 0 (e.g. the Create event only has a single sub-event which has event number 0, the "normal" Step and Draw events can be referred to by their constants (<span class="inline2">ev_step_normal</span> and <span class="inline2">ev_draw_normal</span> respectively) <em>or</em> by their event number 0)</td></tr></tbody></table><p>&nbsp;</p><h4>Returns:</h4><p class="code"><span data-keyref="Type_Void">N/A</span></p><p>&nbsp;</p><h4>Extended Example</h4><p class="code"><span data-field="title" data-format="default">event_perform</span>(ev_keypress, ord("W"));</p><p>This would perform the event associated with Keyboard Check Pressed "W" key (without actually generating a keyboard press).</p><p class="code"><span data-field="title" data-format="default">event_perform</span>(ev_step, ev_step_begin);</p><p>This would perform the <i>Begin Step</i> event (if called from any of the step events it would cause the begin step event code to be run twice).</p><p class="code"><span data-field="title" data-format="default">event_perform</span>(ev_create, 0);</p><p>This would perform the <i>Create <i>event of the instance.</i></i></p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><div class="footer"><div class="buttons"><div class="clear"><div style="float:left">Back:&nbsp;<a href="Generating_Object_Events.htm">Generating Object Events</a></div><div style="float:right">Next:&nbsp;<a href="event_perform_async.htm">event_perform_async</a></div></div></div><h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2024 All Rights Reserved</span></h5></div></body></html>