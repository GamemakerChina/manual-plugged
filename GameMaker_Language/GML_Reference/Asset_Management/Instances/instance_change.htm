<!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml"><head><script type="text/javascript" src="../../../../assets/import/jquery-3.6.1.min.js"></script><script type="text/javascript" src="../../../../assets/import/layer/layer.js"></script><script type="text/javascript" src="../../../../assets/import/pangu.min.js"></script><link rel="stylesheet" type="text/css" href="../../../../assets/import/layer/layui_btn.css"><link rel="stylesheet" type="text/css" href="../../../../assets/import/layer/layui_col.css"><link rel="stylesheet" type="text/css" href="../../../../assets/import/layer/theme/default/layer.css"><link rel="stylesheet" type="text/css" href="../../../../assets/import/main.css"><script>let str;removeHtml=function(e){return e=(e=(e=(e=e.replace(/(<([^>]+)>)/gi,"{}")).replace(/\r\n/g,"\n")).replace(/\n/g,"")).replace(/ {2,}/g," ")},retHtml=function(e){return e.match(/(<([^>]+)>)/gi)},setTranslator=function(e,t,n){let o;o=n?e.attr(n):e.html();let i=t[removeHtml(o)];if(null!=i&&i.length){t=retHtml(o);let a=0;t&&t.forEach(function(e,t){var n=i.replace("{"+a+"}",e);i=n===i?i.replace("{}",e):n,a++}),n?e.attr(n,i):e.html(i)}},noTranslationState=function(){return"true"==window.localStorage.getItem("noTranslationState")},noTranslationStateToggle=function(){window.localStorage.setItem("noTranslationState",!noTranslationState())},addNoTranslationStateButton=function(){var e=`
		
		<button style="
			float: right;
			font-size: 16px;
			padding: 4px 12px;
		"
		onclick="
		window.location.replace('gmmt://'+document.location.hash)
		"
		>打开编辑器</button>

		<button style="
			float: right;
			font-size: 16px;
			padding: 4px 12px;
		"
		onclick="
		noTranslationStateToggle();
		location.reload();
    	event.stopPropagation();
		"
		>切换翻译</button>
		`;$(".header").length?$(".header").append(e):($(".topic-header").append(e),$(".topic-header button").css("position","relative").css("top","44px"))},removeExtensionFromHash=function(e){return e.replaceAll("#t=","").replaceAll("%2F","/").replaceAll(".htm","")};let json_global,json_file={'In this way, you can have (for example) a bomb change into an explosion - in which case the "perf" argument would probably be true as you would want the bomb to perform its Destroy Event and Clean Up Event, as well as the explosion to perform its Create Event - or you could have your player character change into a different one - in which case the "perf" argument would probably be false as you do not want the instances to perform their Create and Destroy/Clean Up events so it keeps the same properties.':'通过这种方式，您可以 (例如) 将炸弹更改为爆炸 - 在这种情况下，"perf" 参数可能为真，因为您希望炸弹执行其销毁事件和清理事件，以及爆炸来执行其创建事件 - 或者您可以将您的玩家角色更改为不同的角色 - 在这种情况下，"perf" 参数可能为假，因为您不希望实例执行其创建和销毁 / 清理事件，因此它保持相同的属性。',"It is worth noting that changing the instance means that you should perform no further actions with that instance until the next step, in particular trying to access variables etc. as that will cause an error. Basically, you change the instance but it is not actually available until the end of the current step, so to access any of the variables it contains directly (for example, calling {}obj_Changed.x{}) will not work.":"值得注意的是，更改实例意味着在下一步之前您不应对该实例执行进一步的操作，特别是尝试访问变量等，因为这将导致错误。基本上，您更改了实例，但直到当前步骤结束时它实际上才可用，因此直接访问它包含的任何变量 (例如，调用 {}obj_Changed.x{}) 将不起作用。","It is worth noting that changing the instance means that you should perform no further actions with that instance until the next step, in particular trying to access variables etc... as that will cause an error. Basically, you change the instance but it is not actually available until the end of the current step, so to access any of the variables it contains directly (for example, calling {}obj_Changed.x{}) will not work.":"值得注意的是，更改实例意味着在下一步之前您不应对该实例执行进一步操作，特别是尝试访问变量等... 因为那样会导致错误。基本上，您更改实例，但在当前步骤结束之前它实际上不可用，因此直接访问它包含的任何变量(例如，调用{}obj_Changed.x{})将不起作用。",'The above code will change the calling instance into an instance of "obj_Player_Swimming" without performing the original instances destroy event nor the new instances create event when the user presses the "Enter" key, exiting the code block when done.':'上面的代码会将调用实例更改为 "obj_Player_Swimming" 实例，而不会在用户按 "Enter" 键时执行原始实例销毁事件或新实例创建事件，完成后退出代码块。',"The new object the calling object will change into.":"调用对象将更改为的新对象。","Whether to perform creation and destruction events ({}true{}) or not ({}false{}).":"是否执行创建和销毁事件 ({}true{}) 或不执行 ({}false{})。","Whether to perform that new object's Create and Destroy events (true) or not (false).":"是否执行新对象的创建和销毁事件(true)或不执行(false)。","You can use this function to change one instance of an object into another instance of a different object, and while doing so decide whether to perform the initial instance's Destroy and Clean Up Events and the new instance's Create Event.":"您可以使用此函数将一个对象的一个​​实例更改为另一个对象的另一个实例，并在执行此操作时决定是否执行初始实例的销毁和清理事件以及新实例的创建事件。",'You can use this function to change one instance of an object into another instance of a different object, and while doing so decide whether to perform the initial instances Destroy and Clean Up Events and the new instances Create Event. In this way, you can have (for example) a bomb change into an explosion - in which case the "perf" argument would probably be true as you would want the bomb to perform its Destroy Event and Clean Up Event, as well as the explosion to perform its Create Event - or you could have your player character change into a different one - in which case the "perf" argument would probably be false as you do not want the instances to perform their Create and Destroy/Clean Up events.':'您可以使用此函数将对象的一个实例更改为不同对象的另一个实例，同时决定是否执行初始实例"销毁和清理事件"以及新实例"创建事件"。通过这种方式，您可以(例如)将炸弹更改为爆炸，在这种情况下，"perf"参数可能为真，因为您希望炸弹执行其销毁事件和清理事件，以及爆炸以执行其创建事件。或者，您可以让您的玩家角色更改为其他角色，在这种情况下，"perf"参数可能是假的，因为您不希望实例执行其创建和销毁/清理事件。','{}WARNING!{} When changing a physics enabled instance, the physical properties {}will not be carried over{} to the new instance being changed into. Therefore you should have code in place to "transfer" the physics state of the current instance over to the new instance, or have defined the new instances physical properties in its Create Event, or in the object editor. For this reason it is recommended that you not use this function with physics enabled instances, but rather use a combination of {}{}instance_destroy(){}{} and {}{}{}instance_create_layer(){}{}.{}':'{}警告！{}更改启用物理的实例时，物理属性{}不会转移到正在更改的新实例{}。因此，您应该有代码来"转移"当前实例的物理状态到新实例，或者已经在其创建事件或对象编辑器中定义了新实例的物理属性。因此，建议您不要将此函数用于启用物理的实例，而应使用{}{}instance_destroy(){}{}和{}{}{}instance_create_layer(){}{}的组合。{}','{}{}WARNING{}{}&nbsp;When changing a physics enabled instance, its physical properties {}will not be carried over{} to the new instance being changed into. Therefore you should have code in place to "transfer" the physics state of the current instance over to the new instance, or have defined the new instance\'s physical properties in its Create Event, or in the object editor. For this reason it is not recommended to use this function with physics enabled instances, but rather use a combination of the functions&nbsp;{}{}instance_destroy(){}{} and {}{}{}instance_create_layer(){}{}.{}':'{}{} 警告{}{} 更改启用物理的实例时，其物理属性 {} 将不会 {} 转移到要更改的新实例。因此，您应该有适当的代码来将当前实例的物理状态 " 转移 " 到新实例，或者在其创建事件或对象编辑器中定义新实例的物理属性。因此，不建议将此函数与启用物理功能的实例一起使用，而是结合使用函数 {}{}instance_destroy(){}{} 和 {}{}{}instance_create_layer(){}{}。{}','{}警告!{}更改启用了物理的实例时，物理属性{}将不会转移到要更改为的新实例。因此，应该具有适当的代码，以便将当前实例的物理状态"传输"到新实例，或者已经在其"创建事件"(Create Event)或对象编辑器中定义了新实例的物理属性。因此，建议您不要在启用了物理函数的实例中使用此函数，而是使用{}{}实例销毁(){}{}和{}{}{}实例创建层(){}{}的组合。{}{}':""},get_json_global=$.ajax({url:"/global.json",type:"GET",dataType:"json",async:!1,success:function(e){json_global=e}});$(function(){if(addNoTranslationStateButton(),noTranslationState())return!1;$("div.footer a,h4,caption").each(function(){setTranslator($(this),json_global)}),$("p,h1,h2,h3,td,li,a,div.dropspotnote,figcaption").each(function(){setTranslator($(this),json_file)}),$("th,.warning,.important,.optional").each(function(){setTranslator($(this),json_global)}),$(".header").length&&(window.setInterval(function(){$("#toc-panel a:not('isTranslate')").each(function(){$(this).addClass("isTranslate"),setTranslator($(this),json_global)}),$(".GlossDefinitionText:not('isTranslate')").each(function(){$(this).addClass("isTranslate"),setTranslator($(this),json_global)})},250),console.log("成功啦!现在正在疯狂翻译菜单中!")),$(".tooltip").each(function(){setTranslator($(this),json_global,"title")})}),document.addEventListener("DOMContentLoaded",()=>{pangu.autoSpacingPage()})</script><script type="text/javascript" language="JavaScript">function reDo(){innerWidth==origWidth&&innerHeight==origHeight||location.reload()}4==parseInt(navigator.appVersion)&&"Netscape"==navigator.appName&&(origWidth=innerWidth,origHeight=innerHeight,onresize=reDo),onerror=null</script><style type="text/css">p.WebHelpNavBar{text-align:right}</style><script type="text/javascript">gCommonRootRelPath=gRootRelPath="../../../..",gTopicId="8.2.2.3.13.2_5"</script><script type="text/javascript" src="../../../../template/scripts/rh.min.js"></script><script type="text/javascript" src="../../../../template/scripts/common.min.js"></script><script type="text/javascript" src="../../../../template/scripts/topic.min.js"></script><script type="text/javascript" src="../../../../template/scripts/topicwidgets.min.js"></script><script type="text/javascript" src="../../../../whxdata/projectsettings.js"></script><link rel="stylesheet" type="text/css" href="../../../../template/styles/topic.min.css"><link rel="stylesheet" type="text/css" href="../../../../template/Charcoal_Grey/topicheader.css"><meta name="topic-status" content="Draft"><meta http-equiv="Content-Type" content="text/html; charset=utf-8"><title>instance_change</title><meta name="generator" content="Adobe RoboHelp 2022"><link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css"><script src="../../../../assets/scripts/main_script.js" type="module"></script><meta name="rh-authors" content="Mark Alexander"><meta name="topic-comment" content="Page outlining the function instance_change"><meta name="rh-index-keywords" content="instance_change"><meta name="search-keywords" content="instance_change"><meta name="is_pure" content="true"><meta name="brsnext" value="GameMaker_Language/GML_Reference/Asset_Management/Instances/instance_copy.htm"><meta name="brsprev" value="GameMaker_Language/GML_Reference/Asset_Management/Instances/instance_exists.htm"></head><body><div class="topic-header rh-hide" id="rh-topic-header"><div class="logo"></div><div class="nav"><div class="title" title="instance_change"><span>instance_change</span></div><div class="gotohome" title="Click here to see this page in full context"><a href="#" onclick="rh._.goToFullLayout()">Click here to see this page in full context</a></div></div></div><div class="topic-header-shadow rh-hide" id="rh-topic-header-shadow"></div><h1>instance_change</h1><p>You can use this function to change one instance of an object into another instance of a different object, and while doing so decide whether to perform the initial instance's Destroy and Clean Up Events and the new instance's Create Event.</p><p>In this way, you can have (for example) a bomb change into an explosion - in which case the "perf" argument would probably be true as you would want the bomb to perform its Destroy Event and Clean Up Event, as well as the explosion to perform its Create Event - or you could have your player character change into a different one - in which case the "perf" argument would probably be false as you do not want the instances to perform their Create and Destroy/Clean Up events so it keeps the same properties.</p><p>It is worth noting that changing the instance means that you should perform no further actions with that instance until the next step, in particular trying to access variables etc. as that will cause an error. Basically, you change the instance but it is not actually available until the end of the current step, so to access any of the variables it contains directly (for example, calling <span class="inline2">obj_Changed.x</span>) will not work.</p><p class="note"><span data-conref="../../../../assets/snippets/Tag_warning.hts"><span class="warning">WARNING</span></span>&nbsp;When changing a physics enabled instance, its physical properties <b>will not be carried over</b> to the new instance being changed into. Therefore you should have code in place to "transfer" the physics state of the current instance over to the new instance, or have defined the new instance's physical properties in its Create Event, or in the object editor. For this reason it is not recommended to use this function with physics enabled instances, but rather use a combination of the functions&nbsp;<span style="font-size:1px"><span class="inline2">instance_destroy()</span></span> and <span><span style="font-size:1px"><span class="inline2">instance_create_layer()</span></span>.</span></p><p>&nbsp;</p><h4>Syntax:</h4><p class="code">instance_change(obj, perf);</p><table><tbody><tr><th>Argument</th><th>Type</th><th>Description</th></tr><tr><td>obj</td><td><span data-keyref="Type_Asset_Object"><a target="_blank" href="../../../../The_Asset_Editors/Objects.htm">Object Asset</a></span></td><td>The new object the calling object will change into.</td></tr><tr><td>perf</td><td><span data-keyref="Type_Bool"><a target="_blank" href="../../../GML_Overview/Data_Types.htm">Boolean</a></span></td><td>Whether to perform creation and destruction events (<span class="inline2">true</span>) or not (<span class="inline2">false</span>).</td></tr></tbody></table><p>&nbsp;</p><h4>Returns:</h4><p class="code"><span data-keyref="Type_Void">N/A</span></p><p>&nbsp;</p><h4>Example:</h4><p class="code">if (keyboard_check(vk_enter))<br>{<br>&nbsp;&nbsp;&nbsp;&nbsp;instance_change(obj_Player_Swimming, false);<br>&nbsp;&nbsp;&nbsp;&nbsp;exit;<br>}</p><p>The above code will change the calling instance into an instance of "obj_Player_Swimming" without performing the original instances destroy event nor the new instances create event when the user presses the "Enter" key, exiting the code block when done.</p><p>&nbsp;</p><p>&nbsp;</p><div class="footer"><div class="buttons"><div class="clear"><div style="float:left">Back: <a href="Instances.htm">Instances</a></div><div style="float:right">Next: <a href="instance_copy.htm">instance_copy</a></div></div></div><h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2024 All Rights Reserved</span></h5></div></body></html>