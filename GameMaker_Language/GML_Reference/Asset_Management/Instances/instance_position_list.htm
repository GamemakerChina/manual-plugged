<!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml"><head><script type="text/javascript" src="../../../../assets/import/jquery-3.6.1.min.js"></script><script type="text/javascript" src="../../../../assets/import/layer/layer.js"></script><script type="text/javascript" src="../../../../assets/import/pangu.min.js"></script><link rel="stylesheet" type="text/css" href="../../../../assets/import/layer/layui_btn.css"><link rel="stylesheet" type="text/css" href="../../../../assets/import/layer/layui_col.css"><link rel="stylesheet" type="text/css" href="../../../../assets/import/layer/theme/default/layer.css"><link rel="stylesheet" type="text/css" href="../../../../assets/import/main.css"><script>let str;removeHtml=function(t){return t=(t=(t=(t=t.replace(/(<([^>]+)>)/gi,"{}")).replace(/\r\n/g,"\n")).replace(/\n/g,"")).replace(/ {2,}/g," ")},retHtml=function(t){return t.match(/(<([^>]+)>)/gi)},setTranslator=function(t,e,n){let a;a=n?t.attr(n):t.html();let i=e[removeHtml(a)];if(null!=i&&i.length){e=retHtml(a);let o=0;e&&e.forEach(function(t,e){var n=i.replace("{"+o+"}",t);i=n===i?i.replace("{}",t):n,o++}),n?t.attr(n,i):t.html(i)}},noTranslationState=function(){return"true"==window.localStorage.getItem("noTranslationState")},noTranslationStateToggle=function(){window.localStorage.setItem("noTranslationState",!noTranslationState())},addNoTranslationStateButton=function(){var t=`
		
		<button style="
			float: right;
			font-size: 16px;
			padding: 4px 12px;
		"
		onclick="
		window.location.replace('gmmt://'+document.location.hash)
		"
		>打开编辑器</button>

		<button style="
			float: right;
			font-size: 16px;
			padding: 4px 12px;
		"
		onclick="
		noTranslationStateToggle();
		location.reload();
    	event.stopPropagation();
		"
		>切换翻译</button>
		`;$(".header").length?$(".header").append(t):($(".topic-header").append(t),$(".topic-header button").css("position","relative").css("top","44px"))},removeExtensionFromHash=function(t){return t.replaceAll("#t=","").replaceAll("%2F","/").replaceAll(".htm","")};let json_global,json_file={"A&nbsp;{}{}Tile Map Element ID{}{}":"{}{} 平铺地图元素 ID{}{}","An array containing a combination of objects, instances, Tile Maps and the keywords {}all{}/{}other{}":"包含对象、实例、图块地图和关键字 {}all{}/{}other{} 组合的数组","In addition to objects and instances, the function also accepts:":"除了对象和实例之外，该函数还接受：","Note that the function also accepts the special keyword {}{}{}all{}{}{}, in which case all instances found to be in collision will be listed. The function returns the number of instances found, or 0 if none are found.":"请注意，函数还接受特殊关键字{}{}{}all{}{}{}，在这种情况下，将列出发现冲突中的所有实例。函数返回找到的实例数，如果未找到，则返回0。","Passing an array allows you to check for collisions against multiple objects and/or Tile Maps in one call.":"传递数组允许您在一次调用中检查多个对象和 / 或图块地图的碰撞。","See:&nbsp;{}Collisions{}":"请参阅：{} 碰撞 {}","The DS list to use to store the IDs of colliding instances.":"用于存储冲突实例的ID的DS列表。","The above code will check for a collision with all instances found at the mouse position. These will be added to a DS list, which is then looped through to destroy each of the instances in collision.":"上面的代码将检查在鼠标位置找到的所有实例是否有冲突。这些将被添加到DS列表中，然后循环以销毁冲突中的每个实例。","The function returns the number of instances / tile maps found, or 0 if none are found.":"该函数返回找到的实例 / 图块地图的数量，如果没有找到则返回 0。","The object to check for instances of.":"要检查其实例的对象。","The special keywords {}all{} and {}other{}":"特殊关键字 {}all{} 和 {}other{}","The x position to check for instances.":"要检查实例的X位置。","The y position to check for instances.":"要检查实例的Y位置。","When you use this you are checking a single point in the room, and the check will be done against the bounding box of the instances or against the mask of the instances if that object has precise collisions checked.":"当您使用此功能时，您正在检查房间中的单个点，并且如果该对象检查了精确碰撞，则将针对实例的边界框或实例的遮罩进行检查。","Whether the list should be ordered by distance ({}true{}) or not ({}false{}).":"列表是否应按距离排序({}true{})或({}false{})。","With this function you can check a position for a collision with all instances of another object or tile maps.":"使用此功能，您可以检查与另一个对象或图块地图的所有实例发生碰撞的位置。","With this function you can check a position for a collision with all instances of another object. When you use this you are checking a single point in the room for all instances of an object, and the check will be done against the bounding box of the instances or against the mask of the instances if that object has precise collisions checked.":"使用此函数，您可以检查与其他对象的所有实例碰撞的位置。使用该选项时，要为对象的所有实例检查房间中的单个点，如果对象已检查了精确的碰撞，则将针对实例的边界框或实例的遮罩执行检查。","You supply a {}DS list{} too, so the&nbsp;{}{}id{}{} values of any instances or tile maps that are colliding with the calling instance will be added to the end of the given list. You can {}clear{} the list before calling this function so that it only contains results from this function call. You also have the option to order the list based on the distance from the position being checked to the origin of the instances found to be in collision.":"您还提供了一个 {}DS 列表 {}，因此与调用实例发生冲突的任何实例或图块地图的 {}{}id{}{} 值都将添加到给定列表的末尾。您可以在调用此函数之前 {} 清除 {} 该列表，以便它仅包含此函数调用的结果。您还可以选择根据从正在检查的位置到发现发生冲突的实例的原点的距离来对列表进行排序。","You supply a {}DS list{} too, so the&nbsp;{}{}id{}{} values of any instances that are colliding with the calling instance will be added to the end of the given list. You can {}clear{} the list before calling this function so that it only contains results from this function call. You also have the option to order the list based on the distance from the position being checked to the origin of the instances found to be in collision.":"您还提供了一个{}DS列表{}，因此与调用实例冲突的任何实例的{}{}ID{}{}值都将添加到给定列表的末尾。您可以在调用此函数之前{}清除{}列表，以便它只包含此函数调用的结果。您还可以选择根据从被检查的位置到被发现发生碰撞的实例的原点的距离对列表进行排序。","{}An object, instance, tile map ID, keywords all/other, or array containing these items{}":"{} 对象、实例、图块地图 ID、所有 / 其他关键字或包含这些项目的数组 {}","{}{}Real{}{} (The number of instances / tile maps found to be in collision)":"{}{} Real {}{}( 发现发生冲突的实例 / 图块地图的数量)","{}{}Real{}{} (The number of instances found to be in collision)":"{}{}Real{}{} (发现发生冲突的实例数)"},get_json_global=$.ajax({url:"/global.json",type:"GET",dataType:"json",async:!1,success:function(t){json_global=t}});$(function(){if(addNoTranslationStateButton(),noTranslationState())return!1;$("div.footer a,h4,caption").each(function(){setTranslator($(this),json_global)}),$("p,h1,h2,h3,td,li,a,div.dropspotnote,figcaption").each(function(){setTranslator($(this),json_file)}),$("th,.warning,.important,.optional").each(function(){setTranslator($(this),json_global)}),$(".header").length&&(window.setInterval(function(){$("#toc-panel a:not('isTranslate')").each(function(){$(this).addClass("isTranslate"),setTranslator($(this),json_global)}),$(".GlossDefinitionText:not('isTranslate')").each(function(){$(this).addClass("isTranslate"),setTranslator($(this),json_global)})},250),console.log("成功啦!现在正在疯狂翻译菜单中!")),$(".tooltip").each(function(){setTranslator($(this),json_global,"title")})}),document.addEventListener("DOMContentLoaded",()=>{pangu.autoSpacingPage()})</script><script type="text/javascript" language="JavaScript">function reDo(){innerWidth==origWidth&&innerHeight==origHeight||location.reload()}4==parseInt(navigator.appVersion)&&"Netscape"==navigator.appName&&(origWidth=innerWidth,origHeight=innerHeight,onresize=reDo),onerror=null</script><style type="text/css">p.WebHelpNavBar{text-align:right}</style><script type="text/javascript">gCommonRootRelPath=gRootRelPath="../../../..",gTopicId="8.2.2.3.13.2_14"</script><script type="text/javascript" src="../../../../template/scripts/rh.min.js"></script><script type="text/javascript" src="../../../../template/scripts/common.min.js"></script><script type="text/javascript" src="../../../../template/scripts/topic.min.js"></script><script type="text/javascript" src="../../../../template/scripts/topicwidgets.min.js"></script><script type="text/javascript" src="../../../../whxdata/projectsettings.js"></script><link rel="stylesheet" type="text/css" href="../../../../template/styles/topic.min.css"><link rel="stylesheet" type="text/css" href="../../../../template/Charcoal_Grey/topicheader.css"><meta name="topic-status" content="Draft"><meta http-equiv="Content-Type" content="text/html; charset=utf-8"><title>instance_position_list</title><meta name="generator" content="Adobe RoboHelp 2022"><link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css"><script src="../../../../assets/scripts/main_script.js" type="module"></script><meta name="rh-authors" content="Mark Alexander"><meta name="topic-comment" content="Page outlining the function instance_position_list"><meta name="rh-index-keywords" content="instance_position_list"><meta name="search-keywords" content="instance_position_list"><meta name="is_pure" content="true"><meta name="brsnext" value="GameMaker_Language/GML_Reference/Asset_Management/Instances/instance_id_get.htm"><meta name="brsprev" value="GameMaker_Language/GML_Reference/Asset_Management/Instances/instance_position.htm"></head><body><div class="topic-header rh-hide" id="rh-topic-header"><div class="logo"></div><div class="nav"><div class="title" title="instance_position_list"><span>instance_position_list</span></div><div class="gotohome" title="Click here to see this page in full context"><a href="#" onclick="rh._.goToFullLayout()">Click here to see this page in full context</a></div></div></div><div class="topic-header-shadow rh-hide" id="rh-topic-header-shadow"></div><h1>instance_position_list</h1><p>With this function you can check a position for a collision with all instances of another object or tile maps.</p><p>When you use this you are checking a single point in the room, and the check will be done against the bounding box of the instances or against the mask of the instances if that object has precise collisions checked.</p><div data-conref="../../../../assets/snippets/Collisions_function_accepted_arguments.hts"><p>In addition to objects and instances, the function also accepts:</p><ul class="colour"><li>The special keywords <b>all</b> and <b>other</b></li><li>A&nbsp;<span data-keyref="Type_ID_Element_Tilemap"><a target="_blank" href="../Rooms/Tile_Map_Layers/layer_tilemap_get_id.htm">Tile Map Element ID</a></span></li><li>An array containing a combination of objects, instances, Tile Maps and the keywords <strong>all</strong>/<strong>other</strong></li></ul><p>Passing an array allows you to check for collisions against multiple objects and/or Tile Maps in one call.</p></div><p>You supply a <a href="../../Data_Structures/DS_Lists/DS_Lists.htm">DS list</a> too, so the&nbsp;<a href="Instance_Variables/id.htm"><span class="inline">id</span></a> values of any instances or tile maps that are colliding with the calling instance will be added to the end of the given list. You can <a href="../../Data_Structures/DS_Lists/ds_list_clear.htm">clear</a> the list before calling this function so that it only contains results from this function call. You also have the option to order the list based on the distance from the position being checked to the origin of the instances found to be in collision.</p><p>The function returns the number of instances / tile maps found, or 0 if none are found.</p><p>See:&nbsp;<a href="../../Movement_And_Collisions/Collisions/Collisions.htm">Collisions</a></p><p>&nbsp;</p><h4>Syntax:</h4><p class="code">instance_position_list(x, y, obj, list, ordered);</p><table><tbody><tr><th>Argument</th><th>Type</th><th>Description</th></tr><tr><td>x</td><td><span data-keyref="Type_Real"><a target="_blank" href="../../../GML_Overview/Data_Types.htm">Real</a></span></td><td>The x position to check for instances.</td></tr><tr><td>y</td><td><span data-keyref="Type_Real"><a target="_blank" href="../../../GML_Overview/Data_Types.htm">Real</a></span></td><td>The y position to check for instances.</td></tr><tr><td>obj</td><td><span data-keyref="Collision_obj_type"><span data-keyref="Type_Asset_Object"><a target="_blank" href="../../../../The_Asset_Editors/Objects.htm">Object Asset</a></span>&nbsp;or&nbsp;<span data-keyref="Type_ID_Instance"><a target="_blank" href="Instance_Variables/id.htm">Object Instance</a></span>&nbsp;or&nbsp;<span data-keyref="Type_ID_Element_Tilemap"><a target="_blank" href="../Rooms/Tile_Map_Layers/layer_tilemap_get_id.htm">Tile Map Element ID</a></span>&nbsp;or&nbsp;<span data-keyref="Type_Array"><a target="_blank" href="../../../GML_Overview/Arrays.htm">Array</a></span></span></td><td><span data-keyref="Collision_obj_description">An object, instance, tile map ID, keywords all/other, or array containing these items</span></td></tr><tr><td>list</td><td><span data-keyref="Type_ID_DS_List"><a target="_blank" href="../../Data_Structures/DS_Lists/ds_list_create.htm">DS List</a></span></td><td>The DS list to use to store the IDs of colliding instances.</td></tr><tr><td>ordered</td><td><span data-keyref="Type_Bool"><a target="_blank" href="../../../GML_Overview/Data_Types.htm">Boolean</a></span></td><td>Whether the list should be ordered by distance (<span class="inline">true</span>) or not (<span class="inline">false</span>).</td></tr></tbody></table><p>&nbsp;</p><h4>Returns:</h4><p class="code"><span data-keyref="Type_Real"><a target="_blank" href="../../../GML_Overview/Data_Types.htm">Real</a></span> (The number of instances / tile maps found to be in collision)</p><p>&nbsp;</p><h4>Example:</h4><p class="code">var _list = ds_list_create();<br>var _num = instance_position_list(mouse_x, mouse_y, all, _list, false);<br>if (_num &gt; 0)<br>{<br>&nbsp;&nbsp;&nbsp;&nbsp;for (var i = 0; i &lt; _num; ++i;)<br>&nbsp; &nbsp; {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;instance_destroy(_list[| i]);<br>&nbsp; &nbsp; }<br>}<br>ds_list_destroy(_list);</p><p>The above code will check for a collision with all instances found at the mouse position. These will be added to a DS list, which is then looped through to destroy each of the instances in collision.</p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><div class="footer"><div class="buttons"><div class="clear"><div style="float:left">Back: <a href="Instances.htm">Instances</a></div><div style="float:right">Next: <a href="instance_id_get.htm">instance_id_get</a></div></div></div><h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2024 All Rights Reserved</span></h5></div></body></html>