<!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml"><head><script type="text/javascript" src="../../../../assets/import/jquery-3.6.1.min.js"></script><script type="text/javascript" src="../../../../assets/import/layer/layer.js"></script><script type="text/javascript" src="../../../../assets/import/pangu.min.js"></script><link rel="stylesheet" type="text/css" href="../../../../assets/import/layer/layui_btn.css"><link rel="stylesheet" type="text/css" href="../../../../assets/import/layer/layui_col.css"><link rel="stylesheet" type="text/css" href="../../../../assets/import/layer/theme/default/layer.css"><link rel="stylesheet" type="text/css" href="../../../../assets/import/main.css"><script>let str;removeHtml=function(t){return t=(t=(t=(t=t.replace(/(<([^>]+)>)/gi,"{}")).replace(/\r\n/g,"\n")).replace(/\n/g,"")).replace(/ {2,}/g," ")},retHtml=function(t){return t.match(/(<([^>]+)>)/gi)},setTranslator=function(t,e,a){let n;n=a?t.attr(a):t.html();let l=e[removeHtml(n)];if(null!=l&&l.length){e=retHtml(n);let o=0;e&&e.forEach(function(t,e){var a=l.replace("{"+o+"}",t);l=a===l?l.replace("{}",t):a,o++}),a?t.attr(a,l):t.html(l)}},noTranslationState=function(){return"true"==window.localStorage.getItem("noTranslationState")},noTranslationStateToggle=function(){window.localStorage.setItem("noTranslationState",!noTranslationState())},addNoTranslationStateButton=function(){var t=`
		
		<button style="
			float: right;
			font-size: 16px;
			padding: 4px 12px;
		"
		onclick="
		window.location.replace('gmmt://'+document.location.hash)
		"
		>打开编辑器</button>

		<button style="
			float: right;
			font-size: 16px;
			padding: 4px 12px;
		"
		onclick="
		noTranslationStateToggle();
		location.reload();
    	event.stopPropagation();
		"
		>切换翻译</button>
		`;$(".header").length?$(".header").append(t):($(".topic-header").append(t),$(".topic-header button").css("position","relative").css("top","44px"))},removeExtensionFromHash=function(t){return t.replaceAll("#t=","").replaceAll("%2F","/").replaceAll(".htm","")};let json_global,json_file={"If the function fails, then it will fail silently without replacing the given sprite font.":"如果函数失败，那么它将在不替换给定的精灵字体的情况下静默失败。","It is also worth noting that there cannot be any {}spaces{} in the character map, so that if you, for example, use '.' and '0' but not '/', you need to either include '/' anyway or leave a blank sub-image between the two used characters. The image below shows a typical sprite font layout:":"还值得注意的是，字符映射中不能有任何{}空格{}，因此，例如，如果您使用‘.’和‘0’，而不是‘/’，则需要包括‘/’，或者在两个使用的字符之间留下一个空白的子图。下图显示了典型的精灵字体布局：",'The above code will replace the font asset indexed in the global variable "Font" with a new font asset from an external image file.':'上面的代码将用外部图像文件中的新字体资源替换全局变量 "Font" 中索引的字体资源。',"The index of the first available character.":"第一个可用字符的索引。","The index of the font that shall be replaced (ie all references to this resource past this function will refer to the new font, not the original).":"将被替换的字体的索引(即在此函数之后对此资源的所有引用将引用新字体，而不是原始字体)。","The space between each letter, 0 meaning the right of one letter just touches the left of the next one.":"每个字母之间的空格，0表示一个字母的右边刚好接触下一个字母的左边。","The sprite to add a font based on.":"要添加字体的精灵.","Whether white space around each letter should be removed (if false, the created font will be monospaced, otherwise it'll be like most regular fonts).":"是否应该删除每个字母周围的空白(如果为false，则创建的字体将为等宽字体，否则将与大多数常规字体一样)。",'With this function you can use a "sprite strip" to replace a previously created sprite font asset, where each sub-image would be an individual symbol or letter. The index is the UTF8 map number for the first character to use and the ranges to use are the same as you would for a normal font, starting with "!" but remember that you should only include what you need and that you should be using the {}{}ord(){}{}&nbsp;function to get the correct UTF8 value for the starting letter.':'使用此函数，您可以使用 "精灵条带" 来替换先前创建的精灵字体资源，其中每个子图像将是一个单独的符号或字母。索引是第一个要使用的字符的UTF8地图编号，使用的范围与普通字体相同，以 "!" 但是请记住，您应该仅包含所需的内容，并且应该使用{}{}ord(){}{}函数来获取起始字母的正确UTF8值。','You can also set the spacing for the font to be proportional ({}true{}) or not ({}false{}), where a proportional font is spaced based on the actual width of the letters (so the letter "i" takes less room than the letter "w", for example) while a non-proportional font will be spaced based on the sub-image width, like a monospaced font. Finally, you can define the space to leave between each letter when writing, and this can be any integer value, with 0 being no space (the letters will "touch" if proportional).&nbsp;':'您还可以将字体的间距设置为按比例 ({}true{}) 或不按比例 ({}false{})，其中按比例字体的间距是根据字母的实际宽度进行的 (因此，字母 "i" 占用的空间比字母 "w" 少，例如)，而非比例字体将根据子图像宽度进行间隔，例如等宽字体。最后，您可以定义书写时每个字母之间要留出的空间，这可以是任何整数值，0是没有空格的 (如果比例，字母将 "触摸")。',"t is also worth noting that there cannot be any {}spaces{} in the character map, so that if you, for example, use '.' and '0' but not '/', you need to either include '/' anyway or leave a blank sub-image between the two used characters. The image below shows a typical sprite font layout:":"t还值得注意的是，字符映射中不能有任何{}空格{}，因此，如果您例如使用 '.' 和 '0' 但不使用 '/'，则无论如何都需要包含 '/' 或在两个使用的字符之间留下空白的子图像。下图显示了典型的精灵字体布局:"},get_json_global=$.ajax({url:"/global.json",type:"GET",dataType:"json",async:!1,success:function(t){json_global=t}});$(function(){if(addNoTranslationStateButton(),noTranslationState())return!1;$("div.footer a,h4,caption").each(function(){setTranslator($(this),json_global)}),$("p,h1,h2,h3,td,li,a,div.dropspotnote,figcaption").each(function(){setTranslator($(this),json_file)}),$("th,.warning,.important,.optional").each(function(){setTranslator($(this),json_global)}),$(".header").length&&(window.setInterval(function(){$("#toc-panel a:not('isTranslate')").each(function(){$(this).addClass("isTranslate"),setTranslator($(this),json_global)}),$(".GlossDefinitionText:not('isTranslate')").each(function(){$(this).addClass("isTranslate"),setTranslator($(this),json_global)})},250),console.log("成功啦!现在正在疯狂翻译菜单中!")),$(".tooltip").each(function(){setTranslator($(this),json_global,"title")})}),document.addEventListener("DOMContentLoaded",()=>{pangu.autoSpacingPage()})</script><script type="text/javascript" language="JavaScript">function reDo(){innerWidth==origWidth&&innerHeight==origHeight||location.reload()}4==parseInt(navigator.appVersion)&&"Netscape"==navigator.appName&&(origWidth=innerWidth,origHeight=innerHeight,onresize=reDo),onerror=null</script><style type="text/css">p.WebHelpNavBar{text-align:right}</style><script type="text/javascript">gCommonRootRelPath=gRootRelPath="../../../..",gTopicId="8.2.2.3.10.0_16"</script><script type="text/javascript" src="../../../../template/scripts/rh.min.js"></script><script type="text/javascript" src="../../../../template/scripts/common.min.js"></script><script type="text/javascript" src="../../../../template/scripts/topic.min.js"></script><script type="text/javascript" src="../../../../template/scripts/topicwidgets.min.js"></script><script type="text/javascript" src="../../../../whxdata/projectsettings.js"></script><link rel="stylesheet" type="text/css" href="../../../../template/styles/topic.min.css"><link rel="stylesheet" type="text/css" href="../../../../template/Charcoal_Grey/topicheader.css"><meta name="topic-status" content="Draft"><meta http-equiv="Content-Type" content="text/html; charset=utf-8"><title>font_replace_sprite</title><meta name="generator" content="Adobe RoboHelp 2022"><link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css"><script src="../../../../assets/scripts/main_script.js" type="module"></script><meta name="rh-authors" content="Mark Alexander"><meta name="topic-comment" content="Page outlining the function font_replace_sprite"><meta name="rh-index-keywords" content="font_replace_sprite"><meta name="search-keywords" content="font_replace_sprite"><meta name="brsnext" value="GameMaker_Language/GML_Reference/Asset_Management/Fonts/font_replace_sprite_ext.htm"><meta name="brsprev" value="GameMaker_Language/GML_Reference/Asset_Management/Fonts/font_add_sprite_ext.htm"></head><body><div class="topic-header rh-hide" id="rh-topic-header"><div class="logo"></div><div class="nav"><div class="title" title="font_replace_sprite"><span>font_replace_sprite</span></div><div class="gotohome" title="Click here to see this page in full context"><a href="#" onclick="rh._.goToFullLayout()">Click here to see this page in full context</a></div></div></div><div class="topic-header-shadow rh-hide" id="rh-topic-header-shadow"></div><h1>font_replace_sprite</h1><p>With this function you can use a "sprite strip" to replace a previously created sprite font asset, where each sub-image would be an individual symbol or letter. The index is the UTF8 map number for the first character to use and the ranges to use are the same as you would for a normal font, starting with "!" but remember that you should only include what you need and that you should be using the <a href="../../Strings/ord.htm"><span class="inline">ord()</span></a>&nbsp;function to get the correct UTF8 value for the starting letter.</p><p>You can also set the spacing for the font to be proportional (<span class="inline">true</span>) or not (<span class="inline">false</span>), where a proportional font is spaced based on the actual width of the letters (so the letter "i" takes less room than the letter "w", for example) while a non-proportional font will be spaced based on the sub-image width, like a monospaced font. Finally, you can define the space to leave between each letter when writing, and this can be any integer value, with 0 being no space (the letters will "touch" if proportional).&nbsp;</p><p>If the function fails, then it will fail silently without replacing the given sprite font.</p><p>It is also worth noting that there cannot be any <i>spaces</i> in the character map, so that if you, for example, use '.' and '0' but not '/', you need to either include '/' anyway or leave a blank sub-image between the two used characters. The image below shows a typical sprite font layout:</p><p>&nbsp;</p><h4>Syntax:</h4><p class="code">font_replace_sprite(ind, spr, first, prop, sep);</p><table><tbody><tr><th>Argument</th><th>Type</th><th>Description</th></tr><tr><td>ind</td><td><span data-keyref="Type_Asset_Font"><a target="_blank" href="../../../../The_Asset_Editors/Fonts.htm">Font Asset</a></span></td><td>The index of the font that shall be replaced (ie all references to this resource past this function will refer to the new font, not the original).</td></tr><tr><td>spr</td><td><span data-keyref="Type_Asset_Sprite"><a target="_blank" href="../../../../The_Asset_Editors/Sprites.htm">Sprite Asset</a></span></td><td>The sprite to add a font based on.</td></tr><tr><td>first</td><td><span data-keyref="Type_Real"><a target="_blank" href="../../../GML_Overview/Data_Types.htm">Real</a></span></td><td>The index of the first available character.</td></tr><tr><td>prop</td><td><span data-keyref="Type_Bool"><a target="_blank" href="../../../GML_Overview/Data_Types.htm">Boolean</a></span></td><td>Whether white space around each letter should be removed (if false, the created font will be monospaced, otherwise it'll be like most regular fonts).</td></tr><tr><td>sep</td><td><span data-keyref="Type_Real"><a target="_blank" href="../../../GML_Overview/Data_Types.htm">Real</a></span></td><td>The space between each letter, 0 meaning the right of one letter just touches the left of the next one.</td></tr></tbody></table><p>&nbsp;</p><h4>Returns:</h4><p class="code"><span data-keyref="Type_Void">N/A</span></p><p>&nbsp;</p><h4>Example:</h4><p class="code">font_replace_sprite(global.Font, working_directory + "Sprites\spr_Font.png", ord("!"), true, 2);</p><p>The above code will replace the font asset indexed in the global variable "Font" with a new font asset from an external image file.</p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><div class="footer"><div class="buttons"><div class="clear"><div style="float:left">Back: <a href="Fonts.htm">Fonts</a></div><div style="float:right">Next: <a href="font_replace_sprite_ext.htm">font_replace_sprite_ext</a></div></div></div><h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2024 All Rights Reserved</span></h5></div></body></html>