<!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml"><head><script type="text/javascript" src="../../../../assets/import/jquery-3.6.1.min.js"></script><script type="text/javascript" src="../../../../assets/import/layer/layer.js"></script><script type="text/javascript" src="../../../../assets/import/pangu.min.js"></script><link rel="stylesheet" type="text/css" href="../../../../assets/import/layer/layui_btn.css"><link rel="stylesheet" type="text/css" href="../../../../assets/import/layer/layui_col.css"><link rel="stylesheet" type="text/css" href="../../../../assets/import/layer/theme/default/layer.css"><link rel="stylesheet" type="text/css" href="../../../../assets/import/main.css"><script>let str;removeHtml=function(t){return t=(t=(t=(t=t.replace(/(<([^>]+)>)/gi,"{}")).replace(/\r\n/g,"\n")).replace(/\n/g,"")).replace(/ {2,}/g," ")},retHtml=function(t){return t.match(/(<([^>]+)>)/gi)},setTranslator=function(t,n,a){let e;e=a?t.attr(a):t.html();let l=n[removeHtml(e)];if(null!=l&&l.length){n=retHtml(e);let o=0;n&&n.forEach(function(t,n){var a=l.replace("{"+o+"}",t);l=a===l?l.replace("{}",t):a,o++}),a?t.attr(a,l):t.html(l)}},noTranslationState=function(){return"true"==window.localStorage.getItem("noTranslationState")},noTranslationStateToggle=function(){window.localStorage.setItem("noTranslationState",!noTranslationState())},addNoTranslationStateButton=function(){$(".header").length&&$(".header").append(`
		
		<button style="
			float: right;
			font-size: 16px;
			padding: 4px 12px;
		"
		onclick="
		window.location.replace('gmmt://'+document.location.hash)
		"
		>打开编辑器</button>

		<button style="
			float: right;
			font-size: 16px;
			padding: 4px 12px;
		"
		onclick="
		noTranslationStateToggle();
		location.reload();
    	event.stopPropagation();
		"
		>切换翻译</button>
		`)},removeExtensionFromHash=function(t){return t.replaceAll("#t=","").replaceAll("%2F","/").replaceAll(".htm","")},$(function(){if(addNoTranslationStateButton(),noTranslationState())return!1;$("div.footer a,h4,caption,blockquote").each(function(){setTranslator($(this),json_global)}),$("p,h1,h2,h3,td,li,a,div.dropspotnote,figcaption,.expandtext").each(function(){setTranslator($(this),json)}),$("th,.warning,.important,.optional").each(function(){setTranslator($(this),json_global)}),$(".header").length&&(window.setInterval(function(){$("#toc-panel a:not('isTranslate')").each(function(){$(this).addClass("isTranslate"),setTranslator($(this),json_global)}),$(".GlossDefinitionText:not('isTranslate')").each(function(){$(this).addClass("isTranslate"),setTranslator($(this),json_global)})},250),console.log("成功啦!现在正在疯狂翻译菜单中!")),$(".tooltip").each(function(){setTranslator($(this),json_global,"title")})}),document.addEventListener("DOMContentLoaded",()=>{pangu.autoSpacingPage()})</script><script type="text/javascript" language="JavaScript">function reDo(){innerWidth==origWidth&&innerHeight==origHeight||location.reload()}4==parseInt(navigator.appVersion)&&"Netscape"==navigator.appName&&(origWidth=innerWidth,origHeight=innerHeight,onresize=reDo),onerror=null</script><style type="text/css">p.WebHelpNavBar{text-align:right}</style><script type="text/javascript">gCommonRootRelPath=gRootRelPath="../../../..",gTopicId="8.2.2.13.5.0_27"</script><script type="text/javascript" src="../../../../template/scripts/rh.min.js"></script><script type="text/javascript" src="../../../../template/scripts/common.min.js"></script><script type="text/javascript" src="../../../../template/scripts/topic.min.js"></script><script type="text/javascript" src="../../../../template/scripts/topicwidgets.min.js"></script><script type="text/javascript" src="../../../../whxdata/projectsettings.js"></script><link rel="stylesheet" type="text/css" href="../../../../template/styles/topic.min.css"><link rel="stylesheet" type="text/css" href="../../../../template/Charcoal_Grey/topicheader.css"><meta name="topic-status" content="Draft"><meta http-equiv="Content-Type" content="text/html; charset=utf-8"><title>physics_particle_get_data</title><meta name="generator" content="Adobe RoboHelp 2022"><link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css"><script src="../../../../assets/scripts/main_script.js" type="module"></script><meta name="rh-authors" content="Mark Alexander"><meta name="topic-comment" content="Reference page for physics_particle_get_data"><meta name="rh-index-keywords" content="physics_particle_get_data,phy_particle_data_flag_typeflags,phy_particle_data_flag_position,phy_particle_data_flag_velocity,phy_particle_data_flag_colour,phy_particle_data_flag_category,phy_particle_data_flag_color"><meta name="search-keywords" content="physics_particle_get_data,phy_particle_data_flag_typeflags,phy_particle_data_flag_position,phy_particle_data_flag_velocity,phy_particle_data_flag_colour,phy_particle_data_flag_category,phy_particle_data_flag_color"><meta name="is_pure" content="true"><meta name="brsnext" value="GameMaker_Language/GML_Reference/Physics/Soft_Body_Particles/physics_particle_get_data_particle.htm"><meta name="brsprev" value="GameMaker_Language/GML_Reference/Physics/Soft_Body_Particles/physics_particle_group_get_angle.htm"></head><body><div class="topic-header rh-hide" id="rh-topic-header"><div class="logo"></div><div class="nav"><div class="title" title="physics_particle_get_data"><span>physics_particle_get_data</span></div><div class="gotohome" title="Click here to see this page in full context"><a href="#" onclick="rh._.goToFullLayout()">Click here to see this page in full context</a></div></div></div><div class="topic-header-shadow rh-hide" id="rh-topic-header-shadow"></div><h1><span data-field="title" data-format="default">physics_particle_get_data</span></h1><p>This function returns various pieces of information about each particle in the physics simulation using the given flags checked.</p><p>The buffer used must have been created previously using the function <span class="inline3_func"><a href="../../Buffers/buffer_create.htm">buffer_create</a></span>, and should be of the "grow" type, with the size being approximately that of the expected return data. The flags are set using any of the constants given below, and you would use the <a href="../../../../Additional_Information/Bitwise_Operators.htm">bitwise <i>or</i></a>&nbsp; <span class="inline2">|</span>&nbsp;to create a single flag value to get the desired information.</p><table><colgroup><col><col><col></colgroup><tbody><tr><th colspan="3"><span data-keyref="Type_Constant_Phy_Particle_Data_Flag"><a target="_blank" href="physics_particle_get_data.htm">Physics Particle Data Flag Constant</a></span></th></tr><tr><th>Constant</th><th>Description</th><th>Data Type</th></tr><tr><td><span class="inline">phy_particle_data_flag_typeflags</span></td><td>The flags value for the particle.</td><td>buffer_u32</td></tr><tr><td><span class="inline">phy_particle_data_flag_position</span></td><td>The x and y position of the particle.</td><td>2 x buffer_f32</td></tr><tr><td><span class="inline">phy_particle_data_flag_velocity</span></td><td>The horizontal and vertical speed.</td><td>2 x buffer_f32</td></tr><tr><td><span class="inline">phy_particle_data_flag_colour</span></td><td>The colour and alpha value (hexadecimal).</td><td>buffer_u32</td></tr><tr><td><span class="inline">phy_particle_data_flag_category</span></td><td>The particle category (as defined when you created the particle or group to which it belongs).</td><td>buffer_u32</td></tr></tbody></table><p>&nbsp;</p><h4>Syntax:</h4><p class="code"><span data-field="title" data-format="default">physics_particle_get_data</span>(buffer, flags)</p><table><tbody><tr><th>Argument</th><th>Type</th><th>Description</th></tr><tr><td>buffer</td><td><span data-keyref="Type_ID_Buffer"><a target="_blank" href="../../Buffers/buffer_create.htm">Buffer</a></span></td><td>The (previously created) buffer to store the data.</td></tr><tr><td>flags</td><td><span data-keyref="Type_Constant_Phy_Particle_Data_Flag"><a target="_blank" href="physics_particle_get_data.htm">Physics Particle Data Flag Constant</a></span>(s)</td><td>The flags to use to extract data about specific particle types.</td></tr></tbody></table><p>&nbsp;</p><h4>Returns:</h4><p class="code"><span data-keyref="Type_Void">N/A</span></p><p>&nbsp;</p><h4>Example:</h4><p class="code">var count = physics_particle_count();<br>var flags = phy_particle_data_flag_position | phy_particle_data_flag_colour;<br>if (count &gt; 0)<br>{<br>&nbsp;&nbsp;&nbsp;&nbsp;var buffer = buffer_create(count * 12, buffer_grow, 4);<br>&nbsp;&nbsp;&nbsp;&nbsp;physics_particle_get_data(buffer, flags);<br>&nbsp;&nbsp;&nbsp;&nbsp;for (var n = 0; n &lt; count; n++;)<br>&nbsp; &nbsp; {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var xx = buffer_read(buffer, buffer_f32);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var yy = buffer_read(buffer, buffer_f32);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var argb = buffer_read(buffer, buffer_u32);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var alpha = (argb &gt;&gt; 24) &amp; 255;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;draw_sprite_ext(sprBlob, 0, xx, yy, 1, 1, 0, c_green, alpha);<br>&nbsp; &nbsp; }<br>&nbsp;&nbsp;&nbsp;&nbsp;buffer_delete(buffer);<br>}</p><p>The above code gets the number of particles and creates a variable with the data flags to check, then checks to see if there are any particles in the room. If there are, a buffer is created and then filled with the particle data, which is checked and used to draw a sprite at the particle position.</p><p>&nbsp;</p><p>&nbsp;</p><div class="footer"><div class="buttons"><div class="clear"><div style="float:left">Back: <a href="Soft_Body_Particles.htm">Soft Body Particles</a></div><div style="float:right">Next:&nbsp;<a href="physics_particle_get_data_particle.htm">physics_particle_get_data_particle</a></div></div></div><h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2024 All Rights Reserved</span></h5></div></body></html>