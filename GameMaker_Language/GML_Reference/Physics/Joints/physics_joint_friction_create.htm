<!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml"><head><script type="text/javascript" src="../../../../assets/import/jquery-3.6.1.min.js"></script><script type="text/javascript" src="../../../../assets/import/layer/layer.js"></script><script type="text/javascript" src="../../../../assets/import/pangu.min.js"></script><link rel="stylesheet" type="text/css" href="../../../../assets/import/layer/layui_btn.css"><link rel="stylesheet" type="text/css" href="../../../../assets/import/layer/layui_col.css"><link rel="stylesheet" type="text/css" href="../../../../assets/import/layer/theme/default/layer.css"><link rel="stylesheet" type="text/css" href="../../../../assets/import/main.css"><script>let str;removeHtml=function(t){return t=(t=(t=(t=t.replace(/(<([^>]+)>)/gi,"{}")).replace(/\r\n/g,"\n")).replace(/\n/g,"")).replace(/ {2,}/g," ")},retHtml=function(t){return t.match(/(<([^>]+)>)/gi)},setTranslator=function(t,e,n){let a;a=n?t.attr(n):t.html();let i=e[removeHtml(a)];if(null!=i&&i.length){e=retHtml(a);let o=0;e&&e.forEach(function(t,e){var n=i.replace("{"+o+"}",t);i=n===i?i.replace("{}",t):n,o++}),n?t.attr(n,i):t.html(i)}},noTranslationState=function(){return"true"==window.localStorage.getItem("noTranslationState")},noTranslationStateToggle=function(){window.localStorage.setItem("noTranslationState",!noTranslationState())},addNoTranslationStateButton=function(){var t=`
		
		<button style="
			float: right;
			font-size: 16px;
			padding: 4px 12px;
		"
		onclick="
		window.location.replace('gmmt://'+document.location.hash)
		"
		>打开编辑器</button>

		<button style="
			float: right;
			font-size: 16px;
			padding: 4px 12px;
		"
		onclick="
		noTranslationStateToggle();
		location.reload();
    	event.stopPropagation();
		"
		>切换翻译</button>
		`;$(".header").length?$(".header").append(t):($(".topic-header").append(t),$(".topic-header button").css("position","relative").css("top","44px"))},removeExtensionFromHash=function(t){return t.replaceAll("#t=","").replaceAll("%2F","/").replaceAll(".htm","")};let json_global,json_file={"The above code will create a fixture then bind it to two instances, before connecting them both using a friction joint.":"上述代码将创建一个装置，然后将其绑定到两个实例，然后使用摩擦关节连接两个实例。","The first instance to connect with the joint":"与关节连接的第一个实例","The friction joint is a bit different to all other joints in the physics simulation in that the connection created will not constrain the instances position or movement, but rather its speed and rotation. This works by taking the maximum input values for force and torque and applying those to the second fixture to bring the speed and angular momentum down to the same values as that of the first instance. So, if you have a stationary instance and a moving instance then connect them with a friction joint, the moving instance will gradually slow down until it too is stationary. If both instances were moving then the second instance will have its movement speed modified to match that of the first instance.":"摩擦关节与物理模拟中的所有其他关节稍有不同，因为创建的连接不会约束实例的位置或运动，而是约束其速度和旋转。这通过获取力和扭矩的最大输入值并将这些值应用到第二个装置来使速度和角动量下降到与第一个实例相同的值。因此，如果有一个固定实例和一个移动实例，然后使用摩擦关节将它们连接起来，则移动实例将逐渐减慢，直到它也是静止的。如果两个实例都在移动，则第二个实例的移动速度将被修改为与第一个实例的移动速度相匹配。","The maximum frictional force that will be applied":"将要施加的最大摩擦力","The maximum rotational force that will be applied":"将要施加的最大旋转力","The second instance to connect with the joint":"与关节连接的第二个实例","The x coordinate for the joint, within the game world":"游戏世界中关节的 X 坐标","The y coordinate for the joint, within the game world":"游戏世界中关节的 Y 坐标","Whether the two instances can collide (true) or not (false)":"这两个实例是否可以碰撞 (true) 或不碰撞 (false)",'{}As with most other joints, you supply the instances to join together, as well as the position for the joint to be created at within the room. You then supply the maximum force and maximum torque (directional and rotational friction), and if you set the "col" value to {}true{} then the two instances can interact and collide with each other but {}only{} if they have collision events, however if it is set to {}false{}, they will not collide no matter what.':'{} 与大多数其他关节一样，您提供了要连接在一起的实例，以及要在房间内创建关节的位置。然后提供最大力和最大扭矩 (方向摩擦和旋转摩擦)，如果将 "col" 值设置为 {}true{}，则两个实例可以相互作用并发生碰撞，但是{}只有{}在它们发生碰撞事件时才会发生碰撞，但是如果设置为 {}false{}，则无论发生什么情况，它们都不会发生碰撞。'},get_json_global=$.ajax({url:"/global.json",type:"GET",dataType:"json",async:!1,success:function(t){json_global=t}});$(function(){if(addNoTranslationStateButton(),noTranslationState())return!1;$("div.footer a,h4,caption").each(function(){setTranslator($(this),json_global)}),$("p,h1,h2,h3,td,li,a,div.dropspotnote,figcaption").each(function(){setTranslator($(this),json_file)}),$("th,.warning,.important,.optional").each(function(){setTranslator($(this),json_global)}),$(".header").length&&(window.setInterval(function(){$("#toc-panel a:not('isTranslate')").each(function(){$(this).addClass("isTranslate"),setTranslator($(this),json_global)}),$(".GlossDefinitionText:not('isTranslate')").each(function(){$(this).addClass("isTranslate"),setTranslator($(this),json_global)})},250),console.log("成功啦!现在正在疯狂翻译菜单中!")),$(".tooltip").each(function(){setTranslator($(this),json_global,"title")})}),document.addEventListener("DOMContentLoaded",()=>{pangu.autoSpacingPage()})</script><script type="text/javascript" language="JavaScript">function reDo(){innerWidth==origWidth&&innerHeight==origHeight||location.reload()}4==parseInt(navigator.appVersion)&&"Netscape"==navigator.appName&&(origWidth=innerWidth,origHeight=innerHeight,onresize=reDo),onerror=null</script><style type="text/css">p.WebHelpNavBar{text-align:right}</style><script type="text/javascript">gCommonRootRelPath=gRootRelPath="../../../..",gTopicId="8.2.2.13.4.0_10"</script><script type="text/javascript" src="../../../../template/scripts/rh.min.js"></script><script type="text/javascript" src="../../../../template/scripts/common.min.js"></script><script type="text/javascript" src="../../../../template/scripts/topic.min.js"></script><script type="text/javascript" src="../../../../template/scripts/topicwidgets.min.js"></script><script type="text/javascript" src="../../../../whxdata/projectsettings.js"></script><link rel="stylesheet" type="text/css" href="../../../../template/styles/topic.min.css"><link rel="stylesheet" type="text/css" href="../../../../template/Charcoal_Grey/topicheader.css"><meta name="topic-status" content="Draft"><meta http-equiv="Content-Type" content="text/html; charset=utf-8"><title>physics_joint_friction_create</title><meta name="generator" content="Adobe RoboHelp 2022"><link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css"><script src="../../../../assets/scripts/main_script.js" type="module"></script><meta name="rh-authors" content="Mark Alexander"><meta name="topic-comment" content="Reference page for physics_joint_friction_create"><meta name="rh-index-keywords" content="physics_joint_friction_create"><meta name="search-keywords" content="physics_joint_friction_create"><meta name="is_pure" content="true"><meta name="brsnext" value="GameMaker_Language/GML_Reference/Physics/Joints/physics_joint_delete.htm"><meta name="brsprev" value="GameMaker_Language/GML_Reference/Physics/Joints/physics_joint_weld_create.htm"></head><body><div class="topic-header rh-hide" id="rh-topic-header"><div class="logo"></div><div class="nav"><div class="title" title="physics_joint_friction_create"><span>physics_joint_friction_create</span></div><div class="gotohome" title="Click here to see this page in full context"><a href="#" onclick="rh._.goToFullLayout()">Click here to see this page in full context</a></div></div></div><div class="topic-header-shadow rh-hide" id="rh-topic-header-shadow"></div><h1>physics_joint_friction_create</h1><p>The friction joint is a bit different to all other joints in the physics simulation in that the connection created will not constrain the instances position or movement, but rather its speed and rotation. This works by taking the maximum input values for force and torque and applying those to the second fixture to bring the speed and angular momentum down to the same values as that of the first instance. So, if you have a stationary instance and a moving instance then connect them with a friction joint, the moving instance will gradually slow down until it too is stationary. If both instances were moving then the second instance will have its movement speed modified to match that of the first instance.</p><p><img alt="Friction joint illustration" class="center" src="../../../../assets/Images/Scripting_Reference/GML/Reference/Physics/friction_joint_image.png">As with most other joints, you supply the instances to join together, as well as the position for the joint to be created at within the room. You then supply the maximum force and maximum torque (directional and rotational friction), and if you set the "col" value to <span class="inline">true</span> then the two instances can interact and collide with each other but <i>only</i> if they have collision events, however if it is set to <span class="inline">false</span>, they will not collide no matter what.</p><p>&nbsp;</p><h4>Syntax:</h4><p class="code">physics_joint_friction_create(inst1, inst2, anchor_x, anchor_y, max_force, max_torque, col)</p><table><tbody><tr><th>Argument</th><th>Type</th><th>Description</th></tr><tr><td>inst1</td><td><span data-keyref="Type_ID_Instance"><a target="_blank" href="../../Asset_Management/Instances/Instance_Variables/id.htm">Object Instance</a></span></td><td>The first instance to connect with the joint</td></tr><tr><td>inst2</td><td><span data-keyref="Type_ID_Instance"><a target="_blank" href="../../Asset_Management/Instances/Instance_Variables/id.htm">Object Instance</a></span></td><td>The second instance to connect with the joint</td></tr><tr><td>anchor_x</td><td><span data-keyref="Type_Real"><a target="_blank" href="../../../GML_Overview/Data_Types.htm">Real</a></span></td><td>The x coordinate for the joint, within the game world</td></tr><tr><td>anchor_y</td><td><span data-keyref="Type_Real"><a target="_blank" href="../../../GML_Overview/Data_Types.htm">Real</a></span></td><td>The y coordinate for the joint, within the game world</td></tr><tr><td>max_force</td><td><span data-keyref="Type_Real"><a target="_blank" href="../../../GML_Overview/Data_Types.htm">Real</a></span></td><td>The maximum frictional force that will be applied</td></tr><tr><td>max_torque</td><td><span data-keyref="Type_Real"><a target="_blank" href="../../../GML_Overview/Data_Types.htm">Real</a></span></td><td>The maximum rotational force that will be applied</td></tr><tr><td>col</td><td><span data-keyref="Type_Bool"><a target="_blank" href="../../../GML_Overview/Data_Types.htm">Boolean</a></span></td><td>Whether the two instances can collide (true) or not (false)</td></tr></tbody></table><p>&nbsp;</p><h4>Returns:</h4><p class="code"><span data-keyref="Type_ID_Physics_Joint"><a target="_blank" href="Joints.htm">Physics Joint ID</a></span></p><p>&nbsp;</p><h4>Example:</h4><p class="code">var mainFixture, o_id;<br>mainFixture = physics_fixture_create();<br>physics_fixture_set_circle_shape(mainFixture, sprite_get_width(sprite_index) / 2);<br>o_id = instance_create_layer(x+300, y, "Instances", obj_Rudder);<br>physics_fixture_bind(mainFixture, id);<br>physics_fixture_bind(mainFixture, o_id);<br>physics_joint_friction_create(id, o_id, x, y, 10, 0.3, true);<br>physics_fixture_delete(mainFixture);</p><p>The above code will create a fixture then bind it to two instances, before connecting them both using a friction joint.</p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><div class="footer"><div class="buttons"><div class="clear"><div style="float:left">Back: <a href="Joints.htm">Joints</a></div><div style="float:right">Next:&nbsp;<a href="physics_joint_delete.htm">physics_joint_delete</a></div></div></div><h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2024 All Rights Reserved</span></h5></div></body></html>