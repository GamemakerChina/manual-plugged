<!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml"><head><script type="text/javascript" src="../../../../assets/import/jquery-3.6.1.min.js"></script><script type="text/javascript" src="../../../../assets/import/layer/layer.js"></script><script type="text/javascript" src="../../../../assets/import/pangu.min.js"></script><link rel="stylesheet" type="text/css" href="../../../../assets/import/layer/layui_btn.css"><link rel="stylesheet" type="text/css" href="../../../../assets/import/layer/layui_col.css"><link rel="stylesheet" type="text/css" href="../../../../assets/import/layer/theme/default/layer.css"><link rel="stylesheet" type="text/css" href="../../../../assets/import/main.css"><script>let str;removeHtml=function(t){return t=(t=(t=(t=t.replace(/(<([^>]+)>)/gi,"{}")).replace(/\r\n/g,"\n")).replace(/\n/g,"")).replace(/ {2,}/g," ")},retHtml=function(t){return t.match(/(<([^>]+)>)/gi)},setTranslator=function(t,e,o){let a;a=o?t.attr(o):t.html();let i=e[removeHtml(a)];if(null!=i&&i.length){e=retHtml(a);let n=0;e&&e.forEach(function(t,e){var o=i.replace("{"+n+"}",t);i=o===i?i.replace("{}",t):o,n++}),o?t.attr(o,i):t.html(i)}},noTranslationState=function(){return"true"==window.localStorage.getItem("noTranslationState")},noTranslationStateToggle=function(){window.localStorage.setItem("noTranslationState",!noTranslationState())},addNoTranslationStateButton=function(){var t=`
		
		<button style="
			float: right;
			font-size: 16px;
			padding: 4px 12px;
		"
		onclick="
		window.location.replace('gmmt://'+document.location.hash)
		"
		>打开编辑器</button>

		<button style="
			float: right;
			font-size: 16px;
			padding: 4px 12px;
		"
		onclick="
		noTranslationStateToggle();
		location.reload();
    	event.stopPropagation();
		"
		>切换翻译</button>
		`;$(".header").length?$(".header").append(t):($(".topic-header").append(t),$(".topic-header button").css("position","relative").css("top","44px"))},removeExtensionFromHash=function(t){return t.replaceAll("#t=","").replaceAll("%2F","/").replaceAll(".htm","")};let json_global,json_file={"A revolute joint forces two bodies to share a common anchor point (often called a hinge point) and the joint has a single degree of freedom - the relative rotation of the two bodies around this point. To specify a revolute you need to provide two instances and a single anchor point in the room, as you can see in the image provided:":"旋转关节强制两个主体共享一个公共锚点 (通常称为铰点)，并且关节具有单个自由度 - 即两个主体围绕该点的相对旋转。要指定旋转，需要在房间中提供两个实例和一个锚点，如所提供的图像中所示：",'As with all the joints, if you set the "col" value to {}true{} then the two instances can interact and collide with each other but {}only{} if they have collision events, however if it is set to {}false{}, they will not collide no matter what.':'与所有关节一样，如果将 "col" 值设置为 {}true{}，则两个实例可以相互作用并发生碰撞，但是如果它们发生碰撞事件，则只能 {} 发生碰撞，但是如果设置为 {}false{}，则无论发生什么情况，它们都不会发生碰撞。',"Sets the maximum motor torque used to achieve the desired motor speed (in Newtons per meter)":"设置用于实现所需马达转速的最大马达转矩(单位：牛顿/米)",'The above code creates and defines a new fixture and then creates an instance of "obj_Door", binding the created fixture to the two new objects. They are then joined by a revolute joint with no motor and the angles limited to a +/- 90 degree swing. Finally the fixture is deleted as it is no longer needed.':'上述代码创建并定义了一个新的装置，然后创建 "obj_Door" 实例，将创建的装置绑定到两个新对象。然后通过一个没有马达的旋转关节连接它们，角度限制在 +/- 90 度回转。最后，由于不再需要该装置，因此将其删除。',"The first instance to connect with the joint":"与关节连接的第一个实例","The lower permitted limit for the joint angle":"关节角度的允许下限","The second instance to connect with the joint":"与关节连接的第二个实例","The upper permitted limit for the joint angle":"关节角度的允许上限","The x coordinate for the joint, within the game world":"游戏世界中关节的 X 坐标","The y coordinate for the joint, within the game world":"游戏世界中关节的 Y 坐标","This is the speed at which the motor should rotate":"这是马达应该旋转的速度","Whether the motor should be active (true) or not (false)":"马达是否应该启动 (true) 或不启动 (false)","Whether the to limit the angle of the joint (true) or not (false)":"是否限制关节的角度 (true) 或 (false)","Whether the two instances can collide (true) or not (false)":"这两个实例是否可以碰撞 (true) 或不碰撞 (false)",'{}As you can see, angles in the physics world are {}not{} the same as the standard {}GameMaker{} angles where right is 0 degrees and then it goes anti-clockwise so that up is 90, left is 180, and down is 270. No, when dealing with the revolute joint, the 0 degrees axis runs from the joint position to the origin of the second instance defined by the function and the angles are then calculated in a clockwise direction. If you switch on angle limiting, the limits are defined as being relative to this 0 degree axis and the limit range {}should include zero{}, otherwise the joint will lurch when the room begins. Finally, you can define the joint as having a motor or not. This means that when uninfluenced by a collision the joint will move in a direction, which is defined by the motor speed with a positive number being clockwise and a negative number being anti-clockwise. The "max_motor_torque" argument is for limiting the speed of the rotation so that you don\'t get a perpetually accelerating motor and to limit the influence that a collision may have on the rotation. In this way you can use a joint motor to simulate joint friction by setting joint speed to zero and maximum torque to some small, but significant value. The motor will try to prevent the joint from rotating, but will yield to a significant load.':'{}如您所见，物理世界中的角度与标准 {}GameMaker{} 的角度{1}不同{2} ，其中右为 0 度，然后逆时针旋转，所以向上为 90 度，向左为 180 度，向下为 270 度。否，在处理旋转关节时，0 度轴从关节位置延伸到由函数定义的第二个实例的原点，然后沿顺时针方向计算角度。如果打开角度限制，则将限制定义为相对于此 0 度轴，并且限制范围 {} 应包括零 {}，否则当房间开始时，关节将倾斜。最后，可以将关节定义为是否具有马达。这意味着，当不受碰撞影响时，关节将沿着一个方向移动，该方向由马达速度定义，正数为顺时针方向，负数为逆时针方向。"max_motor_torque" 参数用于限制旋转速度，从而避免马达永久加速，并限制碰撞对旋转的影响。通过这种方式，可以使用马达关节通过将关节速度设置为零并将最大扭矩设置为某个较小但有效的值来模拟关节摩擦力。马达将尝试防止关节旋转，但会产生较大的负载。','{}If you look at the image, you can see that the two instances have been created to over-lap and at the point where they are touching, we have defined a revolute joint. Now, this joint can be limited in its freedom of rotation thanks to the "ang_min_limit" and "ang_max_limit" values. How does this work? Well, let\'s look at another image:':'{}如果您查看图像，可以看到这两个实例已创建为重叠，并且在它们接触的点处，我们定义了一个旋转关节。现在，由于 "ang_min_limit" 和 "ang_max_limit" 值，该关节的旋转自由度可能受到限制。这是如何工作的？好吧，让我们看看另一个图像：'},get_json_global=$.ajax({url:"/global.json",type:"GET",dataType:"json",async:!1,success:function(t){json_global=t}});$(function(){if(addNoTranslationStateButton(),noTranslationState())return!1;$("div.footer a,h4,caption").each(function(){setTranslator($(this),json_global)}),$("p,h1,h2,h3,td,li,a,div.dropspotnote,figcaption").each(function(){setTranslator($(this),json_file)}),$("th,.warning,.important,.optional").each(function(){setTranslator($(this),json_global)}),$(".header").length&&(window.setInterval(function(){$("#toc-panel a:not('isTranslate')").each(function(){$(this).addClass("isTranslate"),setTranslator($(this),json_global)}),$(".GlossDefinitionText:not('isTranslate')").each(function(){$(this).addClass("isTranslate"),setTranslator($(this),json_global)})},250),console.log("成功啦!现在正在疯狂翻译菜单中!")),$(".tooltip").each(function(){setTranslator($(this),json_global,"title")})}),document.addEventListener("DOMContentLoaded",()=>{pangu.autoSpacingPage()})</script><script type="text/javascript" language="JavaScript">function reDo(){innerWidth==origWidth&&innerHeight==origHeight||location.reload()}4==parseInt(navigator.appVersion)&&"Netscape"==navigator.appName&&(origWidth=innerWidth,origHeight=innerHeight,onresize=reDo),onerror=null</script><style type="text/css">p.WebHelpNavBar{text-align:right}</style><script type="text/javascript">gCommonRootRelPath=gRootRelPath="../../../..",gTopicId="8.2.2.13.4.0_3"</script><script type="text/javascript" src="../../../../template/scripts/rh.min.js"></script><script type="text/javascript" src="../../../../template/scripts/common.min.js"></script><script type="text/javascript" src="../../../../template/scripts/topic.min.js"></script><script type="text/javascript" src="../../../../template/scripts/topicwidgets.min.js"></script><script type="text/javascript" src="../../../../whxdata/projectsettings.js"></script><link rel="stylesheet" type="text/css" href="../../../../template/styles/topic.min.css"><link rel="stylesheet" type="text/css" href="../../../../template/Charcoal_Grey/topicheader.css"><meta name="topic-status" content="Draft"><meta http-equiv="Content-Type" content="text/html; charset=utf-8"><title>physics_joint_revolute_create</title><meta name="generator" content="Adobe RoboHelp 2022"><link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css"><script src="../../../../assets/scripts/main_script.js" type="module"></script><meta name="rh-authors" content="Mark Alexander"><meta name="topic-comment" content="Reference page for physics_joint_revolute_create"><meta name="rh-index-keywords" content="physics_joint_revolute_create"><meta name="search-keywords" content="physics_joint_revolute_create"><meta name="is_pure" content="true"><meta name="brsnext" value="GameMaker_Language/GML_Reference/Physics/Joints/physics_joint_prismatic_create.htm"><meta name="brsprev" value="GameMaker_Language/GML_Reference/Physics/Joints/physics_joint_distance_create.htm"></head><body><div class="topic-header rh-hide" id="rh-topic-header"><div class="logo"></div><div class="nav"><div class="title" title="physics_joint_revolute_create"><span>physics_joint_revolute_create</span></div><div class="gotohome" title="Click here to see this page in full context"><a href="#" onclick="rh._.goToFullLayout()">Click here to see this page in full context</a></div></div></div><div class="topic-header-shadow rh-hide" id="rh-topic-header-shadow"></div><h1>physics_joint_revolute_create</h1><p>A revolute joint forces two bodies to share a common anchor point (often called a hinge point) and the joint has a single degree of freedom - the relative rotation of the two bodies around this point. To specify a revolute you need to provide two instances and a single anchor point in the room, as you can see in the image provided:</p><p><img alt="Revolute joint anchor points illustration" class="center" src="../../../../assets/Images/Scripting_Reference/GML/Reference/Physics/revolute_joint_image_1.png">If you look at the image, you can see that the two instances have been created to over-lap and at the point where they are touching, we have defined a revolute joint. Now, this joint can be limited in its freedom of rotation thanks to the "ang_min_limit" and "ang_max_limit" values. How does this work? Well, let's look at another image:</p><p><img alt="Revolute joint angle limits illustration" class="center" src="../../../../assets/Images/Scripting_Reference/GML/Reference/Physics/revolute_joint_image_2.png">As you can see, angles in the physics world are <i>not</i> the same as the standard <span data-keyref="GameMaker Name">GameMaker</span> angles where right is 0 degrees and then it goes anti-clockwise so that up is 90, left is 180, and down is 270. No, when dealing with the revolute joint, the 0 degrees axis runs from the joint position to the origin of the second instance defined by the function and the angles are then calculated in a clockwise direction. If you switch on angle limiting, the limits are defined as being relative to this 0 degree axis and the limit range <i>should include zero</i>, otherwise the joint will lurch when the room begins. Finally, you can define the joint as having a motor or not. This means that when uninfluenced by a collision the joint will move in a direction, which is defined by the motor speed with a positive number being clockwise and a negative number being anti-clockwise. The "max_motor_torque" argument is for limiting the speed of the rotation so that you don't get a perpetually accelerating motor and to limit the influence that a collision may have on the rotation. In this way you can use a joint motor to simulate joint friction by setting joint speed to zero and maximum torque to some small, but significant value. The motor will try to prevent the joint from rotating, but will yield to a significant load.</p><p>As with all the joints, if you set the "col" value to <span class="inline">true</span> then the two instances can interact and collide with each other but <i>only</i> if they have collision events, however if it is set to <span class="inline">false</span>, they will not collide no matter what.</p><p>&nbsp;</p><h4>Syntax:</h4><p class="code">physics_joint_revolute_create(inst1, inst2, w_anchor_x, w_anchor_y, ang_min_limt, ang_max_limit, ang_limit, max_motor_torque, motor_speed, motor, col)</p><table><tbody><tr><th>Argument</th><th>Type</th><th>Description</th></tr><tr><td>inst1</td><td><span data-keyref="Type_ID_Instance"><a target="_blank" href="../../Asset_Management/Instances/Instance_Variables/id.htm">Object Instance</a></span></td><td>The first instance to connect with the joint</td></tr><tr><td>inst2</td><td><span data-keyref="Type_ID_Instance"><a target="_blank" href="../../Asset_Management/Instances/Instance_Variables/id.htm">Object Instance</a></span></td><td>The second instance to connect with the joint</td></tr><tr><td>w_anchor_x</td><td><span data-keyref="Type_Real"><a target="_blank" href="../../../GML_Overview/Data_Types.htm">Real</a></span></td><td>The x coordinate for the joint, within the game world</td></tr><tr><td>w_anchor_y</td><td><span data-keyref="Type_Real"><a target="_blank" href="../../../GML_Overview/Data_Types.htm">Real</a></span></td><td>The y coordinate for the joint, within the game world</td></tr><tr><td>ang_min_limit</td><td><span data-keyref="Type_Real"><a target="_blank" href="../../../GML_Overview/Data_Types.htm">Real</a></span></td><td>The lower permitted limit for the joint angle</td></tr><tr><td>ang_max_limit</td><td><span data-keyref="Type_Real"><a target="_blank" href="../../../GML_Overview/Data_Types.htm">Real</a></span></td><td>The upper permitted limit for the joint angle</td></tr><tr><td>ang_limit</td><td><span data-keyref="Type_Bool"><a target="_blank" href="../../../GML_Overview/Data_Types.htm">Boolean</a></span></td><td>Whether the to limit the angle of the joint (true) or not (false)</td></tr><tr><td>max_motor_torque</td><td><span data-keyref="Type_Real"><a target="_blank" href="../../../GML_Overview/Data_Types.htm">Real</a></span></td><td>Sets the maximum motor torque used to achieve the desired motor speed (in Newtons per meter)</td></tr><tr><td>motor_speed</td><td><span data-keyref="Type_Real"><a target="_blank" href="../../../GML_Overview/Data_Types.htm">Real</a></span></td><td>This is the speed at which the motor should rotate</td></tr><tr><td>motor</td><td><span data-keyref="Type_Bool"><a target="_blank" href="../../../GML_Overview/Data_Types.htm">Boolean</a></span></td><td>Whether the motor should be active (true) or not (false)</td></tr><tr><td>col</td><td><span data-keyref="Type_Bool"><a target="_blank" href="../../../GML_Overview/Data_Types.htm">Boolean</a></span></td><td>Whether the two instances can collide (true) or not (false)</td></tr></tbody></table><p>&nbsp;</p><h4>Returns:</h4><p class="code"><span data-keyref="Type_ID_Physics_Joint"><a target="_blank" href="Joints.htm">Physics Joint ID</a></span></p><p>&nbsp;</p><h4>Example:</h4><p class="code">var mainFixture, o_id;<br>mainFixture = physics_fixture_create();<br>physics_fixture_set_circle_shape(mainFixture, sprite_get_width(sprite_index) / 2);<br>o_id=instance_create_layer(x+25, y, "Instances", obj_Door);<br>physics_fixture_bind(mainFixture, id);<br>physics_fixture_bind(mainFixture, o_id);<br>physics_joint_revolute_create(id, o_id, x+25, y, -90, 90, 1, 0, 0, 0, 0);<br>physics_fixture_delete(mainFixture);</p><p>The above code creates and defines a new fixture and then creates an instance of "obj_Door", binding the created fixture to the two new objects. They are then joined by a revolute joint with no motor and the angles limited to a +/- 90 degree swing. Finally the fixture is deleted as it is no longer needed.</p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><div class="footer"><div class="buttons"><div class="clear"><div style="float:left">Back: <a href="Joints.htm">Joints</a></div><div style="float:right">Next:&nbsp;<a href="physics_joint_prismatic_create.htm">physics_joint_prismatic_create</a></div></div></div><h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2024 All Rights Reserved</span></h5></div></body></html>