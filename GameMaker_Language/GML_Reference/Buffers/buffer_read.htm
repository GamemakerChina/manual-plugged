<!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml"><head><script type="text/javascript" src="../../../assets/import/jquery-3.6.1.min.js"></script><script type="text/javascript" src="../../../assets/import/layer/layer.js"></script><script type="text/javascript" src="../../../assets/import/pangu.min.js"></script><link rel="stylesheet" type="text/css" href="../../../assets/import/layer/layui_btn.css"><link rel="stylesheet" type="text/css" href="../../../assets/import/layer/layui_col.css"><link rel="stylesheet" type="text/css" href="../../../assets/import/layer/theme/default/layer.css"><link rel="stylesheet" type="text/css" href="../../../assets/import/main.css"><script>let str;removeHtml=function(e){return e=(e=(e=(e=e.replace(/(<([^>]+)>)/gi,"{}")).replace(/\r\n/g,"\n")).replace(/\n/g,"")).replace(/ {2,}/g," ")},retHtml=function(e){return e.match(/(<([^>]+)>)/gi)},setTranslator=function(e,t,n){let i;i=n?e.attr(n):e.html();let o=t[removeHtml(i)];if(null!=o&&o.length){t=retHtml(i);let a=0;t&&t.forEach(function(e,t){var n=o.replace("{"+a+"}",e);o=n===o?o.replace("{}",e):n,a++}),n?e.attr(n,o):e.html(o)}},noTranslationState=function(){return"true"==window.localStorage.getItem("noTranslationState")},noTranslationStateToggle=function(){window.localStorage.setItem("noTranslationState",!noTranslationState())},addNoTranslationStateButton=function(){var e=`
		
		<button style="
			float: right;
			font-size: 16px;
			padding: 4px 12px;
		"
		onclick="
		window.location.replace('gmmt://'+document.location.hash)
		"
		>打开编辑器</button>

		<button style="
			float: right;
			font-size: 16px;
			padding: 4px 12px;
		"
		onclick="
		noTranslationStateToggle();
		location.reload();
    	event.stopPropagation();
		"
		>切换翻译</button>
		`;$(".header").length?$(".header").append(e):($(".topic-header").append(e),$(".topic-header button").css("position","relative").css("top","44px"))},removeExtensionFromHash=function(e){return e.replaceAll("#t=","").replaceAll("%2F","/").replaceAll(".htm","")};let json_global,json_file={"A 16bit float. This can be a positive or negative value within the range of +/- 65504.":"16 位浮点数。这可以是 +/-65504 范围内的正值或负值。","A 16bit float. This can be a positive or negative value within the range of +/- 65504. {}(Not currently supported!){}":"16位浮点数。这可以是+/-65504范围内的正值或负值。{}(当前不支持！){}","A 32bit float. This can be a positive or negative value within the range of +/-16777216.":"32 位浮点数。这可以是 +/-16777216 范围内的正值或负值。","A 64bit float.":"64 位浮点数。","A boolean value, can only be either 1 or 0 ({}true{} or {}false{}). It is stored in a single byte (8bit)":"布尔值，只能是 1 或 0({}true{} 或 {}false{})。它以单字节 (8 位) 存储","A boolean value. Can only be either 1 or 0 ({}true{} or {}false{})":"布尔值。只能是1或0({}true{}或{}false{})","A signed, 16bit integer. This can be a positive or negative value from -32,768 to 32,767 (0 is classed as positive).":"有符号的 16 位整数。这可以是 -32,768 到 32,767 之间的正值或负值 (0 被归类为正值)。","A signed, 32bit integer. This can be a positive or negative value from -2,147,483,648 to 2,147,483,647 (0 is classed as positive).":"有符号的 32 位整数。这可以是从 -2,147,483,648 到 2,147,483,647 的正值或负值 (0 被归类为正值)。","A signed, 8bit integer. This can be a positive or negative value from -128 to 127 (0 is classed as positive).":"有符号的 8 位整数。这可以是 -128 到 127 之间的正值或负值 (0 被归类为正值)。","A string of any size, including a final null terminating character":"任意大小的字符串，包括最后一个空终止字符","A string of any size, without the final null terminating character":"不带最后一个空终止字符的任意大小的字符串","A string of any size, without the final null terminating character.":"任意大小的字符串，没有最终的空终止字符。","A string of any size.":"任意大小的字符串。","After the function has executed the seek position is advanced by the number of bytes read. The next&nbsp;{}{}buffer_read{}{}&nbsp;will be done at this new position and will read the next byte(s) of data.":"函数执行后，查找位置会提前读取的字节数。下一个 {}{}buffer_read{}{} 将在这个新位置完成，并将读取下一个数据字节。","An unsigned 64bit integer.":"无符号64位整数。","An unsigned 64bit integer. This is a positive value from&nbsp;0 to 18,446,744,073,709,551,615.":"无符号的 64 位整数。这是从 0 到 18,446,744,073,709,551,615 之间的正值。","An unsigned, 16bit integer. This is a positive value from 0 - 65,535.":"无符号的 16 位整数。这是一个从 0 到 65,535 之间的正值。","An unsigned, 32bit integer. This is a positive value from 0 to 4,294,967,295.":"无符号的 32 位整数。这是一个从 0 到 4，294，967，295 的正值。","An unsigned, 8bit integer. This is a positive value from 0 to 255.":"无符号的 8 位整数。这是一个从 0 到 255 的正值。","Buffer Data Type Constant":"缓冲区数据类型常量","First a new grow buffer with an initial size of 10240 bytes is created using&nbsp;{}{}buffer_create{}{}. At this point you can explicitly call&nbsp;{}{}buffer_seek{}{}&nbsp;to set the seek position to 0, but this isn't necessary since a newly created buffer's seek position is 0. Next the string {}\"Hello World\"{} is written to the buffer with a call to&nbsp;{}{}buffer_write{}{}. This advances the seek position by 12 bytes: 11 bytes for the characters of the string followed by a final null byte. After this, the string is read back from the buffer. To read the correct data, the seek position is first set back to 0 with a call to&nbsp;{}{}buffer_seek{}{}. The data is then read into a variable {}result{}&nbsp;using&nbsp;{}{}buffer_read{}{}, which is shown in a debug message.":'首先，使用 {}{}buffer_create{}{} 创建一个初始大小为 10240 字节的新增长缓冲区。此时，您可以显式调用 {}{}buffer_seek{}{} 将查找位置设置为 0，但这不是必需的，因为新创建的缓冲区的查找位置为 0。接下来是字符串 {}"Hello World"{} 通过调用 {}{}buffer_write{}{} 将 } 写入缓冲区。这会将查找位置提前 12 个字节：字符串字符前移 11 个字节，后跟最后一个空字节。之后，从缓冲区读回字符串。要读取正确的数据，首先通过调用 {}{}buffer_seek{}{} 将查找位置设置回 0。然后使用 {}{}buffer_read{}{} 将数据读入变量 {18}result{19}，并在调试消息中显示。',"If the function succeeds it will return a value of the given type, however if it fails then it will cause a runner error.":"如果函数成功，它将返回给定类型的值，但是如果失败，则将导致Runner错误。","If the function succeeds it will return a value of the given type, however if it fails then it will cause a {}runner error{}.":"如果函数成功，它将返回给定类型的值，但如果失败，则会导致{}运行器错误{}。","If the function succeeds, it will return a value of the given type, however if it fails then it will cause a {}runner error{}.":"如果函数成功，它将返回给定类型的值，但如果失败，则会导致 {} 运行器错误 {}。","Since the function only reads the contents starting from the buffer's current {}seek position{}, you must ensure this is set correctly before calling the function - otherwise, you will get either incorrect results or nothing at all being returned.":"由于该函数仅读取从缓冲区的当前 {} 查找位置 {} 开始的内容，因此您必须确保在调用该函数之前设置正确 - 否则，您将得到不正确的结果或根本不返回任何结果。","The above code creates a buffer, writes a string to it and reads it back.":"上面的代码创建一个缓冲区，向其中写入一个字符串并将其读回。",'The above code reads from the buffer with the id stored in the variable "buff" a signed 16bit value into the local variable "cmd".':'上面的代码使用存储在变量" buff "中的ID从缓冲区中读取一个有符号的16位值到局部变量" cmd "中。',"The buffer to read from.":"要读取的缓冲区。","The index of the buffer to read from.":"要从中读取的缓冲区的索引。","The return value depends on the type of data that you are reading, which can be&nbsp;one&nbsp;of the following constants:":"返回值取决于您正在读取的数据类型，可以是以下常量之一：","The return value will depend on the type of data that you are reading, which in itself is defined by the following constants:":"返回值将取决于您正在读取的数据类型，该类型本身由以下常量定义：","The type of data that is to be read from the buffer (see the list of constants above).":"要从缓冲区读取的数据类型(请参阅上面的常量列表)。","The type of data to be read from the buffer (see the list of constants above).":"要从缓冲区读取的数据类型 (请参阅上面的常量列表)。","This function can be used to read data from a previously created buffer. It will read the value at the buffer's current {}seek position{}.":"此函数可用于从先前创建的缓冲区中读取数据。它将在缓冲区的当前{}查找位置{}读取值。","This function can be used to read data from a previously created buffer. The return value will depend on the type of data that you are reading, which in itself is defined by the following constants:":"此函数可用于从先前创建的缓冲区中读取数据。返回值将取决于您正在读取的数据类型，该类型本身由以下常量定义：","This function reads a piece of data of the given type from the given buffer at the buffer's current&nbsp;{}seek position{}.":"此函数从给定缓冲区的当前 {} 查找位置 {} 读取给定类型的数据。","{}NOTE{}&nbsp;Using the incorrect data type for the data being read will result in erroneous values being returned.":"{}注意{}对正在读取的数据使用不正确的数据类型将导致返回错误的值。","{}{}NOTE{}{}&nbsp;Reading a&nbsp;{}buffer_s32{} or {}buffer_u32{} on HTML5 returns the value as a&nbsp;{}{}Real{}{}, which is a 64-bit double, as int32 is not supported on that platform.":"{}{} 注意{}{} 在 HTML5 上读取 {}buffer_s32{} 或 {}buffer_u32{} 会返回 {}{}Real{}{} 形式的值，该值是 64 位双精度值，就像 int32 一样该平台不支持。","{}{}NOTE{}{}&nbsp;Using the incorrect data type for the data being read will result in erroneous values being returned.":"{}{}注意{}{} 对于正在读取的数据使用错误的数据类型将导致返回错误的值。","{}{}NOTE{}{}&nbsp;You can use&nbsp;{}{}buffer_peek{}{}&nbsp;to get a value anywhere in the buffer without changing the seek position.":"{}{} 注意{}{} 您可以使用 {}{}buffer_peek{}{} 获取缓冲区中任意位置的值，而无需更改查找位置。"},get_json_global=$.ajax({url:"/global.json",type:"GET",dataType:"json",async:!1,success:function(e){json_global=e}});$(function(){if(addNoTranslationStateButton(),noTranslationState())return!1;$("div.footer a,h4,caption").each(function(){setTranslator($(this),json_global)}),$("p,h1,h2,h3,td,li,a,div.dropspotnote,figcaption").each(function(){setTranslator($(this),json_file)}),$("th,.warning,.important,.optional").each(function(){setTranslator($(this),json_global)}),$(".header").length&&(window.setInterval(function(){$("#toc-panel a:not('isTranslate')").each(function(){$(this).addClass("isTranslate"),setTranslator($(this),json_global)}),$(".GlossDefinitionText:not('isTranslate')").each(function(){$(this).addClass("isTranslate"),setTranslator($(this),json_global)})},250),console.log("成功啦!现在正在疯狂翻译菜单中!")),$(".tooltip").each(function(){setTranslator($(this),json_global,"title")})}),document.addEventListener("DOMContentLoaded",()=>{pangu.autoSpacingPage()})</script><script type="text/javascript" language="JavaScript">function reDo(){innerWidth==origWidth&&innerHeight==origHeight||location.reload()}4==parseInt(navigator.appVersion)&&"Netscape"==navigator.appName&&(origWidth=innerWidth,origHeight=innerHeight,onresize=reDo),onerror=null</script><style type="text/css">p.WebHelpNavBar{text-align:right}</style><script type="text/javascript">gCommonRootRelPath=gRootRelPath="../../..",gTopicId="8.2.2.18.0_6"</script><script type="text/javascript" src="../../../template/scripts/rh.min.js"></script><script type="text/javascript" src="../../../template/scripts/common.min.js"></script><script type="text/javascript" src="../../../template/scripts/topic.min.js"></script><script type="text/javascript" src="../../../template/scripts/topicwidgets.min.js"></script><script type="text/javascript" src="../../../whxdata/projectsettings.js"></script><link rel="stylesheet" type="text/css" href="../../../template/styles/topic.min.css"><link rel="stylesheet" type="text/css" href="../../../template/Charcoal_Grey/topicheader.css"><meta name="topic-status" content="Draft"><meta http-equiv="Content-Type" content="text/html; charset=utf-8"><title>buffer_read</title><meta name="generator" content="Adobe RoboHelp 2022"><link rel="stylesheet" href="../../../assets/css/default.css" type="text/css"><script src="../../../assets/scripts/main_script.js" type="module"></script><meta name="rh-authors" content="Mark Alexander"><meta name="topic-comment" content="Reference page for buffer_read"><meta name="rh-index-keywords" content="buffer_read,buffer_u8,buffer_s8,buffer_u16,buffer_s16,buffer_u32,buffer_s32,buffer_u64,buffer_f16,buffer_f32,buffer_f64,buffer_bool,buffer_string,buffer_text"><meta name="search-keywords" content="buffer_read,buffer_u8,buffer_s8,buffer_u16,buffer_s16,buffer_u32,buffer_s32,buffer_u64,buffer_f16,buffer_f32,buffer_f64,buffer_bool,buffer_string,buffer_text"><meta name="brsnext" value="GameMaker_Language/GML_Reference/Buffers/buffer_write.htm"><meta name="brsprev" value="GameMaker_Language/GML_Reference/Buffers/buffer_delete.htm"></head><body><div class="topic-header rh-hide" id="rh-topic-header"><div class="logo"></div><div class="nav"><div class="title" title="buffer_read"><span>buffer_read</span></div><div class="gotohome" title="Click here to see this page in full context"><a href="#" onclick="rh._.goToFullLayout()">Click here to see this page in full context</a></div></div></div><div class="topic-header-shadow rh-hide" id="rh-topic-header-shadow"></div><h1><span data-field="title" data-format="default">buffer_read</span></h1><p>This function reads a piece of data of the given type from the given buffer at the buffer's current&nbsp;<a href="buffer_seek.htm">seek position</a>.</p><p>After the function has executed the seek position is advanced by the number of bytes read. The next&nbsp;<span class="inline3_func"><span data-field="title" data-format="default">buffer_read</span></span>&nbsp;will be done at this new position and will read the next byte(s) of data.</p><p>Since the function only reads the contents starting from the buffer's current <a href="buffer_seek.htm">seek position</a>, you must ensure this is set correctly before calling the function - otherwise, you will get either incorrect results or nothing at all being returned.</p><p class="note"><span data-conref="../../../assets/snippets/Tag_note.hts"><span class="note">NOTE</span></span>&nbsp;You can use&nbsp;<span class="inline3_func"><a href="buffer_peek.htm">buffer_peek</a></span>&nbsp;to get a value anywhere in the buffer without changing the seek position.</p><p>The return value depends on the type of data that you are reading, which can be&nbsp;one&nbsp;of the following constants:</p><div data-conref="../../../assets/snippets/buffer_data_type_constants.hts"><table style="caption-side:top"><colgroup><col><col><col></colgroup><caption><span data-keyref="Type_Constant_Buffer_Data_Type"><a target="_blank" href="buffer_write.htm">Buffer Data Type Constant</a></span></caption><tbody><tr><th>Constant</th><th>Description</th><th>Datatype Returned</th></tr><tr><td><span class="inline">buffer_u8</span></td><td>An unsigned, 8bit integer. This is a positive value from 0 to 255.</td><td>int32</td></tr><tr><td><span class="inline">buffer_s8</span></td><td>A signed, 8bit integer. This can be a positive or negative value from -128 to 127 (0 is classed as positive).</td><td>int32</td></tr><tr><td><span class="inline">buffer_u16</span></td><td>An unsigned, 16bit integer. This is a positive value from 0 - 65,535.</td><td>int32</td></tr><tr><td><span class="inline">buffer_s16</span></td><td>A signed, 16bit integer. This can be a positive or negative value from -32,768 to 32,767 (0 is classed as positive).</td><td>int32</td></tr><tr><td><span class="inline">buffer_u32</span></td><td>An unsigned, 32bit integer. This is a positive value from 0 to 4,294,967,295.</td><td>int64</td></tr><tr><td><span class="inline">buffer_s32</span></td><td>A signed, 32bit integer. This can be a positive or negative value from -2,147,483,648 to 2,147,483,647 (0 is classed as positive).</td><td>int32</td></tr><tr><td><span class="inline">buffer_u64</span></td><td>An unsigned 64bit integer. This is a positive value from&nbsp;0 to 18,446,744,073,709,551,615.</td><td>int64</td></tr><tr><td><span class="inline">buffer_f16</span></td><td>A 16bit float. This can be a positive or negative value within the range of +/- 65504.</td><td>number (real)</td></tr><tr><td><span class="inline">buffer_f32</span></td><td>A 32bit float. This can be a positive or negative value within the range of +/-16777216.</td><td>number (real)</td></tr><tr><td><span class="inline">buffer_f64</span></td><td>A 64bit float.</td><td>number (real)</td></tr><tr><td><span class="inline">buffer_bool</span></td><td>A boolean value, can only be either 1 or 0 (<span class="inline">true</span> or <span class="inline">false</span>). It is stored in a single byte (8bit)</td><td>int32</td></tr><tr><td><span class="inline">buffer_string</span></td><td>A string of any size, including a final null terminating character</td><td>string</td></tr><tr><td><span class="inline">buffer_text</span></td><td>A string of any size, without the final null terminating character</td><td>string</td></tr></tbody></table></div><p>If the function succeeds, it will return a value of the given type, however if it fails then it will cause a <a href="../../../Additional_Information/Errors/Runner_Errors.htm">runner error</a>.</p><p class="note"><span data-conref="../../../assets/snippets/Tag_note.hts"><span class="note">NOTE</span></span>&nbsp;Using the incorrect data type for the data being read will result in erroneous values being returned.</p><p class="note"><span data-conref="../../../assets/snippets/Tag_note.hts"><span class="note">NOTE</span></span>&nbsp;Reading a&nbsp;<span class="inline2">buffer_s32</span> or <span class="inline2">buffer_u32</span> on HTML5 returns the value as a&nbsp;<span data-keyref="Type_Real"><a target="_blank" href="../../GML_Overview/Data_Types.htm">Real</a></span>, which is a 64-bit double, as int32 is not supported on that platform.</p><p>&nbsp;</p><h4>Syntax:</h4><p class="code"><span data-field="title" data-format="default">buffer_read</span>(buffer, type)</p><table><tbody><tr><th>Argument</th><th>Type</th><th>Description</th></tr><tr><td>buffer</td><td><span data-keyref="Type_ID_Buffer"><a target="_blank" href="buffer_create.htm">Buffer</a></span></td><td>The buffer to read from.</td></tr><tr><td>type</td><td><span data-keyref="Type_Constant_Buffer_Data_Type"><a target="_blank" href="buffer_write.htm">Buffer Data Type Constant</a></span></td><td>The type of data to be read from the buffer (see the list of constants above).</td></tr></tbody></table><p>&nbsp;</p><h4>Returns:</h4><p class="code"><span data-keyref="Type_Real"><a target="_blank" href="../../GML_Overview/Data_Types.htm">Real</a></span>, <span data-keyref="Type_Bool"><a target="_blank" href="../../GML_Overview/Data_Types.htm">Boolean</a></span>&nbsp;or&nbsp;<span data-keyref="Type_String"><a target="_blank" href="../../GML_Overview/Data_Types.htm">String</a></span></p><p>&nbsp;</p><h4>Example:</h4><p class="code">buffer = buffer_create(10240, buffer_grow, 1);<br><br>// buffer_seek(buffer, buffer_seek_start, 0);<br>buffer_write(buffer, buffer_string, "Hello World");<br><br>buffer_seek(buffer, buffer_seek_start, 0);<br>result = buffer_read(buffer, buffer_string);<br><br>show_debug_message("Result = " + result);</p><p>The above code creates a buffer, writes a string to it and reads it back.</p><p>First a new grow buffer with an initial size of 10240 bytes is created using&nbsp;<span class="inline3_func"><a href="buffer_create.htm">buffer_create</a></span>. At this point you can explicitly call&nbsp;<span class="inline3_func"><a href="buffer_seek.htm">buffer_seek</a></span>&nbsp;to set the seek position to 0, but this isn't necessary since a newly created buffer's seek position is 0. Next the string <span class="inline2">"Hello World"</span> is written to the buffer with a call to&nbsp;<span class="inline3_func"><a href="buffer_write.htm">buffer_write</a></span>. This advances the seek position by 12 bytes: 11 bytes for the characters of the string followed by a final null byte. After this, the string is read back from the buffer. To read the correct data, the seek position is first set back to 0 with a call to&nbsp;<span class="inline3_func"><a href="buffer_seek.htm">buffer_seek</a></span>. The data is then read into a variable <span class="inline2">result</span>&nbsp;using&nbsp;<span class="inline3_func"><a href="buffer_read.htm">buffer_read</a></span>, which is shown in a debug message.</p><p>&nbsp;</p><p>&nbsp;</p><div class="footer"><div class="buttons"><div class="clear"><div style="float:left">Back:&nbsp;<a href="Buffers.htm">Buffers</a></div><div style="float:right">Next:&nbsp;<a href="buffer_write.htm">buffer_write</a></div></div></div><h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2024 All Rights Reserved</span></h5></div></body></html>