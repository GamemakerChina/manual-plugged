<!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml"><head><script type="text/javascript" src="../../../assets/import/jquery-3.6.1.min.js"></script><script type="text/javascript" src="../../../assets/import/layer/layer.js"></script><script type="text/javascript" src="../../../assets/import/pangu.min.js"></script><link rel="stylesheet" type="text/css" href="../../../assets/import/layer/layui_btn.css"><link rel="stylesheet" type="text/css" href="../../../assets/import/layer/layui_col.css"><link rel="stylesheet" type="text/css" href="../../../assets/import/layer/theme/default/layer.css"><link rel="stylesheet" type="text/css" href="../../../assets/import/main.css"><script>let str;removeHtml=function(t){return t=(t=(t=(t=t.replace(/(<([^>]+)>)/gi,"{}")).replace(/\r\n/g,"\n")).replace(/\n/g,"")).replace(/ {2,}/g," ")},retHtml=function(t){return t.match(/(<([^>]+)>)/gi)},setTranslator=function(t,e,n){let o;o=n?t.attr(n):t.html();let i=e[removeHtml(o)];if(null!=i&&i.length){e=retHtml(o);let a=0;e&&e.forEach(function(t,e){var n=i.replace("{"+a+"}",t);i=n===i?i.replace("{}",t):n,a++}),n?t.attr(n,i):t.html(i)}},noTranslationState=function(){return"true"==window.localStorage.getItem("noTranslationState")},noTranslationStateToggle=function(){window.localStorage.setItem("noTranslationState",!noTranslationState())},addNoTranslationStateButton=function(){var t=`
		
		<button style="
			float: right;
			font-size: 16px;
			padding: 4px 12px;
		"
		onclick="
		window.location.replace('gmmt://'+document.location.hash)
		"
		>打开编辑器</button>

		<button style="
			float: right;
			font-size: 16px;
			padding: 4px 12px;
		"
		onclick="
		noTranslationStateToggle();
		location.reload();
    	event.stopPropagation();
		"
		>切换翻译</button>
		`;$(".header").length?$(".header").append(t):($(".topic-header").append(t),$(".topic-header button").css("position","relative").css("top","44px"))},removeExtensionFromHash=function(t){return t.replaceAll("#t=","").replaceAll("%2F","/").replaceAll(".htm","")};let json_global,json_file={"Conversion From Non-String Types":"从非字符串类型转换","Format String":"格式化字符串",'If you only pass a single argument to the function, then this argument will not be considered a format string. If you add placeholders of the kind "{0}" in this case, then they will be output as normal text as there are no values to replace them with:&nbsp;':'如果只将单个参数传递给函数，则此参数不会被视为格式字符串。如果在本例中添加类型为 "{0}" 的占位符，则它们将作为普通文本输出，因为没有值可以替换为：','In this code the&nbsp;{}{}string{}{} function is used in a slightly different way to achieve the same result as in Example 1. Here the function is called with a format string as the first argument, in which "{0}" is replaced with the value of {}{}score{}{} and "{1}" is replaced with the value of {}{}health{}{}.':'在此代码中，{0}{1}string{}{}函数的使用方式与示例1中的使用方式略有不同。这里使用格式字符串作为第一个参数来调用该函数，其中"{0}"替换为{}{}score{}{}，而"{1}"替换为{}{}health{}{}。',"The above code uses the {}string{} function to draw both real numbers and strings together (draw will only accept {}either{} a string {}or{} a real, but not both).":"上面的代码使用 {} string{} 函数将实数和字符串都画在一起 (draw将只接受 {} 一个字符串 {} 或 {} 一个实数，但不接受两者)。","The above code uses the&nbsp;{}{}string{}{} function to draw both real numbers and strings together, as {}{}draw_text(){}{} will only accept {}either{} a string {}or{} a real, but not both, so we convert the non-strings into strings.":"上面的代码使用 {}{}string{}{} 函数将实数和字符串绘制在一起，因为 {}{}draw_text(){}{} 将只接受 {} 一个字符串 {} 或 {} 一个实数 {}，而不是两者都接受，所以我们将非字符串转换为字符串。","The real number to be turned into a string.":"要变成字符串的实数。","The value to be turned into a string.":"要转换为字符串的值。",'These placeholders will be replaced with the arguments at the positions they refer to, i.e. "{0}" will be replaced with the second argument, "{1}" will be replaced with the third argument, "{2}" will be replaced with the fourth argument, and so on.':'这些占位符将替换为它们所引用位置上的参数，即 "{0}" 将替换为第二个参数，"{1}" 将替换为第三个参数，"{2}" 将替换为第四个参数，依此类推。',"This function creates a new string from a variety of data types.":"此函数用于从各种数据类型创建新字符串。","Values of type&nbsp;{}Array{}&nbsp;will be converted to a string of the format {}[element1, element2, element3, element4, element5]{}, i.e. the concatenation of all elements in the array. If any of the elements in the array is a struct or an instance then its&nbsp;{}toString() Method{} will be called to convert it to a string.":"{}数组{}类型的值将被转换为格式为 {}[Element1，Element2，Element3，Element4，Element5]{} 的字符串，即数组中所有元素的串联。如果数组中的任何元素是结构或实例，则将调用其 {}toString() 方法{} 将其转换为字符串。","Values of type&nbsp;{}Struct{}&nbsp;or {}Instance{}&nbsp;will be converted to a string using that struct's or instance's&nbsp;{}toString() Method{}&nbsp;if one exists, or converted to a string implicitly.":"{}结构{}或{}实例{}类型的值将使用该结构或实例的 {}toString() 方法{} (如果存在)转换为字符串，或者隐式转换为字符串。","Values of type&nbsp;{}{}Real{}{}&nbsp;that are an integer will have no decimal places in the string. Values of type&nbsp;{}{}Real{}{}&nbsp;that have a fractional part will have two decimal places in the string. If you need more decimal places in the output string you can use the function {}{}string_format{}{}.":"{}{}Real{}{} 类型为整数的值在字符串中不会有小数位。具有小数部分的 {}{}Real{}{} 类型的值在字符串中有两个小数位。如果在输出字符串中需要更多的小数位，可以使用函数 {}{}string_format{}{}。","When only one argument is provided to the function, this argument is considered to be a value, which will be converted to a string from its original&nbsp;{}data type{}. When more than one argument is given, the first argument is considered a {}Format String{}&nbsp;and the arguments that follow it are considered the values to insert into the format string.":"当只向函数提供一个参数时，该参数被视为一个值，该值将从其原始{}数据类型{}转换为字符串。当给定多个参数时，第一个参数被视为{}格式字符串{}，其后的参数被视为要插入到格式字符串中的值。",'When you pass more than one argument to the&nbsp;{}{}string{}{}&nbsp;function, the first argument will be treated as a {}format string{}. In a format string you can use {}placeholders{} of the form "{0}", "{1}", "{2}", etc.':'当您向{0}{1}string{2}{3}函数传递多个参数时，第一个参数将被视为{}格式字符串{}。在格式字符串中，您可以使用 "{0}"、"{1}"、"{2}" 等形式的{}占位符{}。',"With this function you can turn any real number into a string. If the real number is an integer, it will be saved with no decimal places, otherwise, it will be saved with two decimal places. If you require more decimal places, then use the function {}{}string_format(){}{}. Also note that using this function on a variable storing&nbsp;an {}array{}, a {}data structure{}, or a {}struct{} will convert the contents of these variables into a string which can then be output to the console or saved to a file for debugging.":"有了这个函数，你可以把任何实数变成一个字符串。如果实数是整数，则将其保存为无小数位，否则，将保存为两位小数。如果您需要更多的小数位，那么使用函数 {}{} string_format(){}{}。还要注意，在变量上使用此函数存储 {} 数组 {} 、 {} 数据结构 {} 或 {} 结构 {} 会将这些变量的内容转换为字符串，然后可以输出到控制台或保存到文件中进行调试。","{}{}NOTE{}{}&nbsp;You can also use&nbsp;{}Template Strings{} to insert variables and expressions into strings.":"{}{}注意{}{} 还可以使用{}模板字符串{}将变量和表达式插入字符串中。","{}{}OPTIONAL{}{}&nbsp;The values to be inserted at the placeholder positions.":"{}{}可选{}{} 要插入占位符位置的值。"},get_json_global=$.ajax({url:"/global.json",type:"GET",dataType:"json",async:!1,success:function(t){json_global=t}});$(function(){if(addNoTranslationStateButton(),noTranslationState())return!1;$("div.footer a,h4,caption").each(function(){setTranslator($(this),json_global)}),$("p,h1,h2,h3,td,li,a,div.dropspotnote,figcaption").each(function(){setTranslator($(this),json_file)}),$("th,.warning,.important,.optional").each(function(){setTranslator($(this),json_global)}),$(".header").length&&(window.setInterval(function(){$("#toc-panel a:not('isTranslate')").each(function(){$(this).addClass("isTranslate"),setTranslator($(this),json_global)}),$(".GlossDefinitionText:not('isTranslate')").each(function(){$(this).addClass("isTranslate"),setTranslator($(this),json_global)})},250),console.log("成功啦!现在正在疯狂翻译菜单中!")),$(".tooltip").each(function(){setTranslator($(this),json_global,"title")})}),document.addEventListener("DOMContentLoaded",()=>{pangu.autoSpacingPage()})</script><script type="text/javascript" language="JavaScript">function reDo(){innerWidth==origWidth&&innerHeight==origHeight||location.reload()}4==parseInt(navigator.appVersion)&&"Netscape"==navigator.appName&&(origWidth=innerWidth,origHeight=innerHeight,onresize=reDo),onerror=null</script><style type="text/css">p.WebHelpNavBar{text-align:right}</style><script type="text/javascript">gCommonRootRelPath=gRootRelPath="../../..",gTopicId="8.2.2.10.0_1"</script><script type="text/javascript" src="../../../template/scripts/rh.min.js"></script><script type="text/javascript" src="../../../template/scripts/common.min.js"></script><script type="text/javascript" src="../../../template/scripts/topic.min.js"></script><script type="text/javascript" src="../../../template/scripts/topicwidgets.min.js"></script><script type="text/javascript" src="../../../whxdata/projectsettings.js"></script><link rel="stylesheet" type="text/css" href="../../../template/styles/topic.min.css"><link rel="stylesheet" type="text/css" href="../../../template/Charcoal_Grey/topicheader.css"><meta name="topic-status" content="Draft"><meta http-equiv="Content-Type" content="text/html; charset=utf-8"><title>string</title><meta name="generator" content="Adobe RoboHelp 2022"><link rel="stylesheet" href="../../../assets/css/default.css" type="text/css"><script src="../../../assets/scripts/main_script.js" type="module"></script><meta name="rh-authors" content="Mark Alexander"><meta name="topic-comment" content="Reference page for string"><meta name="rh-index-keywords" content="string"><meta name="search-keywords" content="string"><meta name="is_pure" content="true"><meta name="brsnext" value="GameMaker_Language/GML_Reference/Strings/string_ext.htm"><meta name="brsprev" value="GameMaker_Language/GML_Reference/Strings/Strings.htm"></head><body><div class="topic-header rh-hide" id="rh-topic-header"><div class="logo"></div><div class="nav"><div class="title" title="string"><span>string</span></div><div class="gotohome" title="Click here to see this page in full context"><a href="#" onclick="rh._.goToFullLayout()">Click here to see this page in full context</a></div></div></div><div class="topic-header-shadow rh-hide" id="rh-topic-header-shadow"></div><h1><span data-field="title" data-format="default">string</span></h1><p>This function creates a new string from a variety of data types.</p><p>When only one argument is provided to the function, this argument is considered to be a value, which will be converted to a string from its original&nbsp;<a href="../../GML_Overview/Data_Types.htm">data type</a>. When more than one argument is given, the first argument is considered a <a href="string.htm#h">Format String</a>&nbsp;and the arguments that follow it are considered the values to insert into the format string.</p><h2 id="h1">Conversion From Non-String Types</h2><div data-conref="../../../assets/snippets/String_conversion_rules.hts"><p>Values of type&nbsp;<span data-keyref="Type_Real"><a target="_blank" href="../../GML_Overview/Data_Types.htm">Real</a></span>&nbsp;that are an integer will have no decimal places in the string. Values of type&nbsp;<span data-keyref="Type_Real"><a target="_blank" href="../../GML_Overview/Data_Types.htm">Real</a></span>&nbsp;that have a fractional part will have two decimal places in the string. If you need more decimal places in the output string you can use the function <span class="inline2"><a href="string_format.htm">string_format</a></span>.</p><p>Values of type&nbsp;<a href="../../GML_Overview/Structs.htm">Struct</a>&nbsp;or <a href="../Asset_Management/Instances/Instances.htm">Instance</a>&nbsp;will be converted to a string using that struct's or instance's&nbsp;<a href="Strings.htm#tostring_method">toString() Method</a> if one exists, or converted to a string implicitly.</p><p>Values of type&nbsp;<span data-keyref="Type_Handle"><a target="_blank" href="../../GML_Overview/Data_Types.htm">Handle</a></span>&nbsp;will be converted to a string that shows the handle info:&nbsp;<span data-conref="../../../assets/snippets/Handle_Format.hts"><span class="inline2">"ref&nbsp;&lt;type&gt;&nbsp;&lt;id&gt;"</span></span>.</p><p>Values of type&nbsp;<a href="../../GML_Overview/Arrays.htm">Array</a>&nbsp;will be converted to a string of the format <span class="inline2">[element1, element2, element3, element4, element5]</span>, i.e. the concatenation of all elements in the array. If any of the elements in the array is a struct or an instance then its&nbsp;<a href="Strings.htm#h3"></a> will be called to convert it to a string.</p></div><h2 id="h">Format String</h2><p>When you pass more than one argument to the&nbsp;<span class="inline2"><span data-field="title" data-format="default">string</span></span>&nbsp;function, the first argument will be treated as a <em>format string</em>. In a format string you can use <i>placeholders</i> of the form "{0}", "{1}", "{2}", etc.</p><p>These placeholders will be replaced with the arguments at the positions they refer to, i.e. "{0}" will be replaced with the second argument, "{1}" will be replaced with the third argument, "{2}" will be replaced with the fourth argument, and so on.</p><p class="code">string_variable = string("This is a string with two placeholders that will be replaced. They are {0} and {1}.", "this", "that");<br><br>// Results in:<br>// "This is a string with two placeholders that will be replaced. They are&nbsp;this and that."</p><p>If you only pass a single argument to the function, then this argument will not be considered a format string. If you add placeholders of the kind "{0}" in this case, then they will be output as normal text as there are no values to replace them with:&nbsp;</p><p class="code">string_variable = string("This is a string with two placeholders that won't be replaced. They are {0} and {1}.");<br><br>// Results in:<br>// "This is a string with two placeholders that won't be replaced. They are {0} and {1}."</p><div data-conref="../../../assets/snippets/Note_See_Template_Strings.hts"><p class="note"><span data-conref="../../../assets/snippets/Tag_note.hts"><span class="note">NOTE</span></span>&nbsp;You can also use&nbsp;<a href="Strings.htm#h4">Template Strings</a> to insert variables and expressions into strings.</p></div><p>&nbsp;</p><h4>Syntax:</h4><p class="code"><span data-field="title" data-format="default">string</span>(value_or_format [, value1, value2, ...]);</p><table><tbody><tr><th>Argument</th><th>Type</th><th>Description</th></tr><tr><td>value_or_format</td><td><span data-keyref="Type_Any"><a target="_blank" href="../../GML_Overview/Data_Types.htm#variable">Any</a></span>&nbsp;(if value) or&nbsp;<span data-keyref="Type_String"><a target="_blank" href="../../GML_Overview/Data_Types.htm">String</a></span>&nbsp;(if format)</td><td>The value to be turned into a string.</td></tr><tr><td>[, value1, value2, ...]</td><td><span data-keyref="Type_Any"><a target="_blank" href="../../GML_Overview/Data_Types.htm#variable">Any</a></span></td><td><span data-conref="../../../assets/snippets/Tag_optional.hts"><span class="optional">OPTIONAL</span></span>&nbsp;The values to be inserted at the placeholder positions.</td></tr></tbody></table><p>&nbsp;</p><h4>Returns:</h4><p class="code"><span data-keyref="Type_String"><a target="_blank" href="../../GML_Overview/Data_Types.htm">String</a></span></p><p>&nbsp;</p><h4>Example 1:</h4><p class="code">draw_text(100, 100, "Score: " + string(score) + " / Health: " + <span data-field="title" data-format="default">string</span>(health));</p><p>The above code uses the&nbsp;<span class="inline2"><span data-field="title" data-format="default">string</span></span> function to draw both real numbers and strings together, as <a href="../Drawing/Text/draw_text.htm"><span class="inline2">draw_text()</span></a> will only accept <i>either</i> a string <i>or</i> a real, but not both, so we convert the non-strings into strings.</p><p>&nbsp;</p><h4>Example 2:</h4><p class="code">draw_text(100, 100, <span data-field="title" data-format="default">string</span>("Score: {0} / Health: {1}", score, health));</p><p>In this code the&nbsp;<span class="inline2"><span data-field="title" data-format="default">string</span></span> function is used in a slightly different way to achieve the same result as in Example 1. Here the function is called with a format string as the first argument, in which "{0}" is replaced with the value of <span class="inline2"><a href="../../GML_Overview/Variables/Builtin_Global_Variables/score.htm">score</a></span> and "{1}" is replaced with the value of <span class="inline2"><a href="../../GML_Overview/Variables/Builtin_Global_Variables/health.htm">health</a></span>.</p><p>&nbsp;</p><p>&nbsp;</p><div class="footer"><div class="buttons"><div class="clear"><div style="float:left">Back:&nbsp;<a href="Strings.htm">Strings</a></div><div style="float:right">Next:&nbsp;<a href="string_ext.htm">string_ext</a></div></div></div><h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2024 All Rights Reserved</span></h5></div></body></html>