<!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml"><head><script type="text/javascript" src="../../../assets/import/jquery-3.6.1.min.js"></script><script type="text/javascript" src="../../../assets/import/layer/layer.js"></script><script type="text/javascript" src="../../../assets/import/pangu.min.js"></script><link rel="stylesheet" type="text/css" href="../../../assets/import/layer/layui_btn.css"><link rel="stylesheet" type="text/css" href="../../../assets/import/layer/layui_col.css"><link rel="stylesheet" type="text/css" href="../../../assets/import/layer/theme/default/layer.css"><link rel="stylesheet" type="text/css" href="../../../assets/import/main.css"><script>let str;removeHtml=function(t){return t=(t=(t=(t=t.replace(/(<([^>]+)>)/gi,"{}")).replace(/\r\n/g,"\n")).replace(/\n/g,"")).replace(/ {2,}/g," ")},retHtml=function(t){return t.match(/(<([^>]+)>)/gi)},setTranslator=function(t,e,n){let o;o=n?t.attr(n):t.html();let r=e[removeHtml(o)];if(null!=r&&r.length){e=retHtml(o);let a=0;e&&e.forEach(function(t,e){var n=r.replace("{"+a+"}",t);r=n===r?r.replace("{}",t):n,a++}),n?t.attr(n,r):t.html(r)}},noTranslationState=function(){return"true"==window.localStorage.getItem("noTranslationState")},noTranslationStateToggle=function(){window.localStorage.setItem("noTranslationState",!noTranslationState())},addNoTranslationStateButton=function(){var t=`
		
		<button style="
			float: right;
			font-size: 16px;
			padding: 4px 12px;
		"
		onclick="
		window.location.replace('gmmt://'+document.location.hash)
		"
		>打开编辑器</button>

		<button style="
			float: right;
			font-size: 16px;
			padding: 4px 12px;
		"
		onclick="
		noTranslationStateToggle();
		location.reload();
    	event.stopPropagation();
		"
		>切换翻译</button>
		`;$(".header").length?$(".header").append(t):($(".topic-header").append(t),$(".topic-header button").css("position","relative").css("top","44px"))},removeExtensionFromHash=function(t){return t.replaceAll("#t=","").replaceAll("%2F","/").replaceAll(".htm","")};let json_global,json_file={'It writes the resulting string to the buffer as a&nbsp;{}buffer_text{}&nbsp;value and then saves the contents of the buffer to a file named {}"text.txt"{} in a directory {}save_dir{}. Finally it deletes the buffer to prevent memory leaks.':'它将生成的字符串作为 {}buffer_text{} 值写入缓冲区，然后将缓冲区内容保存到名为 {}"text.txt"{} 的文件中，该文件位于目录 {}save_dir{} 中。最后，它删除缓冲区以防止内存泄漏。','The above code first creates a grow&nbsp;{}buffer{}&nbsp;and assigns it to a temporary variable {}_buffer{}. It then creates an array with a number of elements and stores that in another variable {}_text_lines{}. It then calls&nbsp;{}{}string_join_ext{}{}&nbsp;on the array with a separator {}"\\r\\n"{}, which results in new lines between all the given strings.':'上面的代码首先创建一个增长的 {} 缓冲区 {} 并将其赋给一个临时变量 {}_buffer{}。然后，它创建一个包含多个元素的数组，并将其存储在另一个变量 {}_text_lines{} 中。然后，它使用分隔符 {10}"\\r\\n"{11} 对数组调用 {}{}string_join_ext{}{}，这会在所有给定字符串之间产生新行。',"The above code joins the words in the {}array{} into a single string using a space as the delimiter.":"上面的代码使用空格作为分隔符，将{}数组{}中的单词连接到单个字符串中。","The array containing the values to join together":"包含要联接在一起的值的数组","The string to insert between the values":"要在值之间插入的字符串",'This function joins together the string representations of all values in the given array (or part of the array), inserting the given "delimiter" between each value. The function returns the joined string.':'此函数将给定数组(或数组的一部分)中所有值的字符串表示连接在一起，在每个值之间插入给定的"分隔符"。该函数返回联接的字符串。',"Values that are not strings will have the {}{}string(){}{} function run on them implicitly. See {}Conversion From Non-String Types{}&nbsp;for information on how those data types are converted.":"不是字符串的值将具有隐式运行的 {}{}string(){}{} 函数。有关如何转换这些数据类型的信息，请参阅 {} 从非字符串类型转换 {}。","{}{}OPTIONAL{}{}&nbsp;The number of array elements to concatenate, starting at the offset.&nbsp;A negative value will traverse the array backwards (i.e. in descending order of indices, e.g. 2, 1, 0 instead of 2, 3, 4). See:&nbsp;{}Offset And Length{}":"{}{}可选{}{} 要连接的数组元素的数量，从偏移量开始。 负值将向后遍历数组(即按索引的降序，例如 2，1，0 而不是 2，3，4)。请参阅： {}偏移量和长度{}","{}{}OPTIONAL{}{}&nbsp;The offset, or starting index, in the array to start joining elements.&nbsp;Setting a negative value will count from the end of the array. The starting index will then be {}array_length(array) + offset{}. See:&nbsp;{}Offset And Length{}":"{}{}可选{}{} 数组中开始加入元素的偏移量或起始索引。设置负值将从数组的末尾开始计算。然后，起始索引将是 {}array_length(array) + offset{}。请参阅：{} 偏移量和长度 {}"},get_json_global=$.ajax({url:"/global.json",type:"GET",dataType:"json",async:!1,success:function(t){json_global=t}});$(function(){if(addNoTranslationStateButton(),noTranslationState())return!1;$("div.footer a,h4,caption").each(function(){setTranslator($(this),json_global)}),$("p,h1,h2,h3,td,li,a,div.dropspotnote,figcaption").each(function(){setTranslator($(this),json_file)}),$("th,.warning,.important,.optional").each(function(){setTranslator($(this),json_global)}),$(".header").length&&(window.setInterval(function(){$("#toc-panel a:not('isTranslate')").each(function(){$(this).addClass("isTranslate"),setTranslator($(this),json_global)}),$(".GlossDefinitionText:not('isTranslate')").each(function(){$(this).addClass("isTranslate"),setTranslator($(this),json_global)})},250),console.log("成功啦!现在正在疯狂翻译菜单中!")),$(".tooltip").each(function(){setTranslator($(this),json_global,"title")})}),document.addEventListener("DOMContentLoaded",()=>{pangu.autoSpacingPage()})</script><script type="text/javascript" language="JavaScript">function reDo(){innerWidth==origWidth&&innerHeight==origHeight||location.reload()}4==parseInt(navigator.appVersion)&&"Netscape"==navigator.appName&&(origWidth=innerWidth,origHeight=innerHeight,onresize=reDo),onerror=null</script><style type="text/css">p.WebHelpNavBar{text-align:right}</style><script type="text/javascript">gCommonRootRelPath=gRootRelPath="../../..",gTopicId="8.2.2.10.0_39"</script><script type="text/javascript" src="../../../template/scripts/rh.min.js"></script><script type="text/javascript" src="../../../template/scripts/common.min.js"></script><script type="text/javascript" src="../../../template/scripts/topic.min.js"></script><script type="text/javascript" src="../../../template/scripts/topicwidgets.min.js"></script><script type="text/javascript" src="../../../whxdata/projectsettings.js"></script><link rel="stylesheet" type="text/css" href="../../../template/styles/topic.min.css"><link rel="stylesheet" type="text/css" href="../../../template/Charcoal_Grey/topicheader.css"><meta name="topic-status" content="Draft"><meta http-equiv="Content-Type" content="text/html; charset=utf-8"><title>string_join_ext</title><meta name="generator" content="Adobe RoboHelp 2022"><link rel="stylesheet" type="text/css" href="../../../assets/css/default.css"><script src="../../../assets/scripts/main_script.js" type="module"></script><meta name="rh-authors" content="Bart Teunis"><meta name="topic-comment" content="Reference page for string_join_ext"><meta name="rh-index-keywords" content="string_join_ext"><meta name="search-keywords" content="string_join_ext"><meta name="template" content="assets/masterpages/Manual_Keyword_Page.htt"><meta name="brsnext" value="GameMaker_Language/GML_Reference/Strings/string_concat.htm"><meta name="brsprev" value="GameMaker_Language/GML_Reference/Strings/string_join.htm"></head><body><div class="topic-header rh-hide" id="rh-topic-header"><div class="logo"></div><div class="nav"><div class="title" title="string_join_ext"><span>string_join_ext</span></div><div class="gotohome" title="Click here to see this page in full context"><a href="#" onclick="rh._.goToFullLayout()">Click here to see this page in full context</a></div></div></div><div class="topic-header-shadow rh-hide" id="rh-topic-header-shadow"></div><h1><span data-field="title" data-format="default">string_join_ext</span></h1><p>This function joins together the string representations of all values in the given array (or part of the array), inserting the given "delimiter" between each value. The function returns the joined string.</p><p>Values that are not strings will have the <a href="string.htm"><span class="inline2">string()</span></a> function run on them implicitly. See <a href="string.htm#h1">Conversion From Non-String Types</a>&nbsp;for information on how those data types are converted.</p><p>&nbsp;</p><h4>Syntax:</h4><p class="code"><span data-field="title" data-format="default">string_join_ext</span>(delimiter, values_array, [offset], [length]);</p><table><colgroup><col><col><col></colgroup><tbody><tr><th>Argument</th><th>Type</th><th>Description</th></tr><tr><td>delimiter</td><td><span data-keyref="Type_String"><a target="_blank" href="../../GML_Overview/Data_Types.htm">String</a></span></td><td>The string to insert between the values</td></tr><tr><td>values_array</td><td><span data-keyref="Type_Array"><a target="_blank" href="../../GML_Overview/Arrays.htm">Array</a></span></td><td>The array containing the values to join together</td></tr><tr><td>offset</td><td><span data-keyref="Type_Real"><a target="_blank" href="../../GML_Overview/Data_Types.htm">Real</a></span></td><td><span data-conref="../../../assets/snippets/Tag_optional.hts"><span class="optional">OPTIONAL</span></span>&nbsp;The offset, or starting index, in the array to start joining elements.&nbsp;Setting a negative value will count from the end of the array. The starting index will then be <span class="inline2">array_length(array) + offset</span>. See:&nbsp;<a href="../Variable_Functions/Array_Functions.htm#h1">Offset And Length</a></td></tr><tr><td>length</td><td><span data-keyref="Type_Real"><a target="_blank" href="../../GML_Overview/Data_Types.htm">Real</a></span></td><td><span data-conref="../../../assets/snippets/Tag_optional.hts"><span class="optional">OPTIONAL</span></span>&nbsp;The number of array elements to concatenate, starting at the offset.&nbsp;A negative value will traverse the array backwards (i.e. in descending order of indices, e.g. 2, 1, 0 instead of 2, 3, 4). See:&nbsp;<a href="../Variable_Functions/Array_Functions.htm#h1">Offset And Length</a></td></tr></tbody></table><p>&nbsp;</p><h4>Returns:</h4><p class="code"><span data-keyref="Type_String"><a target="_blank" href="../../GML_Overview/Data_Types.htm">String</a></span></p><p>&nbsp;</p><h4>Example 1:</h4><p class="code">var _words = <span data-field="title" data-format="default">string_join_ext</span>(" ", ["This", "example", "joins", "words"]);</p><p>The above code joins the words in the <a href="../../GML_Overview/Arrays.htm">array</a> into a single string using a space as the delimiter.</p><p>&nbsp;</p><h4>Example 2:</h4><p class="code">var _buffer = buffer_create(1, buffer_grow, 1);<br>var _text_lines =&nbsp;["This", "file", "will", "have", "multiple", "lines"];<br>var _file_contents = string_join_ext("\r\n", _text_lines);<br>buffer_write(_buffer, buffer_text, _file_contents);<br>buffer_save(_buffer, save_dir + "/" + "text.txt");<br>buffer_delete(_buffer);</p><p>The above code first creates a grow&nbsp;<a href="../Buffers/buffer_create.htm">buffer</a>&nbsp;and assigns it to a temporary variable <span class="inline2">_buffer</span>. It then creates an array with a number of elements and stores that in another variable <span class="inline2">_text_lines</span>. It then calls&nbsp;<span class="inline2"><span data-field="title" data-format="default">string_join_ext</span></span>&nbsp;on the array with a separator <span class="inline2">"\r\n"</span>, which results in new lines between all the given strings.</p><p>It writes the resulting string to the buffer as a&nbsp;<span class="inline2">buffer_text</span>&nbsp;value and then saves the contents of the buffer to a file named <span class="inline2">"text.txt"</span> in a directory <span class="inline2">save_dir</span>. Finally it deletes the buffer to prevent memory leaks.</p><p>&nbsp;</p><p>&nbsp;</p><div class="footer"><div class="buttons"><div class="clear"><div>Back:&nbsp;<a href="Strings.htm">Strings</a></div><div>Next:&nbsp;<a href="string_concat.htm">string_concat</a></div></div></div><h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2024 All Rights Reserved</span></h5></div></body></html>