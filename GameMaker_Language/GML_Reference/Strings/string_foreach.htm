<!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml"><head><script type="text/javascript" src="../../../assets/import/jquery-3.6.1.min.js"></script><script type="text/javascript" src="../../../assets/import/layer/layer.js"></script><script type="text/javascript" src="../../../assets/import/pangu.min.js"></script><link rel="stylesheet" type="text/css" href="../../../assets/import/layer/layui_btn.css"><link rel="stylesheet" type="text/css" href="../../../assets/import/layer/layui_col.css"><link rel="stylesheet" type="text/css" href="../../../assets/import/layer/theme/default/layer.css"><link rel="stylesheet" type="text/css" href="../../../assets/import/main.css"><script>let str;removeHtml=function(t){return t=(t=(t=(t=t.replace(/(<([^>]+)>)/gi,"{}")).replace(/\r\n/g,"\n")).replace(/\n/g,"")).replace(/ {2,}/g," ")},retHtml=function(t){return t.match(/(<([^>]+)>)/gi)},setTranslator=function(t,e,n){let o;o=n?t.attr(n):t.html();let i=e[removeHtml(o)];if(null!=i&&i.length){e=retHtml(o);let a=0;e&&e.forEach(function(t,e){var n=i.replace("{"+a+"}",t);i=n===i?i.replace("{}",t):n,a++}),n?t.attr(n,i):t.html(i)}},noTranslationState=function(){return"true"==window.localStorage.getItem("noTranslationState")},noTranslationStateToggle=function(){window.localStorage.setItem("noTranslationState",!noTranslationState())},addNoTranslationStateButton=function(){var t=`
		
		<button style="
			float: right;
			font-size: 16px;
			padding: 4px 12px;
		"
		onclick="
		window.location.replace('gmmt://'+document.location.hash)
		"
		>打开编辑器</button>

		<button style="
			float: right;
			font-size: 16px;
			padding: 4px 12px;
		"
		onclick="
		noTranslationStateToggle();
		location.reload();
    	event.stopPropagation();
		"
		>切换翻译</button>
		`;$(".header").length?$(".header").append(t):($(".topic-header").append(t),$(".topic-header button").css("position","relative").css("top","44px"))},removeExtensionFromHash=function(t){return t.replaceAll("#t=","").replaceAll("%2F","/").replaceAll(".htm","")};let json_global,json_file={'The above code first defines a function {}debug_character{} that prints the character to the log using&nbsp;{}{}show_debug_message{}{}. It then calls the function&nbsp;{}{}string_foreach{}{}&nbsp;on a string {}"test"{} to execute the {}debug_character{} function on all its characters.':'上面的代码首先定义了一个函数 {}debug_character{}，该函数使用 {}{}show_debug_message{}{} 将字符打印到日志。然后，它对字符串 {10}"test"{11} 调用函数 {}{}string_foreach{}{}，以对其所有字符执行 {}debug_character{} 函数。','The above code first defines a function {}debug_extended{}&nbsp;that shows a debug message with both the position and the character in it. Then,&nbsp;{}{}string_foreach{}{}&nbsp;is called with the {}debug_extended{} function on the string {}"1234567890"{}. Because the offset is -1, the first character on which the function will execute is the last one ({}"0"{}). The characters are traversed in a descending order because of the negative length ("0", "9", "8", "7", "6", ..., "1").':'上面的代码首先定义了一个函数 {}debug_extended{}，该函数显示包含位置和字符的调试消息。然后，使用字符串 {8}"1234567890"{9} 上的 {6}debug_extended{7} 函数调用 {}{}string_foreach{}{}。因为偏移量是 -1，所以函数将在其上执行的第一个字符是最后一个字符 ({}"0"{})。由于长度为负数 ("0"、"9"、"8"、"7"、"6"、……、"1")，字符按降序遍历。',"The callback function will receive two arguments for each character in the string: the character itself, and its position in the string.":"回调函数将为字符串中的每个字符接收两个参数：字符本身及其在字符串中的位置。","The function optionally takes in a starting position and a length that define the range of characters over which to iterate, and the direction of iteration (left-to-right or right-to-left).":"该函数可选地接受起始位置和长度，用于定义要迭代的字符范围和迭代方向(从左到右或从右到左)。","The function to execute for each of the characters in the range, with arguments {}character{} and {}position{}":"要为范围中的每个字符执行的函数，参数为 {}character{} 和 {}position{}","The string to iterate over":"要重复的字符串","This function executes a callback function on all characters of the given string.":"此函数对给定字符串的所有字符执行回调函数。","{}{}IMPORTANT{}{}&nbsp;In&nbsp;{}GameMaker{},&nbsp;string positions start at 1 (meaning they are&nbsp;{}one-based{}), compared to other data types in {}GameMaker{}, which are all&nbsp;{}zero-based{}&nbsp;(starting at 0). So the first character in a string has a position of 1, the second character a position of 2, and so on. The last character is {}{}string_length{}(string){}.":"{}{} 重要信息{}{} 在 {}GameMaker{} 中，字符串位置从 1 开始 (表示它们 {} 从一开始 {})，而 {}GameMaker{} 中的其他数据类型都是 {} 从零开始 {}( 从 0 开始)。因此，字符串中第一个字符的位置为 1，第二个字符的位置为 2，依此类推。最后一个字符是 {}{}string_length{}(string){}。","{}{}OPTIONAL{}{}&nbsp;The number of characters to iterate over and the direction in which to iterate (left-to-right (positive value) or right-to-left (negative value)).":"{}{}可选{}{} 要重复的字符数和重复方向(从左到右(正值)或从右到左(负值))。","{}{}OPTIONAL{}{}&nbsp;The starting position (default is 1 for strings). Negative values count from the end of the string (e.g. -1 is the position of the last character, -2 is the position of the one before last character, etc.). 0 is treated the same as 1.":"{}{}可选{}{} 起始位置 (字符串的默认位置为 1)。负值从字符串的末尾开始计数 (例如，-1 是最后一个字符的位置，-2 是最后一个字符之前的位置，依此类推)。0 被视为与 1 相同。"},get_json_global=$.ajax({url:"/global.json",type:"GET",dataType:"json",async:!1,success:function(t){json_global=t}});$(function(){if(addNoTranslationStateButton(),noTranslationState())return!1;$("div.footer a,h4,caption").each(function(){setTranslator($(this),json_global)}),$("p,h1,h2,h3,td,li,a,div.dropspotnote,figcaption").each(function(){setTranslator($(this),json_file)}),$("th,.warning,.important,.optional").each(function(){setTranslator($(this),json_global)}),$(".header").length&&(window.setInterval(function(){$("#toc-panel a:not('isTranslate')").each(function(){$(this).addClass("isTranslate"),setTranslator($(this),json_global)}),$(".GlossDefinitionText:not('isTranslate')").each(function(){$(this).addClass("isTranslate"),setTranslator($(this),json_global)})},250),console.log("成功啦!现在正在疯狂翻译菜单中!")),$(".tooltip").each(function(){setTranslator($(this),json_global,"title")})}),document.addEventListener("DOMContentLoaded",()=>{pangu.autoSpacingPage()})</script><script type="text/javascript" language="JavaScript">function reDo(){innerWidth==origWidth&&innerHeight==origHeight||location.reload()}4==parseInt(navigator.appVersion)&&"Netscape"==navigator.appName&&(origWidth=innerWidth,origHeight=innerHeight,onresize=reDo),onerror=null</script><style type="text/css">p.WebHelpNavBar{text-align:right}</style><script type="text/javascript">gCommonRootRelPath=gRootRelPath="../../..",gTopicId="8.2.2.10.0_46"</script><script type="text/javascript" src="../../../template/scripts/rh.min.js"></script><script type="text/javascript" src="../../../template/scripts/common.min.js"></script><script type="text/javascript" src="../../../template/scripts/topic.min.js"></script><script type="text/javascript" src="../../../template/scripts/topicwidgets.min.js"></script><script type="text/javascript" src="../../../whxdata/projectsettings.js"></script><link rel="stylesheet" type="text/css" href="../../../template/styles/topic.min.css"><link rel="stylesheet" type="text/css" href="../../../template/Charcoal_Grey/topicheader.css"><meta name="topic-status" content="Draft"><meta http-equiv="Content-Type" content="text/html; charset=utf-8"><title>string_foreach</title><meta name="generator" content="Adobe RoboHelp 2022"><link rel="stylesheet" type="text/css" href="../../../assets/css/default.css"><script src="../../../assets/scripts/main_script.js" type="module"></script><meta name="rh-authors" content=""><meta name="topic-comment" content="string_foreach"><meta name="rh-index-keywords" content="string_foreach"><meta name="search-keywords" content="string_foreach"><meta name="template" content="assets/masterpages/Manual_Keyword_Page.htt"><meta name="brsnext" value="GameMaker_Language/GML_Reference/Maths_And_Numbers/Maths_And_Numbers.htm"><meta name="brsprev" value="GameMaker_Language/GML_Reference/Strings/string_height_ext.htm"></head><body><div class="topic-header rh-hide" id="rh-topic-header"><div class="logo"></div><div class="nav"><div class="title" title="string_foreach"><span>string_foreach</span></div><div class="gotohome" title="Click here to see this page in full context"><a href="#" onclick="rh._.goToFullLayout()">Click here to see this page in full context</a></div></div></div><div class="topic-header-shadow rh-hide" id="rh-topic-header-shadow"></div><h1><span data-field="title" data-format="default">string_foreach</span></h1><p>This function executes a callback function on all characters of the given string.</p><p>The function optionally takes in a starting position and a length that define the range of characters over which to iterate, and the direction of iteration (left-to-right or right-to-left).</p><p>The callback function will receive two arguments for each character in the string: the character itself, and its position in the string.</p><div data-conref="../../../assets/snippets/Note_String_Indices_Start_At_1.hts"><p class="note"><span data-conref="../../../assets/snippets/Tag_important.hts"><span class="important">IMPORTANT</span></span>&nbsp;In&nbsp;<span data-keyref="GameMaker Name">GameMaker</span>,&nbsp;string positions start at 1 (meaning they are&nbsp;<em>one-based</em>), compared to other data types in <span data-keyref="GameMaker Name">GameMaker</span>, which are all&nbsp;<a href="https://en.wikipedia.org/wiki/Zero-based_numbering">zero-based</a>&nbsp;(starting at 0). So the first character in a string has a position of 1, the second character a position of 2, and so on. The last character is <span class="inline2"><a href="string_length.htm">string_length</a>(string)</span>.</p></div><p>&nbsp;</p><h4>Syntax:</h4><p class="code"><span data-field="title" data-format="default">string_foreach</span>(string, function, [pos], [length]);</p><table><colgroup><col><col><col></colgroup><tbody><tr><th>Argument</th><th>Type</th><th>Description</th></tr><tr><td>string</td><td><span data-keyref="Type_String"><a target="_blank" href="../../GML_Overview/Data_Types.htm">String</a></span></td><td>The string to iterate over</td></tr><tr><td>function</td><td><span data-keyref="Type_Function"><a target="_blank" href="../../GML_Overview/Script_Functions.htm">Function</a></span></td><td>The function to execute for each of the characters in the range, with arguments <span class="inline2">character</span> and <span class="inline2">position</span></td></tr><tr><td>pos</td><td><span data-keyref="Type_Real"><a target="_blank" href="../../GML_Overview/Data_Types.htm">Real</a></span></td><td><span data-conref="../../../assets/snippets/Tag_optional.hts"><span class="optional">OPTIONAL</span></span>&nbsp;The starting position (default is 1 for strings). Negative values count from the end of the string (e.g. -1 is the position of the last character, -2 is the position of the one before last character, etc.). 0 is treated the same as 1.</td></tr><tr><td>length</td><td><span data-keyref="Type_Real"><a target="_blank" href="../../GML_Overview/Data_Types.htm">Real</a></span></td><td><span data-conref="../../../assets/snippets/Tag_optional.hts"><span class="optional">OPTIONAL</span></span>&nbsp;The number of characters to iterate over and the direction in which to iterate (left-to-right (positive value) or right-to-left (negative value)).</td></tr></tbody></table><p>&nbsp;</p><h4>Returns:</h4><p class="code"><span data-keyref="Type_Void">N/A</span></p><p>&nbsp;</p><h4>Example 1:</h4><p class="code">function debug_character(character, position)<br>{<br>&nbsp; &nbsp; show_debug_message(character);<br>}<br><br><span data-field="title" data-format="default">string_foreach</span>("test", debug_character);</p><p>The above code first defines a function <span class="inline2">debug_character</span> that prints the character to the log using&nbsp;<span class="inline2"><a href="../Debugging/show_debug_message.htm">show_debug_message</a></span>. It then calls the function&nbsp;<span class="inline2"><span data-field="title" data-format="default">string_foreach</span></span>&nbsp;on a string <span class="inline2">"test"</span> to execute the <span class="inline2">debug_character</span> function on all its characters.</p><p>&nbsp;</p><h4>Example 2:</h4><p class="code">function debug_extended(character, position)<br>{<br>&nbsp; &nbsp; show_debug_message("{0}: {1}", position, character);<br>}<br><br><span data-field="title" data-format="default">string_foreach</span>("1234567890", debug_extended, -1, -infinity);</p><p>The above code first defines a function <span class="inline2">debug_extended</span>&nbsp;that shows a debug message with both the position and the character in it. Then,&nbsp;<span class="inline2"><span data-field="title" data-format="default">string_foreach</span></span>&nbsp;is called with the <span class="inline2">debug_extended</span> function on the string <span class="inline2">"1234567890"</span>. Because the offset is -1, the first character on which the function will execute is the last one (<span class="inline2">"0"</span>). The characters are traversed in a descending order because of the negative length ("0", "9", "8", "7", "6", ..., "1").</p><p>&nbsp;</p><p>&nbsp;</p><div class="footer"><div class="buttons"><div class="clear"><div>Back:&nbsp;<a href="Strings.htm">Strings</a></div><div>Next:&nbsp;<a href="string.htm">string</a></div></div></div><h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2024 All Rights Reserved</span></h5></div></body></html>