<!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml"><head><script type="text/javascript" src="../../../../assets/import/jquery-3.6.1.min.js"></script><script type="text/javascript" src="../../../../assets/import/layer/layer.js"></script><script type="text/javascript" src="../../../../assets/import/pangu.min.js"></script><link rel="stylesheet" type="text/css" href="../../../../assets/import/layer/layui_btn.css"><link rel="stylesheet" type="text/css" href="../../../../assets/import/layer/layui_col.css"><link rel="stylesheet" type="text/css" href="../../../../assets/import/layer/theme/default/layer.css"><link rel="stylesheet" type="text/css" href="../../../../assets/import/main.css"><script>let str;removeHtml=function(e){return e=(e=(e=(e=e.replace(/(<([^>]+)>)/gi,"{}")).replace(/\r\n/g,"\n")).replace(/\n/g,"")).replace(/ {2,}/g," ")},retHtml=function(e){return e.match(/(<([^>]+)>)/gi)},setTranslator=function(e,t,o){let i;i=o?e.attr(o):e.html();let a=t[removeHtml(i)];if(null!=a&&a.length){t=retHtml(i);let n=0;t&&t.forEach(function(e,t){var o=a.replace("{"+n+"}",e);a=o===a?a.replace("{}",e):o,n++}),o?e.attr(o,a):e.html(a)}},noTranslationState=function(){return"true"==window.localStorage.getItem("noTranslationState")},noTranslationStateToggle=function(){window.localStorage.setItem("noTranslationState",!noTranslationState())},addNoTranslationStateButton=function(){var e=`
		
		<button style="
			float: right;
			font-size: 16px;
			padding: 4px 12px;
		"
		onclick="
		window.location.replace('gmmt://'+document.location.hash)
		"
		>打开编辑器</button>

		<button style="
			float: right;
			font-size: 16px;
			padding: 4px 12px;
		"
		onclick="
		noTranslationStateToggle();
		location.reload();
    	event.stopPropagation();
		"
		>切换翻译</button>
		`;$(".header").length?$(".header").append(e):($(".topic-header").append(e),$(".topic-header button").css("position","relative").css("top","44px"))},removeExtensionFromHash=function(e){return e.replaceAll("#t=","").replaceAll("%2F","/").replaceAll(".htm","")};let json_global,json_file={"A&nbsp;{}{}Tile Map Element ID{}{}":"{}{} 平铺地图元素 ID{}{}","An array containing a combination of objects, instances, Tile Maps and the keywords {}all{}/{}other{}":"包含对象、实例、图块地图和关键字 {}all{}/{}other{} 组合的数组","In addition to objects and instances, the function also accepts:":"除了对象和实例之外，该函数还接受：","Note that instead of an object index you can supply an instance {}{}id{}{} to check for a specific instance, or the {}instance keywords{} {}all{}, or {}other{} (depending on the event and current code scope).":"请注意，您可以不提供对象索引，而提供实例{}{}id{}{}来检查特定实例，或{}实例关键字{}{}all{}或{}other{}(取决于事件和当前代码范围)。","Passing an array allows you to check for collisions against multiple objects and/or Tile Maps in one call.":"传递数组允许您在一次调用中检查多个对象和 / 或图块地图的碰撞。",'The code above will check a circular are with a 20pixel radius for a collision with "obj_Cursor" and if there is one it will set the image_index of the object running the code to 1, but if there is not it will set the image_index of the object to 0.':'上面的代码将检查具有20像素半径的圆形是否与"obj_Cursor"发生碰撞，如果存在碰撞，则会将运行代码的对象的image_index设置为1，但如果不存在，则会将对象的image_index设置为0。',"The object to check for instance collisions.":"检查实例碰撞的对象。","The radius (distance in pixels from its center to its edge).":"半径(从中心到边缘的像素距离)。","The special keywords {}all{} and {}other{}":"特殊关键字 {}all{} 和 {}other{}","The x coordinate of the center of the circle to check.":"要检查的圆心的x坐标。","The y coordinate of the center of the circle to check.":"要检查的圆心的y坐标。","This check can be either precise or not, but for precise collisions to be enabled, the object or instance that you are checking for {}must{} also have precise collisions enabled for their sprite. If not, the default check is based on bounding boxes. The following image illustrates how this works:":"此检查可以是精确的，也可以是非精确的，但要启用精确碰撞，您要检查的对象或实例 {} 必须 {} 还为其精灵启用精确碰撞。如果不是，则默认检查基于边界框。下图说明了其工作原理：","Whether the calling instance, if relevant, should be excluded ({}true{}) or not ({}false{}).":"是否应排除调用实例(如果相关)({}true{})或({}false{})。","Whether the check is based on pixel-perfect collisions (true = slow) or its bounding box in general (false = fast).":"该复选框是基于像素完美碰撞(true=slow)还是基于其边界框(一般情况下为False=fast)。","{}An object, instance, tile map ID, keywords all/other, or array containing these items{}":"{} 对象、实例、图块地图 ID、所有 / 其他关键字或包含这些项目的数组 {}",'{}Collision_circle{} creates a circular zone of the radius given by the user around the points x1,y1 and then checks that zone for a collision with {}any{} instance of the object specified by the argument "obj". This check can be either precise or not, but for precise collisions to be enabled, the object or instance that you are checking for {}must{} also have precise collisions enabled for their sprite. If not, the default check is based on bounding boxes. The following image illustrates how this works:':'{}collision_circle{} 在点 x1、y1 周围创建用户给定半径的圆形区域，然后检查该区域是否与参数 "obj" 指定的对象的 {} 任何 {} 实例发生碰撞。此检查可以精确也可以不精确，但要启用精确碰撞，您要检查的对象或实例 {} 必须 {} 也为其精确碰撞启用了精确碰撞。如果不是，则默认检查基于边界框。下图说明了此操作的工作原理：',"{}Here, the instance in the middle is using a collision circle to check for ball objects. Now, the blue ones do {}not{} have a precise bounding box and as you can see, even if the sprite is not actually touching the circle, the collision can still happen (even if you set the precise option in the function to true) as the bounding box of that sprite over-laps the circular area defined by collision_circle. On the other hand, the green balls will only be considered in collision if the actual sprite over-laps with the defined circle. Remember, for precise collisions to be considered {}both{} the object sprite and the collision function must have precise marked as on.":"{} 此处，中间的实例使用碰撞圆来检查球对象。现在，蓝色的物体 {} 没有 {} 具有精确的边界框，正如您所看到的，即使精灵实际上没有接触圆圈，碰撞仍然可能发生 (即使您将函数中的精确选项设置为 true)，因为该精灵的边界框与碰撞圆定义的圆形区域重叠。另一方面，只有当实际精灵与定义的圆重叠时，才会考虑绿色球发生碰撞。请记住，要考虑精确碰撞，对象精灵和碰撞函数都必须将精确标记为打开。","{}Here, the instance in the middle is using a collision circle to check for ball objects. Now, the blue ones do {}not{} have a precise bounding box and as you can see, even if the sprite is not actually touching the circle, the collision can still happen (even if you set the precise option in the function to true) as the bounding box of that sprite over-laps the circular area defined by collision_circle. On the other hand, the green balls will only be considered in collision if the actual sprite over-laps with the defined circle. Remember, for precise collisions to be considered {}both{} the object sprite and the collision function must have precise marked as on. It should also be noted that the return value of the function can be the id of {}any one{} of the instances considered to be in collision.":"{}在这里，中间的实例使用碰撞圆来检查球对象。现在，蓝色的{}没有精确的边界框，如您所见，即使精灵没有实际接触到圆，碰撞仍然可能发生(即使您将函数中的精确选项设置为true)，因为该精灵的边界框与Collision_circle定义的圆形区域重叠。另一方面，只有当实际的精灵与定义的圆重叠时，才会考虑碰撞中的绿色球。请记住，要同时考虑{}对象sprite和碰撞函数的精确碰撞，必须将其精确标记为on。还应注意，函数的返回值可以是被认为处于碰撞中的任何一个{}实例的ID。","{}This function will return the unique {}{}id{}{} of the instance being collided with, or the {}{}Tile Map Element ID{}{}&nbsp;of the tile map found.&nbsp;If no collisions are found, {}{}{}noone{}{}{} is returned.{}":"{} 此函数将返回发生碰撞的实例的唯一 {}{}id{}{}，或找到的图块地图的 {}{} 图块地图元素 ID{}{}。如果未发现冲突，则返回 {}{}{}noone{}{}{}。{}",'{}collision_circle{} creates a circular zone of the radius given by the user around the points {}x1, y1{} and then checks that zone for a collision with {}any{} instance of the object / instance / tile map specified by the argument "obj".':'{}collision_circle{} 以用户指定的半径围绕点 {}x1、y1{} 创建一个圆形区域，然后检查该区域是否与指定的对象 / 实例 / 图块地图的 {} 任何 {} 实例发生碰撞通过参数 "obj"。'},get_json_global=$.ajax({url:"/global.json",type:"GET",dataType:"json",async:!1,success:function(e){json_global=e}});$(function(){if(addNoTranslationStateButton(),noTranslationState())return!1;$("div.footer a,h4,caption").each(function(){setTranslator($(this),json_global)}),$("p,h1,h2,h3,td,li,a,div.dropspotnote,figcaption").each(function(){setTranslator($(this),json_file)}),$("th,.warning,.important,.optional").each(function(){setTranslator($(this),json_global)}),$(".header").length&&(window.setInterval(function(){$("#toc-panel a:not('isTranslate')").each(function(){$(this).addClass("isTranslate"),setTranslator($(this),json_global)}),$(".GlossDefinitionText:not('isTranslate')").each(function(){$(this).addClass("isTranslate"),setTranslator($(this),json_global)})},250),console.log("成功啦!现在正在疯狂翻译菜单中!")),$(".tooltip").each(function(){setTranslator($(this),json_global,"title")})}),document.addEventListener("DOMContentLoaded",()=>{pangu.autoSpacingPage()})</script><script type="text/javascript" language="JavaScript">function reDo(){innerWidth==origWidth&&innerHeight==origHeight||location.reload()}4==parseInt(navigator.appVersion)&&"Netscape"==navigator.appName&&(origWidth=innerWidth,origHeight=innerHeight,onresize=reDo),onerror=null</script><style type="text/css">p.WebHelpNavBar{text-align:right}</style><script type="text/javascript">gCommonRootRelPath=gRootRelPath="../../../..",gTopicId="8.2.2.5.3.0_8"</script><script type="text/javascript" src="../../../../template/scripts/rh.min.js"></script><script type="text/javascript" src="../../../../template/scripts/common.min.js"></script><script type="text/javascript" src="../../../../template/scripts/topic.min.js"></script><script type="text/javascript" src="../../../../template/scripts/topicwidgets.min.js"></script><script type="text/javascript" src="../../../../whxdata/projectsettings.js"></script><link rel="stylesheet" type="text/css" href="../../../../template/styles/topic.min.css"><link rel="stylesheet" type="text/css" href="../../../../template/Charcoal_Grey/topicheader.css"><meta name="topic-status" content="Draft"><meta http-equiv="Content-Type" content="text/html; charset=utf-8"><title>collision_circle</title><meta name="generator" content="Adobe RoboHelp 2022"><link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css"><script src="../../../../assets/scripts/main_script.js" type="module"></script><meta name="rh-authors" content="Mark Alexander"><meta name="topic-comment" content="Page that gives an overview of the funtion collision_circle"><meta name="rh-index-keywords" content="collision_circle"><meta name="search-keywords" content="collision_circle"><meta name="is_pure" content="true"><meta name="brsnext" value="GameMaker_Language/GML_Reference/Movement_And_Collisions/Collisions/collision_circle_list.htm"><meta name="brsprev" value="GameMaker_Language/GML_Reference/Movement_And_Collisions/Collisions/position_destroy.htm"></head><body><div class="topic-header rh-hide" id="rh-topic-header"><div class="logo"></div><div class="nav"><div class="title" title="collision_circle"><span>collision_circle</span></div><div class="gotohome" title="Click here to see this page in full context"><a href="#" onclick="rh._.goToFullLayout()">Click here to see this page in full context</a></div></div></div><div class="topic-header-shadow rh-hide" id="rh-topic-header-shadow"></div><h1>collision_circle</h1><p><span class="inline">collision_circle</span> creates a circular zone of the radius given by the user around the points <span class="inline2">x1, y1</span> and then checks that zone for a collision with <b>any</b> instance of the object / instance / tile map specified by the argument "obj".</p><p>This check can be either precise or not, but for precise collisions to be enabled, the object or instance that you are checking for <i>must</i> also have precise collisions enabled for their sprite. If not, the default check is based on bounding boxes. The following image illustrates how this works:</p><p><img alt="Collision circle example" class="center" src="../../../../assets/Images/Scripting_Reference/GML/Reference/Movement_Collisions/collision_circle_illustration.png">Here, the instance in the middle is using a collision circle to check for ball objects. Now, the blue ones do <i>not</i> have a precise bounding box and as you can see, even if the sprite is not actually touching the circle, the collision can still happen (even if you set the precise option in the function to true) as the bounding box of that sprite over-laps the circular area defined by collision_circle. On the other hand, the green balls will only be considered in collision if the actual sprite over-laps with the defined circle. Remember, for precise collisions to be considered <i>both</i> the object sprite and the collision function must have precise marked as on.</p><p><span data-conref="../../../../assets/snippets/Collision_instance_return_desc.hts">This function will return the unique <a href="../../Asset_Management/Instances/Instance_Variables/id.htm" title="Hyperlink [../../Asset_Management/Instances/Instance_Variables/id.htm]" data-tcx-title="Hyperlink [../../Asset_Management/Instances/Instance_Variables/id.htm]"><span class="inline">id</span></a> of the instance being collided with, or the <span data-keyref="Type_ID_Element_Tilemap" title="Variable [Type_ID_Element_Tilemap]" data-tcx-title="Variable [Type_ID_Element_Tilemap]"><a target="_blank" href="../../Asset_Management/Rooms/Tile_Map_Layers/layer_tilemap_get_id.htm">Tile Map Element ID</a></span>&nbsp;of the tile map found.&nbsp;If no collisions are found, <span class="misspell-word"><span class="inline"><a href="../../../GML_Overview/Instance_Keywords.htm" title="Hyperlink [../../../GML_Overview/Instance_Keywords.htm]" data-tcx-title="Hyperlink [../../../GML_Overview/Instance_Keywords.htm]">noone</a></span></span> is returned.</span></p><div data-conref="../../../../assets/snippets/Collisions_function_accepted_arguments.hts"><p>In addition to objects and instances, the function also accepts:</p><ul class="colour"><li>The special keywords <b>all</b> and <b>other</b></li><li>A&nbsp;<span data-keyref="Type_ID_Element_Tilemap"><a target="_blank" href="../../Asset_Management/Rooms/Tile_Map_Layers/layer_tilemap_get_id.htm">Tile Map Element ID</a></span></li><li>An array containing a combination of objects, instances, Tile Maps and the keywords <strong>all</strong>/<strong>other</strong></li></ul><p>Passing an array allows you to check for collisions against multiple objects and/or Tile Maps in one call.</p></div><p>&nbsp;</p><h4>Syntax:</h4><p class="code">collision_circle(x1, y1, rad, obj, prec, notme);</p><p>&nbsp;</p><table><tbody><tr><th>Argument</th><th>Type</th><th>Description</th></tr><tr><td>x1</td><td><span data-keyref="Type_Real"><a target="_blank" href="../../../GML_Overview/Data_Types.htm">Real</a></span></td><td>The x coordinate of the center of the circle to check.</td></tr><tr><td>y1</td><td><span data-keyref="Type_Real"><a target="_blank" href="../../../GML_Overview/Data_Types.htm">Real</a></span></td><td>The y coordinate of the center of the circle to check.</td></tr><tr><td>rad</td><td><span data-keyref="Type_Real"><a target="_blank" href="../../../GML_Overview/Data_Types.htm">Real</a></span></td><td>The radius (distance in pixels from its center to its edge).</td></tr><tr><td>obj</td><td><span data-keyref="Collision_obj_type"><span data-keyref="Type_Asset_Object"><a target="_blank" href="../../../../The_Asset_Editors/Objects.htm">Object Asset</a></span>&nbsp;or&nbsp;<span data-keyref="Type_ID_Instance"><a target="_blank" href="../../Asset_Management/Instances/Instance_Variables/id.htm">Object Instance</a></span>&nbsp;or&nbsp;<span data-keyref="Type_ID_Element_Tilemap"><a target="_blank" href="../../Asset_Management/Rooms/Tile_Map_Layers/layer_tilemap_get_id.htm">Tile Map Element ID</a></span>&nbsp;or&nbsp;<span data-keyref="Type_Array"><a target="_blank" href="../../../GML_Overview/Arrays.htm">Array</a></span></span></td><td><span data-keyref="Collision_obj_description">An object, instance, tile map ID, keywords all/other, or array containing these items</span></td></tr><tr><td>prec</td><td><span data-keyref="Type_Bool"><a target="_blank" href="../../../GML_Overview/Data_Types.htm">Boolean</a></span></td><td>Whether the check is based on pixel-perfect collisions (true = slow) or its bounding box in general (false = fast).</td></tr><tr><td>notme</td><td><span data-keyref="Type_Bool"><a target="_blank" href="../../../GML_Overview/Data_Types.htm">Boolean</a></span></td><td>Whether the calling instance, if relevant, should be excluded (<span class="inline">true</span>) or not (<span class="inline">false</span>).</td></tr></tbody></table><p>&nbsp;</p><h4>Returns:</h4><p class="code"><span data-keyref="Type_ID_Instance"><a target="_blank" href="../../Asset_Management/Instances/Instance_Variables/id.htm">Object Instance</a></span>&nbsp;or&nbsp;<span data-keyref="Type_ID_Element_Tilemap"><a target="_blank" href="../../Asset_Management/Rooms/Tile_Map_Layers/layer_tilemap_get_id.htm">Tile Map Element ID</a></span>&nbsp;or&nbsp;<span data-keyref="Type_ID_noone"><a target="_blank" href="../../../GML_Overview/Instance_Keywords.htm">noone</a></span></p><p>&nbsp;</p><h4>Example:</h4><p class="code">if (collision_circle(x, y, 20, obj_Cursor, false, true) != noone)<br>{<br>&nbsp; &nbsp; image_index = 1;<br>}<br>else image_index = 0;</p><p>The code above will check a circular are with a 20pixel radius for a collision with "obj_Cursor" and if there is one it will set the image_index of the object running the code to 1, but if there is not it will set the image_index of the object to 0.</p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><div class="footer"><div class="buttons"><div class="clear"><div style="float:left">Back: <a href="Collisions.htm">Collisions</a></div><div style="float:right">Next: <a href="collision_circle_list.htm">collision_circle_list</a></div></div></div><h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2024 All Rights Reserved</span></h5></div></body></html>