<!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml"><head><script type="text/javascript" src="../../../../assets/import/jquery-3.6.1.min.js"></script><script type="text/javascript" src="../../../../assets/import/layer/layer.js"></script><script type="text/javascript" src="../../../../assets/import/pangu.min.js"></script><link rel="stylesheet" type="text/css" href="../../../../assets/import/layer/layui_btn.css"><link rel="stylesheet" type="text/css" href="../../../../assets/import/layer/layui_col.css"><link rel="stylesheet" type="text/css" href="../../../../assets/import/layer/theme/default/layer.css"><link rel="stylesheet" type="text/css" href="../../../../assets/import/main.css"><script>let str;removeHtml=function(e){return e=(e=(e=(e=e.replace(/(<([^>]+)>)/gi,"{}")).replace(/\r\n/g,"\n")).replace(/\n/g,"")).replace(/ {2,}/g," ")},retHtml=function(e){return e.match(/(<([^>]+)>)/gi)},setTranslator=function(e,t,o){let a;a=o?e.attr(o):e.html();let i=t[removeHtml(a)];if(null!=i&&i.length){t=retHtml(a);let n=0;t&&t.forEach(function(e,t){var o=i.replace("{"+n+"}",e);i=o===i?i.replace("{}",e):o,n++}),o?e.attr(o,i):e.html(i)}},noTranslationState=function(){return"true"==window.localStorage.getItem("noTranslationState")},noTranslationStateToggle=function(){window.localStorage.setItem("noTranslationState",!noTranslationState())},addNoTranslationStateButton=function(){var e=`
		
		<button style="
			float: right;
			font-size: 16px;
			padding: 4px 12px;
		"
		onclick="
		window.location.replace('gmmt://'+document.location.hash)
		"
		>打开编辑器</button>

		<button style="
			float: right;
			font-size: 16px;
			padding: 4px 12px;
		"
		onclick="
		noTranslationStateToggle();
		location.reload();
    	event.stopPropagation();
		"
		>切换翻译</button>
		`;$(".header").length?$(".header").append(e):($(".topic-header").append(e),$(".topic-header button").css("position","relative").css("top","44px"))},removeExtensionFromHash=function(e){return e.replaceAll("#t=","").replaceAll("%2F","/").replaceAll(".htm","")};let json_global,json_file={"A&nbsp;{}{}Tile Map Element ID{}{}":"{}{} 平铺地图元素 ID{}{}","An array containing a combination of objects, instances, Tile Maps and the keywords {}all{}/{}other{}":"包含对象、实例、图块地图和关键字 {}all{}/{}other{} 组合的数组","As you only need to get your tile map ID once, you can move the first line to the Create event.":"由于您只需要获取一次图块地图 ID，因此您可以将第一行移至 Create 事件。","If you need to get the unique instance {}id{} of the object being collided with, you should use {}{}instance_place(){}{}.":"如果您需要获取碰撞对象的唯一实例 {}id{}，则应使用 {}{}instance_place(){}{}。","In addition to objects and instances, the function also accepts:":"除了对象和实例之外，该函数还接受：","Passing an array allows you to check for collisions against multiple objects and/or Tile Maps in one call.":"传递数组允许您在一次调用中检查多个对象和 / 或图块地图的碰撞。","See:&nbsp;{}Collisions{}":"请参阅：{} 碰撞 {}","The above code checks to see if there is {}not{} a collision to the left of the instance and moves the instance if there is none.":"以上代码检查实例左侧是否存在{}不{}碰撞，如果没有碰撞，则移动实例。","The instance or object to check for.":"要检查的实例或对象。","The special keywords {}all{} and {}other{}":"特殊关键字 {}all{} 和 {}other{}","The x position to check.":"要检查的x位置。","The y position to check.":"要检查的y位置。",'This is the same logic as the last example, however it uses an array to check for collisions against two types of objects ({}obj_wall{}, {}obj_bush{}) and the Tile Map for a Tile Layer called "Tiles_1".':'这与上一个示例的逻辑相同，但它使用数组来检查与两种类型的对象 ({}obj_wall{}、{}obj_bush{}) 以及名为 "Tiles_1" 的 Tile Layer 的 Tile Map 的碰撞。',"This will work for precise collisions, but only if both the instance and the object being checked for have precise collision masks selected. Otherwise, only bounding box collisions are applied.":"这适用于精确碰撞，但前提是要检查的实例和对象都选择了精确碰撞蒙版。否则，仅应用边界框碰撞。","With this function you can check a position for a collision with another instance or all instances of an object using the collision mask of the instance that runs the code for the check. When you use this you are effectively asking {}GameMaker{} to move the instance to the new position, check for a collision, move back and tell you if a collision was found or not.":"通过此函数，您可以使用运行检查代码的实例的碰撞掩码来检查与另一个实例或对象的所有实例发生碰撞的位置。当您使用此功能时，您实际上是在要求 {}GameMaker{} 将实例移动到新位置，检查是否存在碰撞，然后向后移动并告诉您是否发现碰撞。","With this function you can check a position for a collision with another instance or all instances of an object using the collision mask of the instance that runs the code for the check. When you use this you are effectively asking {}GameMaker{} to move the instance to the new position, check for a collision, move back and tell you if a collision was found or not. This will work for precise collisions, but only if both the instance and the object being checked for have precise collision masks selected otherwise only bounding box collisions are applied. This function also accepts the special keywords {}all{} and {}other{}. Please note that should you need to get the unique instance {}id{} of the object being collided with, you should use {}{}instance_place(){}{}.":"使用此函数，可以使用运行检查代码的实例的碰撞遮罩检查某个位置是否与另一个实例或对象的所有实例发生碰撞。使用此命令时，实际上是要求{}GameMaker{}将实例移动到新位置，检查是否存在碰撞，然后返回并告诉您是否发现碰撞。这将适用于精确碰撞，但前提是要检查的实例和对象都选择了精确碰撞遮罩，否则仅应用边界框碰撞。此函数还接受特殊关键字{}all{}和{}other{}。请注意，如果需要获取碰撞对象的唯一实例{}id{}，则应使用{}{}instance_place(){}{}。","{}An object, instance, tile map ID, keywords all/other, or array containing these items{}":"{} 对象、实例、图块地图 ID、所有 / 其他关键字或包含这些项目的数组 {}","{}Note that the given x/y coordinates will be floored to the nearest integer before the check is performed.":"{}请注意，在执行检查之前，给定的x/y坐标将泛洪到最近的整数。"},get_json_global=$.ajax({url:"/global.json",type:"GET",dataType:"json",async:!1,success:function(e){json_global=e}});$(function(){if(addNoTranslationStateButton(),noTranslationState())return!1;$("div.footer a,h4,caption").each(function(){setTranslator($(this),json_global)}),$("p,h1,h2,h3,td,li,a,div.dropspotnote,figcaption").each(function(){setTranslator($(this),json_file)}),$("th,.warning,.important,.optional").each(function(){setTranslator($(this),json_global)}),$(".header").length&&(window.setInterval(function(){$("#toc-panel a:not('isTranslate')").each(function(){$(this).addClass("isTranslate"),setTranslator($(this),json_global)}),$(".GlossDefinitionText:not('isTranslate')").each(function(){$(this).addClass("isTranslate"),setTranslator($(this),json_global)})},250),console.log("成功啦!现在正在疯狂翻译菜单中!")),$(".tooltip").each(function(){setTranslator($(this),json_global,"title")})}),document.addEventListener("DOMContentLoaded",()=>{pangu.autoSpacingPage()})</script><script type="text/javascript" language="JavaScript">function reDo(){innerWidth==origWidth&&innerHeight==origHeight||location.reload()}4==parseInt(navigator.appVersion)&&"Netscape"==navigator.appName&&(origWidth=innerWidth,origHeight=innerHeight,onresize=reDo),onerror=null</script><style type="text/css">p.WebHelpNavBar{text-align:right}</style><script type="text/javascript">gCommonRootRelPath=gRootRelPath="../../../..",gTopicId="8.2.2.5.3.0_3"</script><script type="text/javascript" src="../../../../template/scripts/rh.min.js"></script><script type="text/javascript" src="../../../../template/scripts/common.min.js"></script><script type="text/javascript" src="../../../../template/scripts/topic.min.js"></script><script type="text/javascript" src="../../../../template/scripts/topicwidgets.min.js"></script><script type="text/javascript" src="../../../../whxdata/projectsettings.js"></script><link rel="stylesheet" type="text/css" href="../../../../template/styles/topic.min.css"><link rel="stylesheet" type="text/css" href="../../../../template/Charcoal_Grey/topicheader.css"><meta name="topic-status" content="Draft"><meta http-equiv="Content-Type" content="text/html; charset=utf-8"><title>place_meeting</title><meta name="generator" content="Adobe RoboHelp 2022"><link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css"><script src="../../../../assets/scripts/main_script.js" type="module"></script><meta name="rh-authors" content="Mark Alexander"><meta name="topic-comment" content="Page that gives an overview of the funtion place_meeting"><meta name="rh-index-keywords" content="place_meeting"><meta name="search-keywords" content="place_meeting"><meta name="is_pure" content="true"><meta name="brsnext" value="GameMaker_Language/GML_Reference/Movement_And_Collisions/Collisions/position_empty.htm"><meta name="brsprev" value="GameMaker_Language/GML_Reference/Movement_And_Collisions/Collisions/place_free.htm"></head><body><div class="topic-header rh-hide" id="rh-topic-header"><div class="logo"></div><div class="nav"><div class="title" title="place_meeting"><span>place_meeting</span></div><div class="gotohome" title="Click here to see this page in full context"><a href="#" onclick="rh._.goToFullLayout()">Click here to see this page in full context</a></div></div></div><div class="topic-header-shadow rh-hide" id="rh-topic-header-shadow"></div><h1>place_meeting</h1><p>With this function you can check a position for a collision with another instance, or all instances of an object, using the collision mask of the instance that runs the code. When you use this you are effectively asking <span data-keyref="GameMaker Name">GameMaker</span> to move the instance to the new position, check for a collision, move back and tell you if a collision was found or not.</p><p>This will work for precise collisions, but only if both the instance and the object being checked for have precise collision masks selected. Otherwise, only bounding box collisions are applied.</p><div data-conref="../../../../assets/snippets/Collisions_function_accepted_arguments.hts"><p>In addition to objects and instances, the function also accepts:</p><ul class="colour"><li>The special keywords <b>all</b> and <b>other</b></li><li>A&nbsp;<span data-keyref="Type_ID_Element_Tilemap"><a target="_blank" href="../../Asset_Management/Rooms/Tile_Map_Layers/layer_tilemap_get_id.htm">Tile Map Element ID</a></span></li><li>An array containing a combination of objects, instances, Tile Maps and the keywords <strong>all</strong>/<strong>other</strong></li></ul><p>Passing an array allows you to check for collisions against multiple objects and/or Tile Maps in one call.</p></div><p>If you need to get the unique instance <b>id</b> of the object being collided with, you should use <a href="../../Asset_Management/Instances/instance_place.htm"><span class="inline">instance_place()</span></a>.</p><p><img alt="Place meeting example" class="center" src="../../../../assets/Images/Scripting_Reference/GML/Reference/Movement_Collisions/place_meeting.png">See:&nbsp;<a href="Collisions.htm">Collisions</a></p><p>&nbsp;</p><h4>Syntax:</h4><p class="code">place_meeting(x, y, obj);</p><table><tbody><tr><th>Argument</th><th>Type</th><th>Description</th></tr><tr><td>x</td><td><span data-keyref="Type_Real"><a target="_blank" href="../../../GML_Overview/Data_Types.htm">Real</a></span></td><td>The x position to check.</td></tr><tr><td>y</td><td><span data-keyref="Type_Real"><a target="_blank" href="../../../GML_Overview/Data_Types.htm">Real</a></span></td><td>The y position to check.</td></tr><tr><td>obj</td><td><span data-keyref="Collision_obj_type"><span data-keyref="Type_Asset_Object"><a target="_blank" href="../../../../The_Asset_Editors/Objects.htm">Object Asset</a></span>&nbsp;or&nbsp;<span data-keyref="Type_ID_Instance"><a target="_blank" href="../../Asset_Management/Instances/Instance_Variables/id.htm">Object Instance</a></span>&nbsp;or&nbsp;<span data-keyref="Type_ID_Element_Tilemap"><a target="_blank" href="../../Asset_Management/Rooms/Tile_Map_Layers/layer_tilemap_get_id.htm">Tile Map Element ID</a></span>&nbsp;or&nbsp;<span data-keyref="Type_Array"><a target="_blank" href="../../../GML_Overview/Arrays.htm">Array</a></span></span></td><td><span data-keyref="Collision_obj_description">An object, instance, tile map ID, keywords all/other, or array containing these items</span></td></tr></tbody></table><p>&nbsp;</p><h4>Returns:</h4><p class="code"><span data-keyref="Type_Bool"><a target="_blank" href="../../../GML_Overview/Data_Types.htm">Boolean</a></span></p><p>&nbsp;</p><h4>Example 1:</h4><p class="code">if (keyboard_check(vk_left))<br>{<br>&nbsp; &nbsp; if (!place_meeting(x - 5, y, obj_wall))<br>&nbsp; &nbsp; {<br>&nbsp; &nbsp; &nbsp; &nbsp; x -= 5;<br>&nbsp; &nbsp; }<br>}</p><p>The above code checks to see if there is <i>not</i> a collision to the left of the instance and moves the instance if there is none.</p><h4>Example 2:</h4><p class="code">var _tilemap = layer_tilemap_get_id("Tiles_1");<br><br>if (keyboard_check(vk_left))<br>{<br>&nbsp; &nbsp; if !place_meeting(x - 5, y, [obj_wall, obj_bush, _tilemap])<br>&nbsp; &nbsp; {<br>&nbsp; &nbsp; &nbsp; &nbsp; x -= 5;<br>&nbsp; &nbsp; }<br>}</p><p>This is the same logic as the last example, however it uses an array to check for collisions against two types of objects (<span class="inline2">obj_wall</span>, <span class="inline2">obj_bush</span>) and the Tile Map for a Tile Layer called "Tiles_1".</p><p>As you only need to get your tile map ID once, you can move the first line to the Create event.</p><p>&nbsp;</p><p>&nbsp;</p><div class="footer"><div class="buttons"><div class="clear"><div style="float:left">Back: <a href="Collisions.htm">Collisions</a></div><div style="float:right">Next: <a href="position_empty.htm">position_empty</a></div></div></div><h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2024 All Rights Reserved</span></h5></div></body></html>