<!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml"><head><script type="text/javascript" src="../../../../assets/import/jquery-3.6.1.min.js"></script><script type="text/javascript" src="../../../../assets/import/layer/layer.js"></script><script type="text/javascript" src="../../../../assets/import/pangu.min.js"></script><link rel="stylesheet" type="text/css" href="../../../../assets/import/layer/layui_btn.css"><link rel="stylesheet" type="text/css" href="../../../../assets/import/layer/layui_col.css"><link rel="stylesheet" type="text/css" href="../../../../assets/import/layer/theme/default/layer.css"><link rel="stylesheet" type="text/css" href="../../../../assets/import/main.css"><script>let str;removeHtml=function(e){return e=(e=(e=(e=e.replace(/(<([^>]+)>)/gi,"{}")).replace(/\r\n/g,"\n")).replace(/\n/g,"")).replace(/ {2,}/g," ")},retHtml=function(e){return e.match(/(<([^>]+)>)/gi)},setTranslator=function(e,t,n){let a;a=n?e.attr(n):e.html();let i=t[removeHtml(a)];if(null!=i&&i.length){t=retHtml(a);let o=0;t&&t.forEach(function(e,t){var n=i.replace("{"+o+"}",e);i=n===i?i.replace("{}",e):n,o++}),n?e.attr(n,i):e.html(i)}},noTranslationState=function(){return"true"==window.localStorage.getItem("noTranslationState")},noTranslationStateToggle=function(){window.localStorage.setItem("noTranslationState",!noTranslationState())},addNoTranslationStateButton=function(){var e=`
		
		<button style="
			float: right;
			font-size: 16px;
			padding: 4px 12px;
		"
		onclick="
		window.location.replace('gmmt://'+document.location.hash)
		"
		>打开编辑器</button>

		<button style="
			float: right;
			font-size: 16px;
			padding: 4px 12px;
		"
		onclick="
		noTranslationStateToggle();
		location.reload();
    	event.stopPropagation();
		"
		>切换翻译</button>
		`;$(".header").length?$(".header").append(e):($(".topic-header").append(e),$(".topic-header button").css("position","relative").css("top","44px"))},removeExtensionFromHash=function(e){return e.replaceAll("#t=","").replaceAll("%2F","/").replaceAll(".htm","")};let json_global,json_file={"A&nbsp;{}{}Tile Map Element ID{}{}":"{}{} 平铺地图元素 ID{}{}","An array containing a combination of objects, instances, Tile Maps and the keywords {}all{}/{}other{}":"包含对象、实例、图块地图和关键字 {}all{}/{}other{} 组合的数组","In addition to objects and instances, the function also accepts:":"除了对象和实例之外，该函数还接受：","Note that instead of an object index you can supply the {}instance keyword{}&nbsp;{}all{}, to check for all instances in the current room, which may include the instance running the code (depending on the {}notme{} argument).":"请注意，您可以不提供对象索引，而是提供{}实例关键字{}{}all{}，以检查当前房间中的所有实例，其中可能包括运行代码的实例(取决于{}notme{}参数)。","Passing an array allows you to check for collisions against multiple objects and/or Tile Maps in one call.":"传递数组允许您在一次调用中检查多个对象和 / 或图块地图的碰撞。","The DS list to use to store the IDs of colliding instances.":"用于存储碰撞实例ID的D列表。",'The code above will check a rectangular area 100 pixels around the calling instance position for collisions with instances of "obj_Enemy". If there are any collisions, then the pre-created list is looped through and each instance that was in the collision is destroyed.':'上面的代码将检查调用实例位置周围100像素的矩形区域，以确定是否与"obj_Enemy"实例发生碰撞。如果存在任何碰撞，则会循环显示预先创建的列表，并销毁碰撞中的每个实例。',"The object or instance to check for.":"要检查的对象或实例。","The special keywords {}all{} and {}other{}":"特殊关键字 {}all{} 和 {}other{}","The x coordinate of the left side of the rectangle to check.":"要检查的矩形左侧的x坐标。","The x coordinate of the right side of the rectangle to check.":"要检查的矩形右侧的x坐标。","The y coordinate of the bottom side of the rectangle to check.":"要检查的矩形底边的y坐标。","The y coordinate of the top side of the rectangle to check.":"要检查的矩形顶边的y坐标。","This function is the same as the {}{}collision_rectangle(){}{} function, only instead of just detecting one instance / tile map in collision at a time, it will detect multiple instances / tile maps. You supply the x/y positions of the top left and bottom right of the area to check along with the object / tile map to check for, and you can set the check to be precise (in which case all instances being checked will need to have {}precise{} collision masks) and whether the check should include the calling instance or not.":"此函数与 {}{}collision_rectangle(){}{} 函数相同，只不过不是一次仅检测一个实例 / 图块地图发生碰撞，而是检测多个实例 / 图块地图。您提供要检查的区域的左上角和右下角的 x/y 位置以及要检查的对象 / 图块地图，并且您可以将检查设置为精确 (在这种情况下，所有正在检查的实例都需要具有 {} 精确的 {} 碰撞掩码) 以及检查是否应包括调用实例。","This function is the same as the {}{}collision_rectangle(){}{} function, only instead of just detecting one instance in collision at a time, it will detect multiple instances. You supply the x/y positions of the top left and bottom right of the area to check along with the object to check for, and you can set the check to be precise (in which case all instances being checked will need to have {}precise{} collision masks) and whether the check should include the calling instance or not.":"此函数与 {}{}collision_rectangle(){}{} 函数相同，只是一次检测一个碰撞实例，而不是检测多个实例。提供要检查的区域的左上角和右下角的 x/y 位置以及要检查的对象，并且可以将检查设置为精确 (在这种情况下，所有要检查的实例都需要具有 {} 精确的 {} 碰撞遮罩)，以及检查是否应包括调用实例。","Whether the calling instance, if relevant, should be excluded ({}true{}) or not ({}false{}).":"是否应排除调用实例(如果相关)({}true{})或({}false{})。","Whether the check is based on precise collisions ({}true{}, which is slower) or its bounding box in general ({}false{}, faster).":"检查是基于精确碰撞({}true{}，速度较慢)还是基于其边界框({}false{}，速度较快)。","Whether the list should be ordered by distance ({}true{}) or not ({}false{}).":"列表是否应按距离({}true{})或不按距离({}false{})排序。","You supply a {}DS list{} too, so the&nbsp;{}{}id{}{} values of any instances (or tile maps) that are colliding with the calling instance will be added to the end of the given list. You can {}clear{} the list before calling this function so that it only contains results from this function call. You also have the option to order the instances based on their distances from the centre of the rectangular area to their origins. The function returns the number of instances / tile maps found, or 0 if none are found.":"您还提供了一个 {}DS 列表 {}，因此与调用实例发生冲突的任何实例 (或图块地图) 的 {}{}id{}{} 值都将添加到给定列表的末尾。您可以在调用此函数之前 {} 清除 {} 该列表，以便它仅包含此函数调用的结果。您还可以选择根据实例从矩形区域中心到原点的距离对实例进行排序。该函数返回找到的实例 / 图块地图的数量，如果没有找到则返回 0。","You supply a {}DS list{} too, so the&nbsp;{}{}id{}{} values of any instances that are colliding with the calling instance will be added to the end of the given list. You can {}clear{} the list before calling this function so that it only contains results from this function call. You also have the option to order the instances based on their distances from the centre of the rectangular area to their origins. The function returns the number of instances found, or 0 if none are found.":"您还提供了一个{}DS列表{}，因此任何与调用实例碰撞的实例的{}{}id{}{}值都将添加到给定列表的末尾。您可以在调用此函数之前{}清除{}列表，以便它只包含此函数调用的结果。您还可以选择根据实例从矩形区域中心到其原点的距离对其进行排序。函数返回找到的实例数，如果找不到实例，则返回0。","{}An object, instance, tile map ID, keywords all/other, or array containing these items{}":"{} 对象、实例、图块地图 ID、所有 / 其他关键字或包含这些项目的数组 {}"},get_json_global=$.ajax({url:"/global.json",type:"GET",dataType:"json",async:!1,success:function(e){json_global=e}});$(function(){if(addNoTranslationStateButton(),noTranslationState())return!1;$("div.footer a,h4,caption").each(function(){setTranslator($(this),json_global)}),$("p,h1,h2,h3,td,li,a,div.dropspotnote,figcaption").each(function(){setTranslator($(this),json_file)}),$("th,.warning,.important,.optional").each(function(){setTranslator($(this),json_global)}),$(".header").length&&(window.setInterval(function(){$("#toc-panel a:not('isTranslate')").each(function(){$(this).addClass("isTranslate"),setTranslator($(this),json_global)}),$(".GlossDefinitionText:not('isTranslate')").each(function(){$(this).addClass("isTranslate"),setTranslator($(this),json_global)})},250),console.log("成功啦!现在正在疯狂翻译菜单中!")),$(".tooltip").each(function(){setTranslator($(this),json_global,"title")})}),document.addEventListener("DOMContentLoaded",()=>{pangu.autoSpacingPage()})</script><script type="text/javascript" language="JavaScript">function reDo(){innerWidth==origWidth&&innerHeight==origHeight||location.reload()}4==parseInt(navigator.appVersion)&&"Netscape"==navigator.appName&&(origWidth=innerWidth,origHeight=innerHeight,onresize=reDo),onerror=null</script><style type="text/css">p.WebHelpNavBar{text-align:right}</style><script type="text/javascript">gCommonRootRelPath=gRootRelPath="../../../..",gTopicId="8.2.2.5.3.0_17"</script><script type="text/javascript" src="../../../../template/scripts/rh.min.js"></script><script type="text/javascript" src="../../../../template/scripts/common.min.js"></script><script type="text/javascript" src="../../../../template/scripts/topic.min.js"></script><script type="text/javascript" src="../../../../template/scripts/topicwidgets.min.js"></script><script type="text/javascript" src="../../../../whxdata/projectsettings.js"></script><link rel="stylesheet" type="text/css" href="../../../../template/styles/topic.min.css"><link rel="stylesheet" type="text/css" href="../../../../template/Charcoal_Grey/topicheader.css"><meta name="topic-status" content="Draft"><meta http-equiv="Content-Type" content="text/html; charset=utf-8"><title>collision_rectangle_list</title><meta name="generator" content="Adobe RoboHelp 2022"><link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css"><script src="../../../../assets/scripts/main_script.js" type="module"></script><meta name="rh-authors" content="Mark Alexander"><meta name="topic-comment" content="Page that gives an overview of the funtion collision_rectangle_list"><meta name="rh-index-keywords" content="collision_rectangle_list"><meta name="search-keywords" content="collision_rectangle_list"><meta name="is_pure" content="true"><meta name="brsnext" value="GameMaker_Language/GML_Reference/Movement_And_Collisions/Collisions/point_in_rectangle.htm"><meta name="brsprev" value="GameMaker_Language/GML_Reference/Movement_And_Collisions/Collisions/collision_rectangle.htm"></head><body><div class="topic-header rh-hide" id="rh-topic-header"><div class="logo"></div><div class="nav"><div class="title" title="collision_rectangle_list"><span>collision_rectangle_list</span></div><div class="gotohome" title="Click here to see this page in full context"><a href="#" onclick="rh._.goToFullLayout()">Click here to see this page in full context</a></div></div></div><div class="topic-header-shadow rh-hide" id="rh-topic-header-shadow"></div><h1>collision_rectangle_list</h1><p>This function is the same as the <a href="collision_rectangle.htm"><span class="inline">collision_rectangle()</span></a> function, only instead of just detecting one instance / tile map in collision at a time, it will detect multiple instances / tile maps. You supply the x/y positions of the top left and bottom right of the area to check along with the object / tile map to check for, and you can set the check to be precise (in which case all instances being checked will need to have <i>precise</i> collision masks) and whether the check should include the calling instance or not.</p><p>You supply a <a href="../../Data_Structures/DS_Lists/DS_Lists.htm">DS list</a> too, so the&nbsp;<a href="../../Asset_Management/Instances/Instance_Variables/id.htm"><span class="inline">id</span></a> values of any instances (or tile maps) that are colliding with the calling instance will be added to the end of the given list. You can <a href="../../Data_Structures/DS_Lists/ds_list_clear.htm">clear</a> the list before calling this function so that it only contains results from this function call. You also have the option to order the instances based on their distances from the centre of the rectangular area to their origins. The function returns the number of instances / tile maps found, or 0 if none are found.</p><div data-conref="../../../../assets/snippets/Collisions_function_accepted_arguments.hts"><p>In addition to objects and instances, the function also accepts:</p><ul class="colour"><li>The special keywords <b>all</b> and <b>other</b></li><li>A&nbsp;<span data-keyref="Type_ID_Element_Tilemap"><a target="_blank" href="../../Asset_Management/Rooms/Tile_Map_Layers/layer_tilemap_get_id.htm">Tile Map Element ID</a></span></li><li>An array containing a combination of objects, instances, Tile Maps and the keywords <strong>all</strong>/<strong>other</strong></li></ul><p>Passing an array allows you to check for collisions against multiple objects and/or Tile Maps in one call.</p></div><p>&nbsp;</p><h4>Syntax:</h4><p class="code">collision_rectangle_list(x1, y1, x2, y2, obj, prec, notme, list, ordered);</p><table><tbody><tr><th>Argument</th><th>Type</th><th>Description</th></tr><tr><td>x1</td><td><span data-keyref="Type_Real"><a target="_blank" href="../../../GML_Overview/Data_Types.htm">Real</a></span></td><td>The x coordinate of the left side of the rectangle to check.</td></tr><tr><td>y1</td><td><span data-keyref="Type_Real"><a target="_blank" href="../../../GML_Overview/Data_Types.htm">Real</a></span></td><td>The y coordinate of the top side of the rectangle to check.</td></tr><tr><td>x2</td><td><span data-keyref="Type_Real"><a target="_blank" href="../../../GML_Overview/Data_Types.htm">Real</a></span></td><td>The x coordinate of the right side of the rectangle to check.</td></tr><tr><td>y2</td><td><span data-keyref="Type_Real"><a target="_blank" href="../../../GML_Overview/Data_Types.htm">Real</a></span></td><td>The y coordinate of the bottom side of the rectangle to check.</td></tr><tr><td>obj</td><td><span data-keyref="Collision_obj_type" data-tcx-title="Variable [Collision_obj_type]"><span data-keyref="Type_Asset_Object"><a target="_blank" href="../../../../The_Asset_Editors/Objects.htm">Object Asset</a></span>&nbsp;or&nbsp;<span data-keyref="Type_ID_Instance"><a target="_blank" href="../../Asset_Management/Instances/Instance_Variables/id.htm">Object Instance</a></span>&nbsp;or&nbsp;<span data-keyref="Type_ID_Element_Tilemap"><a target="_blank" href="../../Asset_Management/Rooms/Tile_Map_Layers/layer_tilemap_get_id.htm">Tile Map Element ID</a></span>&nbsp;or&nbsp;<span data-keyref="Type_Array"><a target="_blank" href="../../../GML_Overview/Arrays.htm">Array</a></span></span></td><td><span data-keyref="Collision_obj_description" data-tcx-title="Variable [Collision_obj_description]">An object, instance, tile map ID, keywords all/other, or array containing these items</span></td></tr><tr><td>prec</td><td><span data-keyref="Type_Bool"><a target="_blank" href="../../../GML_Overview/Data_Types.htm">Boolean</a></span></td><td>Whether the check is based on precise collisions (<span class="inline">true</span>, which is slower) or its bounding box in general (<span class="inline">false</span>, faster).</td></tr><tr><td>notme</td><td><span data-keyref="Type_Bool"><a target="_blank" href="../../../GML_Overview/Data_Types.htm">Boolean</a></span></td><td>Whether the calling instance, if relevant, should be excluded (<span class="inline">true</span>) or not (<span class="inline">false</span>).</td></tr><tr><td>list</td><td><span data-keyref="Type_ID_DS_List"><a target="_blank" href="../../Data_Structures/DS_Lists/ds_list_create.htm">DS List</a></span></td><td>The DS list to use to store the IDs of colliding instances.</td></tr><tr><td>ordered</td><td><span data-keyref="Type_Bool"><a target="_blank" href="../../../GML_Overview/Data_Types.htm">Boolean</a></span></td><td>Whether the list should be ordered by distance (<span class="inline">true</span>) or not (<span class="inline">false</span>).</td></tr></tbody></table><p>&nbsp;</p><h4>Returns:</h4><p class="code"><span data-keyref="Type_Real"><a target="_blank" href="../../../GML_Overview/Data_Types.htm">Real</a></span> (The number of instances / tile maps found to be in collision)</p><p>&nbsp;</p><h4>Example:</h4><p class="code">var _list = ds_list_create();<br>var _num = collision_rectangle_list(x - 100, y - 100, x + 100, y + 100, obj_Enemy, false, true, _list, false);<br>if (_num &gt; 0)<br>{<br>&nbsp;&nbsp;&nbsp;&nbsp;for (var i = 0; i &lt; _num; ++i;)<br>&nbsp; &nbsp; {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;instance_destroy(_list[| i]);<br>&nbsp; &nbsp; }<br>}<br>ds_list_destroy(_list);</p><p>The code above will check a rectangular area 100 pixels around the calling instance position for collisions with instances of "obj_Enemy". If there are any collisions, then the pre-created list is looped through and each instance that was in the collision is destroyed.</p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><div class="footer"><div class="buttons"><div class="clear"><div style="float:left">Back: <a href="Collisions.htm">Collisions</a></div><div style="float:right">Next: <a href="point_in_rectangle.htm">point_in_rectangle</a></div></div></div><h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2024 All Rights Reserved</span></h5></div></body></html>