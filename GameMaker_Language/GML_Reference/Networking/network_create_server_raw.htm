<!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml"><head><script type="text/javascript" src="../../../assets/import/jquery-3.6.1.min.js"></script><script type="text/javascript" src="../../../assets/import/layer/layer.js"></script><script type="text/javascript" src="../../../assets/import/pangu.min.js"></script><link rel="stylesheet" type="text/css" href="../../../assets/import/layer/layui_btn.css"><link rel="stylesheet" type="text/css" href="../../../assets/import/layer/layui_col.css"><link rel="stylesheet" type="text/css" href="../../../assets/import/layer/theme/default/layer.css"><link rel="stylesheet" type="text/css" href="../../../assets/import/main.css"><script>let str;removeHtml=function(e){return e=(e=(e=(e=e.replace(/(<([^>]+)>)/gi,"{}")).replace(/\r\n/g,"\n")).replace(/\n/g,"")).replace(/ {2,}/g," ")},retHtml=function(e){return e.match(/(<([^>]+)>)/gi)},setTranslator=function(e,t,n){let a;a=n?e.attr(n):e.html();let s=t[removeHtml(a)];if(null!=s&&s.length){t=retHtml(a);let o=0;t&&t.forEach(function(e,t){var n=s.replace("{"+o+"}",e);s=n===s?s.replace("{}",e):n,o++}),n?e.attr(n,s):e.html(s)}},noTranslationState=function(){return"true"==window.localStorage.getItem("noTranslationState")},noTranslationStateToggle=function(){window.localStorage.setItem("noTranslationState",!noTranslationState())},addNoTranslationStateButton=function(){var e=`
		
		<button style="
			float: right;
			font-size: 16px;
			padding: 4px 12px;
		"
		onclick="
		window.location.replace('gmmt://'+document.location.hash)
		"
		>打开编辑器</button>

		<button style="
			float: right;
			font-size: 16px;
			padding: 4px 12px;
		"
		onclick="
		noTranslationStateToggle();
		location.reload();
    	event.stopPropagation();
		"
		>切换翻译</button>
		`;$(".header").length?$(".header").append(e):($(".topic-header").append(e),$(".topic-header button").css("position","relative").css("top","44px"))},removeExtensionFromHash=function(e){return e.replaceAll("#t=","").replaceAll("%2F","/").replaceAll(".htm","")};let json_global,json_file={'As this creates a "raw" server, it will not accept nor use any of the built in GameMaker data headers for communication, and so you should be using the functions {}{}network_send_raw(){}{} and {}{}network_send_udp_raw(){}{} to send unformatted data to the server created.':'由于这会创建"原始"服务器，因此不会接受也不会使用任何内置GameMaker数据头进行通信，因此您应该使用函数{}{}network_send_raw(){}{}和{}{}network_send_udp_raw(){}{}将未格式化的数据发送到创建的服务器。',"Create a WebSocket using TCP. ({}{}NOTE{}: Use {}Async{} functions for connecting through WebSockets{})":"使用TCP创建网络套接字。({}{}注{}:使用{}异步{}函数通过网络套接字进行连接{})","Create a secure WebSocket using TCP.":"使用TCP创建安全的WebSocket。","Create a socket using TCP.":"使用TCP创建套接字。","Create a socket using UDP.":"使用UDP创建套接字。","Socket Type Constant":"套接字类型常量","The above code will try and create a server using TCP through port 6510. If that port is unavailable, it will then loop through the ports to find one that is.":"以上代码将尝试通过端口6510使用TCP创建服务器。如果该端口不可用，则它将循环通过这些端口查找其中一个。","The maximum number of clients that can connect at once.":"一次可以连接的最大客户端数。","The port that the server will use.":"服务器将使用的端口。","The type of server to create (see the constants listed below).":"要创建的服务器的类型(请参阅上面的常量列表)。","This function creates a new network server for your game, using one of the permitted connection protocols (see the constants listed below).":"此函数使用允许的连接协议之一为您的游戏创建一个新的网络服务器 (请参阅下面列出的常量)。","This function is used to create a new network server for your game, using one of the permitted connection protocols (see the constants listed below). You supply the server type, then give it a port to use, and finally the number of maximum connections that should be permitted at any one time to the server (note that this number is up to you, but too many connected clients will saturate the network or the device CPU won't be able to handle the processing of that number of players, so use with care). The function returns a unique {}id{} which should be used stored in a variable and used to identify the server in all further network functions, or a value of less than 0 if the connection fails.":"此函数用于使用允许的连接协议之一为游戏创建新的网络服务器(请参阅下面列出的常量)。您提供服务器类型，然后为其提供一个要使用的端口，最后是在任何时候都应该允许与服务器建立的最大连接数(请注意，这个数目由您决定，但是连接的客户端太多会使网络饱和，或者设备Cpu无法处理该数目的播放器，因此请谨慎使用)。函数返回唯一的{}id{}，该值应存储在变量中并用于在所有其他网络函数中标识服务器;如果连接失败，则返回小于0的值。","You supply the server type, then give it a port to use, and finally the number of maximum connections that should be permitted at any one time to the server (note that this number is up to you, but too many connected clients will saturate the network or the device CPU won't be able to handle the processing of that number of players, so use with care). The function returns a unique {}id{} which should be used stored in a variable and used to identify the server in all further network functions, or a value of less than 0 if the connection fails.":"您提供服务器类型，然后给它一个要使用的端口，最后是服务器在任何时间允许的最大连接数 (请注意，这个数字取决于您，但是太多连接的客户端将使服务器饱和) 网络或设备 CPU 将无法处理该数量玩家的处理，因此请谨慎使用)。该函数返回一个唯一的 {}id{}，应将其存储在变量中并用于在所有其他网络功能中识别服务器，如果连接失败，则返回小于 0 的值。","{}NOTE 1{}&nbsp;It is also possible to secure your simple&nbsp;WebSocket&nbsp;({}network_socket_ws{}) by using the&nbsp;{}wss://{}&nbsp;protocol in your URLs.":"{}注意 1{} 还可以使用 URL 中的 {}wss://{} 协议来保护简单网络套接字 ({}network_socket_ws{})。","{}NOTE 2{}&nbsp;* Secure WebSockets will not work on UWP and Xbox One when using the legacy XDK platform, however they will work on those targets when using GDK.":"{}注意 2{}* 使用传统 XDK 平台时，安全网络套接字在 UWP 和 Xbox One 上不起作用，但在使用 GDK 时，它们将在这些目标上起作用。","{}NOTE{}&nbsp;Secure WebSockets are not supported when creating a server, {}only as a client{}.":"{} 注意{} 创建服务器时不支持安全 WebSocket，{} 仅作为客户端 {}。"},get_json_global=$.ajax({url:"/global.json",type:"GET",dataType:"json",async:!1,success:function(e){json_global=e}});$(function(){if(addNoTranslationStateButton(),noTranslationState())return!1;$("div.footer a,h4,caption").each(function(){setTranslator($(this),json_global)}),$("p,h1,h2,h3,td,li,a,div.dropspotnote,figcaption").each(function(){setTranslator($(this),json_file)}),$("th,.warning,.important,.optional").each(function(){setTranslator($(this),json_global)}),$(".header").length&&(window.setInterval(function(){$("#toc-panel a:not('isTranslate')").each(function(){$(this).addClass("isTranslate"),setTranslator($(this),json_global)}),$(".GlossDefinitionText:not('isTranslate')").each(function(){$(this).addClass("isTranslate"),setTranslator($(this),json_global)})},250),console.log("成功啦!现在正在疯狂翻译菜单中!")),$(".tooltip").each(function(){setTranslator($(this),json_global,"title")})}),document.addEventListener("DOMContentLoaded",()=>{pangu.autoSpacingPage()})</script><script type="text/javascript" language="JavaScript">function reDo(){innerWidth==origWidth&&innerHeight==origHeight||location.reload()}4==parseInt(navigator.appVersion)&&"Netscape"==navigator.appName&&(origWidth=innerWidth,origHeight=innerHeight,onresize=reDo),onerror=null</script><style type="text/css">p.WebHelpNavBar{text-align:right}</style><script type="text/javascript">gCommonRootRelPath=gRootRelPath="../../..",gTopicId="8.2.2.15.0_2"</script><script type="text/javascript" src="../../../template/scripts/rh.min.js"></script><script type="text/javascript" src="../../../template/scripts/common.min.js"></script><script type="text/javascript" src="../../../template/scripts/topic.min.js"></script><script type="text/javascript" src="../../../template/scripts/topicwidgets.min.js"></script><script type="text/javascript" src="../../../whxdata/projectsettings.js"></script><link rel="stylesheet" type="text/css" href="../../../template/styles/topic.min.css"><link rel="stylesheet" type="text/css" href="../../../template/Charcoal_Grey/topicheader.css"><meta name="topic-status" content="Draft"><meta http-equiv="Content-Type" content="text/html; charset=utf-8"><title>network_create_server_raw</title><meta name="generator" content="Adobe RoboHelp 2022"><link rel="stylesheet" href="../../../assets/css/default.css" type="text/css"><script src="../../../assets/scripts/main_script.js" type="module"></script><meta name="rh-authors" content="Mark Alexander"><meta name="topic-comment" content="Reference page for network_create_server_raw"><meta name="rh-index-keywords" content="network_create_server_raw,network_socket_tcp,network_socket_udp,network_socket_ws"><meta name="search-keywords" content="network_create_server_raw,network_socket_tcp,network_socket_udp,network_socket_ws"><meta name="is_pure" content="true"><meta name="brsnext" value="GameMaker_Language/GML_Reference/Networking/network_create_socket.htm"><meta name="brsprev" value="GameMaker_Language/GML_Reference/Networking/network_create_server.htm"></head><body><div class="topic-header rh-hide" id="rh-topic-header"><div class="logo"></div><div class="nav"><div class="title" title="network_create_server_raw"><span>network_create_server_raw</span></div><div class="gotohome" title="Click here to see this page in full context"><a href="#" onclick="rh._.goToFullLayout()">Click here to see this page in full context</a></div></div></div><div class="topic-header-shadow rh-hide" id="rh-topic-header-shadow"></div><h1>network_create_server_raw</h1><p>This function creates a new network server for your game, using one of the permitted connection protocols (see the constants listed below).</p><p>You supply the server type, then give it a port to use, and finally the number of maximum connections that should be permitted at any one time to the server (note that this number is up to you, but too many connected clients will saturate the network or the device CPU won't be able to handle the processing of that number of players, so use with care). The function returns a unique <i>id</i> which should be used stored in a variable and used to identify the server in all further network functions, or a value of less than 0 if the connection fails.</p><div data-conref="../../../assets/snippets/network_socket_types_server.hts"><table><colgroup><col><col></colgroup><tbody><tr><th colspan="2"><span data-keyref="Type_Constant_Network_Socket_Type"><a target="_blank" href="network_create_socket.htm">Socket Type Constant</a></span></th></tr><tr><th>Constant</th><th>Description</th></tr><tr><td><span class="inline">network_socket_tcp</span></td><td>Create a socket using TCP.</td></tr><tr><td><span class="inline">network_socket_udp</span></td><td>Create a socket using UDP.</td></tr><tr><td><span class="inline">network_socket_ws</span></td><td>Create a WebSocket using TCP. (<em><strong>NOTE</strong>: Use <a href="network_connect_raw_async.htm">Async</a> functions for connecting through WebSockets</em>)</td></tr></tbody></table><p class="note"><span class="note">NOTE</span>&nbsp;Secure WebSockets are not supported when creating a server, <a href="network_create_socket.htm">only as a client</a>.</p></div><p>As this creates a "raw" server, it will not accept nor use any of the built in GameMaker data headers for communication, and so you should be using the functions <a href="network_send_raw.htm"><span class="inline">network_send_raw()</span></a> and <a href="network_send_udp_raw.htm"><span class="inline">network_send_udp_raw()</span></a> to send unformatted data to the server created.</p><p>&nbsp;</p><h4>Syntax:</h4><p class="code">network_create_server_raw(type, port, max_client);</p><table><tbody><tr><th>Argument</th><th>Type</th><th>Description</th></tr><tr><td>type</td><td><span data-keyref="Type_Constant_Network_Socket_Type"><a target="_blank" href="network_create_socket.htm">Socket Type Constant</a></span></td><td>The type of server to create (see the constants listed below).</td></tr><tr><td>port</td><td><span data-keyref="Type_Real"><a target="_blank" href="../../GML_Overview/Data_Types.htm">Real</a></span></td><td>The port that the server will use.</td></tr><tr><td>max_client</td><td><span data-keyref="Type_Real"><a target="_blank" href="../../GML_Overview/Data_Types.htm">Real</a></span></td><td>The maximum number of clients that can connect at once.</td></tr></tbody></table><p>&nbsp;</p><h4>Returns:</h4><p class="code"><span data-keyref="Type_ID_Network_Socket"><a target="_blank" href="network_create_socket.htm">Network Socket ID</a></span></p><p>&nbsp;</p><h4>Example:</h4><p class="code">var port = 6510;<br>server = network_create_server_raw(network_socket_tcp, port, 32);<br>while (server &lt; 0 &amp;&amp; port &lt; 65535)<br>{<br>&nbsp;&nbsp;&nbsp;&nbsp;port++<br>&nbsp;&nbsp;&nbsp;&nbsp;server = network_create_server(network_socket_tcp, port, 32);<br>}</p><p>The above code will try and create a server using TCP through port 6510. If that port is unavailable, it will then loop through the ports to find one that is.</p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><div class="footer"><div class="buttons"><div class="clear"><div style="float:left">Back: <a href="Networking.htm">Networking</a></div><div style="float:right">Next: <a href="network_create_socket.htm">network_create_socket</a></div></div></div><h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2024 All Rights Reserved</span></h5></div></body></html>