<!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml"><head><script type="text/javascript" src="../../../assets/import/jquery-3.6.1.min.js"></script><script type="text/javascript" src="../../../assets/import/layer/layer.js"></script><script type="text/javascript" src="../../../assets/import/pangu.min.js"></script><link rel="stylesheet" type="text/css" href="../../../assets/import/layer/layui_btn.css"><link rel="stylesheet" type="text/css" href="../../../assets/import/layer/layui_col.css"><link rel="stylesheet" type="text/css" href="../../../assets/import/layer/theme/default/layer.css"><link rel="stylesheet" type="text/css" href="../../../assets/import/main.css"><script>let str;removeHtml=function(e){return e=(e=(e=(e=e.replace(/(<([^>]+)>)/gi,"{}")).replace(/\r\n/g,"\n")).replace(/\n/g,"")).replace(/ {2,}/g," ")},retHtml=function(e){return e.match(/(<([^>]+)>)/gi)},setTranslator=function(e,t,n){let o;o=n?e.attr(n):e.html();let s=t[removeHtml(o)];if(null!=s&&s.length){t=retHtml(o);let a=0;t&&t.forEach(function(e,t){var n=s.replace("{"+a+"}",e);s=n===s?s.replace("{}",e):n,a++}),n?e.attr(n,s):e.html(s)}},noTranslationState=function(){return"true"==window.localStorage.getItem("noTranslationState")},noTranslationStateToggle=function(){window.localStorage.setItem("noTranslationState",!noTranslationState())},addNoTranslationStateButton=function(){var e=`
		
		<button style="
			float: right;
			font-size: 16px;
			padding: 4px 12px;
		"
		onclick="
		window.location.replace('gmmt://'+document.location.hash)
		"
		>打开编辑器</button>

		<button style="
			float: right;
			font-size: 16px;
			padding: 4px 12px;
		"
		onclick="
		noTranslationStateToggle();
		location.reload();
    	event.stopPropagation();
		"
		>切换翻译</button>
		`;$(".header").length?$(".header").append(e):($(".topic-header").append(e),$(".topic-header button").css("position","relative").css("top","44px"))},removeExtensionFromHash=function(e){return e.replaceAll("#t=","").replaceAll("%2F","/").replaceAll(".htm","")};let json_global,json_file={"Network Send Type Constant":"网络发送类型常量","Options Argument":"选项参数","Send a binary message":"发送二进制消息","Send a text message":"发送文本消息","The APIs for some platforms only accept text messages when using WebSockets (e.g. Twitch), so the {}network_send_text{} constant can be used in such cases. If this argument is not specified, binary data is sent by default.":"某些平台的API在使用WebSockets(例如Twitch)时仅接受文本消息，因此{}network_send_text{}常量可用于此类情况。如果未指定此参数，则默认情况下会发送二进制数据。",'The above information loads a previously saved buffer data into memory and returns the buffer id to be stored in the variable "buff". This complete buffer is then send as a raw data packet over the network using the socket identified by the variable "sock".':'上述信息将先前保存的缓冲区数据加载到内存中，并返回要存储在变量"buffe"缓冲区中。然后，使用由变量"sock"标识的套接字，将该完整缓冲区作为原生数据包通过网络发送。',"The above information loads previously saved data into a buffer in memory and stores the buffer in the variable {}buff{}. This complete buffer is then send as a raw data packet over the network using the socket identified by the variable {}sock{}.":"上述信息将之前保存的数据加载到内存中的缓冲区中，并将该缓冲区存储在变量 {}buff{} 中。然后，使用变量 {}sock{} 标识的套接字将这个完整的缓冲区作为原始数据包通过网络发送。","The buffer to get the data from.":"从中获取数据的缓冲区。","The data sent is not formatted by {}GameMaker{} in any way and the receiving devices will get the data as a stream which means you will have to handle it yourself. See:&nbsp;{}Packet Separation{}":"发送的数据不会被 {}GameMaker{} 以任何方式格式化，接收设备将以流的形式获取数据，这意味着您必须自己处理它。请参阅：{} 数据包分离 {}","The function takes the {}{}Network Socket ID{}{}&nbsp;to connect through and then you must supply the&nbsp;{}{}Buffer{}{}&nbsp;which contains the data to be sent (for more information on buffers see {}Reference - Buffers{}) and finally the size (in bytes) of the data packet.":"该函数采用 {}{} 网络套接字 ID{}{} 进行连接，然后您必须提供包含要发送的数据的 {}{} 缓冲区 {}{}( 有关缓冲区的更多信息，请参阅 {} 参考- 缓冲区 {})，最后是数据包的大小 (以字节为单位)。","The function will return the number of bytes of data sent, or a number less than 0 if the send has failed.":"该函数将返回已发送数据的字节数，如果发送失败，则返回小于 0 的数字。","The id of the buffer to get the data from.":"缓冲区的ID。","The id of the socket to use.":"要使用的套接字的ID。","The last argument is optional, and is only used with WebSockets. It allows you to choose between sending binary or text data. Either of these constants can be specified in this argument:":"最后一个参数是可选的，仅与WebSockets一起使用。它允许您选择发送二进制数据还是文本数据。可以在此参数中指定以下任一常量：","The size (in bytes) of the data.":"数据的大小(以字节表示)。",'This function sends a "raw" data packet through the network.':'该函数通过网络发送 " 原始 " 数据包。','With this function you can send a "raw" data packet through the network. The function takes the {}socket id{} to connect through and then you must supply the {}buffer id{} which contains the data to be sent (for more information on buffers see {}Reference - Buffers{}) and finally the size (in bytes) of the data packet. The data sent is not formatted by {}GameMaker{} in any way and the receiving devices will get the data as a stream which means you will have to handle it yourself. The function will return the number of bytes of data sent, or a number less than 0 if the send has failed.':'通过此函数，您可以通过网络发送"原生"数据包。该函数使用{}套接字ID{}进行连接，然后必须提供包含要发送的数据的{}缓冲区ID{}(有关缓冲区的详细信息，请参阅{}参考-缓冲区{})，最后是数据包的大小(以字节为单位)。{}GameMaker{}不会以任何方式对发送的数据进行格式化，接收设备将以流的形式获取数据，这意味着您必须自行处理这些数据。该函数将返回发送的数据的字节数，如果发送失败，则返回小于0的数字。',"{}OPTIONAL{} Used for WebSockets to choose between text and binary data; if not specified, binary data is sent.":"{}可选{}用于WebSockets在文本数据和二进制数据之间进行选择;如果未指定，则发送二进制数据。","{}{}NOTE{}{}&nbsp;This function uses a TCP-like socket (i.e. {}network_socket_tcp{}). It may work with other socket types as well, but this isn't guaranteed.":"{}{} 注意{}{} 此函数使用类似 TCP 的套接字 (即 {}network_socket_tcp{})。它也可能适用于其他套接字类型，但这不能保证。","{}{}OPTIONAL{}{}&nbsp;Used for WebSockets to choose between text and binary data; if not specified, binary data is sent.":"{}{} 可选{}{} 用于 WebSocket 在文本和二进制数据之间进行选择 ; 如果未指定，则发送二进制数据。","{}{}WARNING{}{}&nbsp;{}You must not mix the use of regular and raw functions in your game, as doing so will cause issues. This means for a connection made with&nbsp;{}{}network_connect{}{}, you must use&nbsp;{}{}network_send_packet{}{}, and for&nbsp;{}{}network_connect_raw{}{}, use&nbsp;{}{}network_send_raw{}{}.{}":"{}{} 警告{}{}{} 您不得在游戏中混合使用常规函数和原始函数，因为这样做会导致问题。这意味着，对于使用 {}{}network_connect{}{} 建立的连接，您必须使用 {}{}network_send_packet{}{}，而对于 {}{}network_connect_raw{}{}，则必须使用 {}{}network_send_raw{}{}.{}"},get_json_global=$.ajax({url:"/global.json",type:"GET",dataType:"json",async:!1,success:function(e){json_global=e}});$(function(){if(addNoTranslationStateButton(),noTranslationState())return!1;$("div.footer a,h4,caption").each(function(){setTranslator($(this),json_global)}),$("p,h1,h2,h3,td,li,a,div.dropspotnote,figcaption").each(function(){setTranslator($(this),json_file)}),$("th,.warning,.important,.optional").each(function(){setTranslator($(this),json_global)}),$(".header").length&&(window.setInterval(function(){$("#toc-panel a:not('isTranslate')").each(function(){$(this).addClass("isTranslate"),setTranslator($(this),json_global)}),$(".GlossDefinitionText:not('isTranslate')").each(function(){$(this).addClass("isTranslate"),setTranslator($(this),json_global)})},250),console.log("成功啦!现在正在疯狂翻译菜单中!")),$(".tooltip").each(function(){setTranslator($(this),json_global,"title")})}),document.addEventListener("DOMContentLoaded",()=>{pangu.autoSpacingPage()})</script><script type="text/javascript" language="JavaScript">function reDo(){innerWidth==origWidth&&innerHeight==origHeight||location.reload()}4==parseInt(navigator.appVersion)&&"Netscape"==navigator.appName&&(origWidth=innerWidth,origHeight=innerHeight,onresize=reDo),onerror=null</script><style type="text/css">p.WebHelpNavBar{text-align:right}</style><script type="text/javascript">gCommonRootRelPath=gRootRelPath="../../..",gTopicId="8.2.2.15.0_14"</script><script type="text/javascript" src="../../../template/scripts/rh.min.js"></script><script type="text/javascript" src="../../../template/scripts/common.min.js"></script><script type="text/javascript" src="../../../template/scripts/topic.min.js"></script><script type="text/javascript" src="../../../template/scripts/topicwidgets.min.js"></script><script type="text/javascript" src="../../../whxdata/projectsettings.js"></script><link rel="stylesheet" type="text/css" href="../../../template/styles/topic.min.css"><link rel="stylesheet" type="text/css" href="../../../template/Charcoal_Grey/topicheader.css"><meta name="topic-status" content="Draft"><meta http-equiv="Content-Type" content="text/html; charset=utf-8"><title>network_send_raw</title><meta name="generator" content="Adobe RoboHelp 2022"><link rel="stylesheet" href="../../../assets/css/default.css" type="text/css"><script src="../../../assets/scripts/main_script.js" type="module"></script><meta name="rh-authors" content="Mark Alexander"><meta name="topic-comment" content="Reference page for network_send_raw"><meta name="rh-index-keywords" content="network_send_raw,network_send_binary,network_send_text"><meta name="search-keywords" content="network_send_raw,text WebSockets,network_send_binary,network_send_text"><meta name="brsnext" value="GameMaker_Language/GML_Reference/Networking/network_send_udp.htm"><meta name="brsprev" value="GameMaker_Language/GML_Reference/Networking/network_send_packet.htm"></head><body><div class="topic-header rh-hide" id="rh-topic-header"><div class="logo"></div><div class="nav"><div class="title" title="network_send_raw"><span>network_send_raw</span></div><div class="gotohome" title="Click here to see this page in full context"><a href="#" onclick="rh._.goToFullLayout()">Click here to see this page in full context</a></div></div></div><div class="topic-header-shadow rh-hide" id="rh-topic-header-shadow"></div><h1><span data-field="title" data-format="default">network_send_raw</span></h1><p>This function sends a "raw" data packet through the network.</p><p>The function takes the <span data-keyref="Type_ID_Network_Socket"><a target="_blank" href="network_create_socket.htm">Network Socket ID</a></span>&nbsp;to connect through and then you must supply the&nbsp;<span data-keyref="Type_ID_Buffer"><a target="_blank" href="../Buffers/buffer_create.htm">Buffer</a></span>&nbsp;which contains the data to be sent (for more information on buffers see <a href="../Buffers/Buffers.htm">Reference - Buffers</a>) and finally the size (in bytes) of the data packet.</p><p>The data sent is not formatted by <span data-keyref="GameMaker Name">GameMaker</span> in any way and the receiving devices will get the data as a stream which means you will have to handle it yourself. See:&nbsp;<a href="Networking.htm#h">Packet Separation</a></p><p>The function will return the number of bytes of data sent, or a number less than 0 if the send has failed.</p><p class="note"><span data-conref="../../../assets/snippets/Tag_warning.hts"><span class="warning">WARNING</span></span>&nbsp;<span data-conref="../../../assets/snippets/Networking_dont_mix_raw_reg.hts">You must not mix the use of regular and raw functions in your game, as doing so will cause issues. This means for a connection made with&nbsp;<span class="inline3_func"><a href="network_connect.htm" title="Cross-reference [network_connect.htm]" data-tcx-title="Cross-reference [network_connect.htm]">network_connect</a></span>, you must use&nbsp;<span class="inline3_func"><a href="network_send_packet.htm" title="Cross-reference [network_send_packet.htm]" data-tcx-title="Cross-reference [network_send_packet.htm]">network_send_packet</a></span>, and for&nbsp;<span class="inline3_func"><a href="network_connect_raw.htm" title="Cross-reference [network_connect_raw.htm]" data-tcx-title="Cross-reference [network_connect_raw.htm]">network_connect_raw</a></span>, use&nbsp;<span class="inline3_func"><a href="network_send_raw.htm" title="Cross-reference [network_send_raw.htm]" data-tcx-title="Cross-reference [network_send_raw.htm]">network_send_raw</a></span>.</span></p><div data-conref="../../../assets/snippets/Note_Networking_TCP_like.hts"><p class="note"><span data-conref="../../../assets/snippets/Tag_note.hts"><span class="note">NOTE</span></span>&nbsp;This function uses a TCP-like socket (i.e. <span class="inline2">network_socket_tcp</span>). It may work with other socket types as well, but this isn't guaranteed.</p></div><h2>Options Argument</h2><p>The last argument is optional, and is only used with WebSockets. It allows you to choose between sending binary or text data. Either of these constants can be specified in this argument:</p><table><colgroup><col style="width:519px"><col style="width:743px"></colgroup><tbody><tr><th colspan="2" style=""><span data-keyref="Type_Constant_Network_Send_Type"><a target="_blank" href="network_send_raw.htm">Network Send Type Constant</a></span></th></tr><tr><th style="">Constant</th><th style="">Description</th></tr><tr><td style=""><span class="inline">network_send_binary</span></td><td style="">Send a binary message</td></tr><tr><td style=""><span class="inline">network_send_text</span></td><td style="">Send a text message</td></tr></tbody></table><p>The APIs for some platforms only accept text messages when using WebSockets (e.g. Twitch), so the <span class="inline2">network_send_text</span> constant can be used in such cases. If this argument is not specified, binary data is sent by default.</p><p>&nbsp;</p><h4>Syntax:</h4><p class="code"><span data-field="title" data-format="default">network_send_raw</span>(socket, bufferid, size, [options]);</p><table><tbody><tr><th>Argument</th><th>Type</th><th>Description</th></tr><tr><td>socket</td><td><span data-keyref="Type_ID_Network_Socket"><a target="_blank" href="network_create_socket.htm">Network Socket ID</a></span></td><td>The id of the socket to use.</td></tr><tr><td>bufferid</td><td><span data-keyref="Type_ID_Buffer"><a target="_blank" href="../Buffers/buffer_create.htm">Buffer</a></span></td><td>The buffer to get the data from.</td></tr><tr><td>size</td><td><span data-keyref="Type_Real"><a target="_blank" href="../../GML_Overview/Data_Types.htm">Real</a></span></td><td>The size (in bytes) of the data.</td></tr><tr><td>options</td><td><span data-keyref="Type_Constant_Network_Send_Type"><a target="_blank" href="network_send_raw.htm">Network Send Type Constant</a></span></td><td><span data-conref="../../../assets/snippets/Tag_optional.hts"><span class="optional">OPTIONAL</span></span>&nbsp;Used for WebSockets to choose between text and binary data; if not specified, binary data is sent.</td></tr></tbody></table><p>&nbsp;</p><h4>Returns:</h4><p class="code"><span data-keyref="Type_Real"><a target="_blank" href="../../GML_Overview/Data_Types.htm">Real</a></span></p><p>&nbsp;</p><h4>Example:</h4><p class="code">buff = buffer_load("player_save.dat");<br>network_send_raw(sock, buff, buffer_get_size(buff));</p><p>The above information loads previously saved data into a buffer in memory and stores the buffer in the variable <span class="inline2">buff</span>. This complete buffer is then send as a raw data packet over the network using the socket identified by the variable <span class="inline2">sock</span>.</p><p>&nbsp;</p><p>&nbsp;</p><div class="footer"><div class="buttons"><div class="clear"><div style="float:left">Back: <a href="Networking.htm">Networking</a></div><div style="float:right">Next: <a href="network_send_udp.htm">network_send_udp</a></div></div></div><h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2024 All Rights Reserved</span></h5></div></body></html>