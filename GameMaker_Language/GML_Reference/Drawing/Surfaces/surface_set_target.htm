<!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml"><head><script type="text/javascript" src="../../../../assets/import/jquery-3.6.1.min.js"></script><script type="text/javascript" src="../../../../assets/import/layer/layer.js"></script><script type="text/javascript" src="../../../../assets/import/pangu.min.js"></script><link rel="stylesheet" type="text/css" href="../../../../assets/import/layer/layui_btn.css"><link rel="stylesheet" type="text/css" href="../../../../assets/import/layer/layui_col.css"><link rel="stylesheet" type="text/css" href="../../../../assets/import/layer/theme/default/layer.css"><link rel="stylesheet" type="text/css" href="../../../../assets/import/main.css"><script>let str;removeHtml=function(e){return e=(e=(e=(e=e.replace(/(<([^>]+)>)/gi,"{}")).replace(/\r\n/g,"\n")).replace(/\n/g,"")).replace(/ {2,}/g," ")},retHtml=function(e){return e.match(/(<([^>]+)>)/gi)},setTranslator=function(e,t,a){let o;o=a?e.attr(a):e.html();let s=t[removeHtml(o)];if(null!=s&&s.length){t=retHtml(o);let n=0;t&&t.forEach(function(e,t){var a=s.replace("{"+n+"}",e);s=a===s?s.replace("{}",e):a,n++}),a?e.attr(a,s):e.html(s)}},noTranslationState=function(){return"true"==window.localStorage.getItem("noTranslationState")},noTranslationStateToggle=function(){window.localStorage.setItem("noTranslationState",!noTranslationState())},addNoTranslationStateButton=function(){var e=`
		
		<button style="
			float: right;
			font-size: 16px;
			padding: 4px 12px;
		"
		onclick="
		window.location.replace('gmmt://'+document.location.hash)
		"
		>打开编辑器</button>

		<button style="
			float: right;
			font-size: 16px;
			padding: 4px 12px;
		"
		onclick="
		noTranslationStateToggle();
		location.reload();
    	event.stopPropagation();
		"
		>切换翻译</button>
		`;$(".header").length?$(".header").append(e):($(".topic-header").append(e),$(".topic-header button").css("position","relative").css("top","44px"))},removeExtensionFromHash=function(e){return e.replaceAll("#t=","").replaceAll("%2F","/").replaceAll(".htm","")};let json_global,json_file={"Instead, you must reset the target for each of the surfaces that you set, much like you must use opening and closing brackets {} for code blocks. So the above should be written as either this:":"相反，必须为所设置的每个表面重置目标，就像必须对代码块使用左括号和右括号{}一样。因此，上面的内容应该写成以下两种情况：","Instead, you must reset the target for each of the surfaces that you set, much like you must use opening and closing brackets {} for code blocks. So the above should be written either like this:":"相反，您必须为您设置的每个表面重置目标，就像您必须对代码块使用左括号和右括号 { } 一样。所以上面的内容应该这样写：","One thing that should be noted is that surfaces are {}stacked{} so you cannot jump from target to target and then reset to the normal draw target at the end, but rather you must open and close rendering targets. For example, this will {}not{} work correctly:":"需要注意的一点是，表面是{}层叠的{}，因此不能从一个目标跳到另一个目标，然后在结束时重置为法线绘制目标，而是必须打开并关闭渲染目标。例如，这将导致{}无法正常工作：","Please note that if you do not call {}{}surface_reset_target{}{}&nbsp;after you have finished, nothing will be drawn on the screen as all further drawing (even in other instances) will be done on the surface. You should also realise that nothing will be seen if the surface itself is not drawn on the screen in the draw event of an instance. You can check the return value of this function too as a debug tool to check whether the surface target was set or not, with a return value of 0 being a failure to set the target and any other positive value being a success.":"请注意，如果您完成后不调用 {}{}surface_reset_target{}{}，则屏幕上不会绘制任何内容，因为所有进一步的绘制 (即使在其他情况下) 都将在表面上完成。您还应该意识到，如果在实例的绘制事件中没有在屏幕上绘制表面本身，则什么也看不到。您也可以检查此函数的返回值作为调试工具来检查表面目标是否设置，返回值 0 表示设置目标失败，任何其他正值表示成功。","The ID of the surface to set as the drawing target.":"要设置为绘制目标的表面的ID。","The above code checks to see which view is currently being drawn, and if it is view[0] it sets the draw target to a surface and draws all instances of the object {}obj_Effect{}&nbsp;before resetting the draw target again. If the view is not view[0] the surface is drawn to the screen.":"上面的代码检查当前正在绘制哪个视图，如果是 view[0]，则会将绘制目标设置为表面并绘制对象 {}obj_Effect{} 的所有实例，然后再次重置绘制目标。如果视图不是 view[0]，则表面将绘制到屏幕上。",'The above code will check to see which view is currently being drawn, and if it is view[0] it sets the draw target to a surface and draws all instances of the object "obj_Effect" before resetting the draw target again. If the view is not view[0] the surface is drawn to the screen.':'上述代码将检查当前正在绘制的视图，如果是view[ 0 ]，则会将绘制目标设置为表面，并在再次重置绘制目标之前绘制对象"obj_Effect"的所有实例。如果视图不是视图[ 0 ]，则将表面绘制到屏幕上。',"The surface to set as the drawing target.":"设置为绘图目标的表面。","With this function you set all further drawing to the target surface rather than the screen and in this way you can tell {}GameMaker{} to only draw specific things to the specified surface.":"通过此函数，您可以将所有进一步绘制设置到目标表面而不是屏幕，这样您就可以告诉 {}GameMaker{} 仅将特定内容绘制到指定表面。","With this function you set all further drawing to the target surface rather than the screen and in this way you can tell {}GameMaker{} to only draw specific things to the specified surface. Please note that if you do not call {}{}surface_reset_target(){}{} after you have finished, nothing will be drawn on the screen as all further drawing (even in other instances) will be done on the surface. You should also realise that nothing will be seen if the surface itself is not drawn on the screen in the draw event of an instance. You can check the return value of this function too as a debug tool to check whether the surface target was set or not, with a return value of 0 being a failure to set the target and any other positive value being a success.":"使用此函数，您可以将所有进一步绘制设置为目标表面而不是屏幕，并通过这种方式告诉{}GameMaker{}仅将特定内容绘制到指定表面。请注意，如果完成后不调用{}{}surface_reset_target(){}{}，屏幕上将不会绘制任何内容，因为所有进一步绘制(即使在其他实例中)都将在表面上完成。您还应该意识到，如果在实例的绘制事件中没有在屏幕上绘制表面本身，则不会看到任何内容。您也可以作为调试工具检查此函数的返回值，以检查是否设置了表面目标，返回值0表示设置目标失败，其他任何正值表示成功。","or like this:":"或者像这样：","{}NOTE{}: When working with surfaces there is the possibility that they can cease to exist at any time due to them being stored in texture memory. You should {}ALWAYS{} check that a surface exists using {}{}{}surface_exists(){}{}{} before referencing them directly.":"{}注意{}：使用表面时，由于表面存储在纹理内存中，因此表面可能随时停止存在。在直接引用表面之前，应该{}始终{}使用{}{}{}surface_exists(){}{}{}检查表面是否存在。","{}{}Boolean{}{}&nbsp;Whether the render target was set successfully":"{}{}Boolean{}{} 渲染目标是否设置成功","{}{}NOTE{}{}&nbsp;If you have not previously set a render target with the function {}{}surface_set_target{}{},&nbsp;using this function will silently (i.e.&nbsp;without any error messages) end all further code execution for the event.":"{}{} 注意{}{} 如果您之前没有使用函数 {}{}surface_set_target{}{} 设置渲染目标，则使用此函数将静默 (即没有任何错误消息) 结束该函数的所有进一步代码执行事件。"},get_json_global=$.ajax({url:"/global.json",type:"GET",dataType:"json",async:!1,success:function(e){json_global=e}});$(function(){if(addNoTranslationStateButton(),noTranslationState())return!1;$("div.footer a,h4,caption").each(function(){setTranslator($(this),json_global)}),$("p,h1,h2,h3,td,li,a,div.dropspotnote,figcaption").each(function(){setTranslator($(this),json_file)}),$("th,.warning,.important,.optional").each(function(){setTranslator($(this),json_global)}),$(".header").length&&(window.setInterval(function(){$("#toc-panel a:not('isTranslate')").each(function(){$(this).addClass("isTranslate"),setTranslator($(this),json_global)}),$(".GlossDefinitionText:not('isTranslate')").each(function(){$(this).addClass("isTranslate"),setTranslator($(this),json_global)})},250),console.log("成功啦!现在正在疯狂翻译菜单中!")),$(".tooltip").each(function(){setTranslator($(this),json_global,"title")})}),document.addEventListener("DOMContentLoaded",()=>{pangu.autoSpacingPage()})</script><script type="text/javascript" language="JavaScript">function reDo(){innerWidth==origWidth&&innerHeight==origHeight||location.reload()}4==parseInt(navigator.appVersion)&&"Netscape"==navigator.appName&&(origWidth=innerWidth,origHeight=innerHeight,onresize=reDo),onerror=null</script><style type="text/css">p.WebHelpNavBar{text-align:right}</style><script type="text/javascript">gCommonRootRelPath=gRootRelPath="../../../..",gTopicId="8.2.2.6.8.0_5"</script><script type="text/javascript" src="../../../../template/scripts/rh.min.js"></script><script type="text/javascript" src="../../../../template/scripts/common.min.js"></script><script type="text/javascript" src="../../../../template/scripts/topic.min.js"></script><script type="text/javascript" src="../../../../template/scripts/topicwidgets.min.js"></script><script type="text/javascript" src="../../../../whxdata/projectsettings.js"></script><link rel="stylesheet" type="text/css" href="../../../../template/styles/topic.min.css"><link rel="stylesheet" type="text/css" href="../../../../template/Charcoal_Grey/topicheader.css"><meta name="topic-status" content="Draft"><meta http-equiv="Content-Type" content="text/html; charset=utf-8"><title>surface_set_target</title><meta name="generator" content="Adobe RoboHelp 2022"><link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css"><script src="../../../../assets/scripts/main_script.js" type="module">//<![CDATA[
    <
    meta name = "rh-authors"
    content = "Mark Alexander" / >
      <
      meta name = "topic-comment"
    content = "Reference for surface_set_target" / >
      <
      meta name = "rh-index-keywords"
    content = "surface_set_target" / >
      <
      meta name = "search-keywords"
    content = "surface_set_target" / >
    //]]></script><meta name="brsnext" value="GameMaker_Language/GML_Reference/Drawing/Surfaces/surface_set_target_ext.htm"><meta name="brsprev" value="GameMaker_Language/GML_Reference/Drawing/Surfaces/surface_resize.htm"></head><body><div class="topic-header rh-hide" id="rh-topic-header"><div class="logo"></div><div class="nav"><div class="title" title="surface_set_target"><span>surface_set_target</span></div><div class="gotohome" title="Click here to see this page in full context"><a href="#" onclick="rh._.goToFullLayout()">Click here to see this page in full context</a></div></div></div><div class="topic-header-shadow rh-hide" id="rh-topic-header-shadow"></div><h1 id="h"><span data-field="title" data-format="default">surface_set_target</span></h1><p>With this function you set all further drawing to the target surface rather than the screen and in this way you can tell <span data-keyref="GameMaker Name">GameMaker</span> to only draw specific things to the specified surface.</p><p>Please note that if you do not call <span class="inline3_func"><a href="surface_reset_target.htm#h">surface_reset_target</a></span>&nbsp;after you have finished, nothing will be drawn on the screen as all further drawing (even in other instances) will be done on the surface. You should also realise that nothing will be seen if the surface itself is not drawn on the screen in the draw event of an instance. You can check the return value of this function too as a debug tool to check whether the surface target was set or not, with a return value of 0 being a failure to set the target and any other positive value being a success.</p><p>One thing that should be noted is that surfaces are <i>stacked</i> so you cannot jump from target to target and then reset to the normal draw target at the end, but rather you must open and close rendering targets. For example, this will <b>not</b> work correctly:</p><p class="code">surface_set_target(surf1);<br>draw_text(32, 32, "surface1");<br>surface_set_target(surf2);<br>draw_text(32, 64, "surface2");<br>surface_reset_target();</p><p>Instead, you must reset the target for each of the surfaces that you set, much like you must use opening and closing brackets {} for code blocks. So the above should be written either like this:</p><p class="code">surface_set_target(surf1);<br>draw_text(32, 32, "surface1");<br>surface_reset_target();<br>surface_set_target(surf2);<br>draw_text(32, 64, "surface2");<br>surface_reset_target();</p><p>or like this:</p><p class="code">surface_set_target(surf1);<br>draw_text(32, 32, "surface1");<br>surface_set_target(surf2);<br>draw_text(32, 64, "surface2");<br>surface_reset_target();<br>surface_reset_target();</p><div data-conref="../../../../assets/snippets/Note_Surface_Function_Silently_Fails.hts"><p class="note"><span data-conref="../../../../assets/snippets/Tag_note.hts"><span class="note">NOTE</span></span>&nbsp;If you have not previously set a render target with the function <span class="inline3_func"><a href="#h">surface_set_target</a></span>,&nbsp;using this function will silently (i.e.&nbsp;without any error messages) end all further code execution for the event.</p></div><p>&nbsp;</p><h4>Syntax:</h4><p class="code"><span data-field="title" data-format="default">surface_set_target</span>(surface_id);</p><table><tbody><tr><th>Argument</th><th>Type</th><th>Description</th></tr><tr><td>surface_id</td><td><span data-keyref="Type_ID_Surface"><a target="_blank" href="surface_create.htm">Surface</a></span></td><td>The surface to set as the drawing target.</td></tr></tbody></table><p>&nbsp;</p><h4>Returns:</h4><p class="code"><span data-keyref="Type_Bool"><a target="_blank" href="../../../GML_Overview/Data_Types.htm">Boolean</a></span>&nbsp;Whether the render target was set successfully</p><p>&nbsp;</p><h4>Example:</h4><p class="code">if (view_current == 0)<br>{<br>&nbsp;&nbsp;&nbsp;&nbsp;surface_set_target(surf);<br>&nbsp;&nbsp;&nbsp;&nbsp;with (obj_Effect)<br>&nbsp; &nbsp; {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;draw_self();<br>&nbsp; &nbsp; }<br>&nbsp;&nbsp;&nbsp;&nbsp;surface_reset_target();<br>}<br>else<br>{<br>&nbsp;&nbsp;&nbsp;&nbsp;draw_surface(surf, 0, 0);<br>}</p><p>The above code checks to see which view is currently being drawn, and if it is view[0] it sets the draw target to a surface and draws all instances of the object <span class="inline2">obj_Effect</span>&nbsp;before resetting the draw target again. If the view is not view[0] the surface is drawn to the screen.</p><p>&nbsp;</p><p>&nbsp;</p><div class="footer"><div class="buttons"><div class="clear"><div style="float:left">Back: <a href="Surfaces.htm">Surfaces</a></div><div style="float:right">Next:&nbsp;<a href="surface_set_target_ext.htm">surface_set_target_ext</a></div></div></div><h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2024 All Rights Reserved</span></h5></div></body></html>