<!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml"><head><script type="text/javascript" src="../../../../assets/import/jquery-3.6.1.min.js"></script><script type="text/javascript" src="../../../../assets/import/layer/layer.js"></script><script type="text/javascript" src="../../../../assets/import/pangu.min.js"></script><link rel="stylesheet" type="text/css" href="../../../../assets/import/layer/layui_btn.css"><link rel="stylesheet" type="text/css" href="../../../../assets/import/layer/layui_col.css"><link rel="stylesheet" type="text/css" href="../../../../assets/import/layer/theme/default/layer.css"><link rel="stylesheet" type="text/css" href="../../../../assets/import/main.css"><script>let str;removeHtml=function(t){return t=(t=(t=(t=t.replace(/(<([^>]+)>)/gi,"{}")).replace(/\r\n/g,"\n")).replace(/\n/g,"")).replace(/ {2,}/g," ")},retHtml=function(t){return t.match(/(<([^>]+)>)/gi)},setTranslator=function(t,e,a){let n;n=a?t.attr(a):t.html();let r=e[removeHtml(n)];if(null!=r&&r.length){e=retHtml(n);let o=0;e&&e.forEach(function(t,e){var a=r.replace("{"+o+"}",t);r=a===r?r.replace("{}",t):a,o++}),a?t.attr(a,r):t.html(r)}},noTranslationState=function(){return"true"==window.localStorage.getItem("noTranslationState")},noTranslationStateToggle=function(){window.localStorage.setItem("noTranslationState",!noTranslationState())},addNoTranslationStateButton=function(){var t=`
		
		<button style="
			float: right;
			font-size: 16px;
			padding: 4px 12px;
		"
		onclick="
		window.location.replace('gmmt://'+document.location.hash)
		"
		>打开编辑器</button>

		<button style="
			float: right;
			font-size: 16px;
			padding: 4px 12px;
		"
		onclick="
		noTranslationStateToggle();
		location.reload();
    	event.stopPropagation();
		"
		>切换翻译</button>
		`;$(".header").length?$(".header").append(t):($(".topic-header").append(t),$(".topic-header button").css("position","relative").css("top","44px"))},removeExtensionFromHash=function(t){return t.replaceAll("#t=","").replaceAll("%2F","/").replaceAll(".htm","")};let json_global,json_file={'The above code uses the percentage value that you get from the variables "hp" and "hp_max" to draw a standard red/green healthbar.':'上述代码使用从变量"hp"和"hp_max"中获得的百分比值绘制标准红色/绿色健康条。',"The colour of the background for the bar":"条形背景的颜色","The colour of the bar when at full health (100)":"完全健康时条形的颜色(100 )","The colour of the bar when at no health (0)":"不健康时条形的颜色(0 )","The variable which defines total health (between 0 and 100)":"定义总运行状况的变量(介于0和100之间)","The x coordinate of the left of the healthbar":"健康栏左侧的x坐标","The x coordinate of the right of the healthbar":"健康栏右侧的x坐标","The y coordinate of the bottom of the healthbar":"健康栏底部的y坐标","The y coordinate of the top of the healthbar":"健康栏顶部的y坐标",'Where the bar is "anchored" (0 = left, 1 = right, 2 = top, 3 = bottom)':'其中"锚定"栏(0 =左侧，1 =右侧，2 =顶部，3 =底部)',"Whether the bar's background is drawn ({}true{}) or not ({}false{}). If false, the backcol argument is disregarded.":"是否绘制条形的背景({}true{})或不绘制({}false{})。如果为false，则忽略backcol参数。","Whether the bar's elements have a 1px wide black border ({}true{}) or not ({}false{}).":"条形的元素是否具有1 px宽的黑色边框({}true{})或不具有({}false{})。",'With this function you can draw a coloured bar to show a constant value. Although the function uses the word "healthbar" you can use this to display anything you wish as long as the amount to be displayed is a percentage value between 0 and 100 (a percentage of any value can be calculated with the formula {}(CURRENT_Value / MAXIMUM_value) * 100{}), so, for example, you can use this to display power, health, mana, time or anything else that would benefit from a bar display.':'使用此函数，可以绘制一个彩色条以显示常量值。尽管该函数使用"health bar"一词，但只要要要显示的数量是介于0和100之间的百分比值，您就可以使用它来显示任何您希望显示的内容(任何值的百分比都可以使用公式{}(当前值/最大值)* 100{}计算)，因此，例如，您可以使用它来显示功率、运行状况、法力、时间或任何其他可能受益于条形图显示的内容。',"You can set various different things that change the visual aspect of the bar and these are illustrated in the image below (note that the colours used here are {}c_green{} for the maximum value and {}c_red{} for the minimum value, but you can use the colours that you wish):":"您可以设置各种不同的更改条形视觉方面的内容，如下图所示(请注意，此处使用的颜色为{}c_green{}表示最大值，{}c_red{}表示最小值，但您可以使用所需颜色)：","{}NOTE{}: If you are wanting to draw a shape using a shader, you should be aware that most shaders expect the following inputs: vertex, texture, Colour. However, when using this function, only vertex and colour data are being passed in, and so the shader may not draw anything (or draw something but not correctly). If you need to draw shapes in this way then the shader should be customised with this in mind.":"{}注意{}：如果要使用着色器绘制形状，请注意，大多数着色器都需要以下输入：顶点、纹理、颜色。但是，使用此函数时，仅传入顶点和颜色数据，因此着色器可能无法绘制任何内容(或绘制某些内容但不正确)。如果需要以这种方式绘制形状，则应考虑到这一点对着色器进行自定义。","{}{}NOTE{}{}&nbsp;If you want to draw a shape using a shader, you should be aware that most shaders expect the following inputs: vertex, texture, colour. However, when using this function, only vertex and colour data are being passed in, and so the shader may not draw anything (or draw something but not correctly). If you need to draw shapes in this way then the shader should be customised with this in mind.":"{}{} 注意{}{} 如果您想使用着色器绘制形状，您应该知道大多数着色器需要以下输入：顶点、纹理、颜色。但是，当使用此函数时，仅传入顶点和颜色数据，因此着色器可能不会绘制任何内容 (或绘制某些内容但不正确)。如果您需要以这种方式绘制形状，那么应该在定制着色器时考虑到这一点。"},get_json_global=$.ajax({url:"/global.json",type:"GET",dataType:"json",async:!1,success:function(t){json_global=t}});$(function(){if(addNoTranslationStateButton(),noTranslationState())return!1;$("div.footer a,h4,caption").each(function(){setTranslator($(this),json_global)}),$("p,h1,h2,h3,td,li,a,div.dropspotnote,figcaption").each(function(){setTranslator($(this),json_file)}),$("th,.warning,.important,.optional").each(function(){setTranslator($(this),json_global)}),$(".header").length&&(window.setInterval(function(){$("#toc-panel a:not('isTranslate')").each(function(){$(this).addClass("isTranslate"),setTranslator($(this),json_global)}),$(".GlossDefinitionText:not('isTranslate')").each(function(){$(this).addClass("isTranslate"),setTranslator($(this),json_global)})},250),console.log("成功啦!现在正在疯狂翻译菜单中!")),$(".tooltip").each(function(){setTranslator($(this),json_global,"title")})}),document.addEventListener("DOMContentLoaded",()=>{pangu.autoSpacingPage()})</script><script type="text/javascript" language="JavaScript">function reDo(){innerWidth==origWidth&&innerHeight==origHeight||location.reload()}4==parseInt(navigator.appVersion)&&"Netscape"==navigator.appName&&(origWidth=innerWidth,origHeight=innerHeight,onresize=reDo),onerror=null</script><style type="text/css">p.WebHelpNavBar{text-align:right}</style><script type="text/javascript">gCommonRootRelPath=gRootRelPath="../../../..",gTopicId="8.2.2.6.4.0_22"</script><script type="text/javascript" src="../../../../template/scripts/rh.min.js"></script><script type="text/javascript" src="../../../../template/scripts/common.min.js"></script><script type="text/javascript" src="../../../../template/scripts/topic.min.js"></script><script type="text/javascript" src="../../../../template/scripts/topicwidgets.min.js"></script><script type="text/javascript" src="../../../../whxdata/projectsettings.js"></script><link rel="stylesheet" type="text/css" href="../../../../template/styles/topic.min.css"><link rel="stylesheet" type="text/css" href="../../../../template/Charcoal_Grey/topicheader.css"><meta name="topic-status" content="Draft"><meta http-equiv="Content-Type" content="text/html; charset=utf-8"><title>draw_healthbar</title><meta name="generator" content="Adobe RoboHelp 2022"><link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css"><script src="../../../../assets/scripts/main_script.js" type="module"></script><meta name="rh-authors" content="Mark Alexander"><meta name="topic-comment" content="Reference for the function draw_healthbar"><meta name="rh-index-keywords" content="draw_healthbar"><meta name="search-keywords" content="draw_healthbar"><meta name="is_pure" content="true"><meta name="brsnext" value="GameMaker_Language/GML_Reference/Drawing/Basic_Forms/draw_path.htm"><meta name="brsprev" value="GameMaker_Language/GML_Reference/Drawing/Basic_Forms/draw_button.htm"></head><body><div class="topic-header rh-hide" id="rh-topic-header"><div class="logo"></div><div class="nav"><div class="title" title="draw_healthbar"><span>draw_healthbar</span></div><div class="gotohome" title="Click here to see this page in full context"><a href="#" onclick="rh._.goToFullLayout()">Click here to see this page in full context</a></div></div></div><div class="topic-header-shadow rh-hide" id="rh-topic-header-shadow"></div><h1>draw_healthbar</h1><p>With this function you can draw a coloured bar to show a constant value. Although the function uses the word "healthbar" you can use this to display anything you wish as long as the amount to be displayed is a percentage value between 0 and 100 (a percentage of any value can be calculated with the formula <b>(CURRENT_Value / MAXIMUM_value) * 100</b>), so, for example, you can use this to display power, health, mana, time or anything else that would benefit from a bar display.</p><p>You can set various different things that change the visual aspect of the bar and these are illustrated in the image below (note that the colours used here are <span class="inline">c_green</span> for the maximum value and <span class="inline">c_red</span> for the minimum value, but you can use the colours that you wish):</p><p><img alt="Healthbar examples" class="center" src="../../../../assets/Images/Scripting_Reference/GML/Reference/Drawing/draw_healthbar.png"></p><div data-conref="../../../../assets/snippets/Note_Shape_Shader_Attributes_Are_Different.hts"><p class="note"><span data-conref="../../../../assets/snippets/Tag_note.hts"><span class="note">NOTE</span></span>&nbsp;If you want to draw a shape using a shader, you should be aware that most shaders expect the following inputs: vertex, texture, colour. However, when using this function, only vertex and colour data are being passed in, and so the shader may not draw anything (or draw something but not correctly). If you need to draw shapes in this way then the shader should be customised with this in mind.</p></div><p>&nbsp;</p><h4>Syntax:</h4><p class="code">draw_healthbar(x1, y1, x2, y2, amount, backcol, mincol, maxcol, direction, showback, showborder);</p><table><tbody><tr><th>Argument</th><th>Type</th><th>Description</th></tr><tr><td>x1</td><td><span data-keyref="Type_Real"><a target="_blank" href="../../../GML_Overview/Data_Types.htm">Real</a></span></td><td>The x coordinate of the left of the healthbar</td></tr><tr><td>y1</td><td><span data-keyref="Type_Real"><a target="_blank" href="../../../GML_Overview/Data_Types.htm">Real</a></span></td><td>The y coordinate of the top of the healthbar</td></tr><tr><td>x2</td><td><span data-keyref="Type_Real"><a target="_blank" href="../../../GML_Overview/Data_Types.htm">Real</a></span></td><td>The x coordinate of the right of the healthbar</td></tr><tr><td>y2</td><td><span data-keyref="Type_Real"><a target="_blank" href="../../../GML_Overview/Data_Types.htm">Real</a></span></td><td>The y coordinate of the bottom of the healthbar</td></tr><tr><td>amount</td><td><span data-keyref="Type_Real"><a target="_blank" href="../../../GML_Overview/Data_Types.htm">Real</a></span></td><td>The variable which defines total health (between 0 and 100)</td></tr><tr><td>backcol</td><td><span data-keyref="Type_Constant_Colour"><a target="_blank" href="../Colour_And_Alpha/Colour_And_Alpha.htm">Colour</a></span></td><td>The colour of the background for the bar</td></tr><tr><td>mincol</td><td><span data-keyref="Type_Constant_Colour"><a target="_blank" href="../Colour_And_Alpha/Colour_And_Alpha.htm">Colour</a></span></td><td>The colour of the bar when at no health (0)</td></tr><tr><td>maxcol</td><td><span data-keyref="Type_Constant_Colour"><a target="_blank" href="../Colour_And_Alpha/Colour_And_Alpha.htm">Colour</a></span></td><td>The colour of the bar when at full health (100)</td></tr><tr><td>direction</td><td><span data-keyref="Type_Real"><a target="_blank" href="../../../GML_Overview/Data_Types.htm">Real</a></span></td><td>Where the bar is "anchored" (0 = left, 1 = right, 2 = top, 3 = bottom)</td></tr><tr><td>showback</td><td><span data-keyref="Type_Bool"><a target="_blank" href="../../../GML_Overview/Data_Types.htm">Boolean</a></span></td><td>Whether the bar's background is drawn (<span class="inline">true</span>) or not (<span class="inline">false</span>). If false, the backcol argument is disregarded.</td></tr><tr><td>showborder</td><td><span data-keyref="Type_Bool"><a target="_blank" href="../../../GML_Overview/Data_Types.htm">Boolean</a></span></td><td>Whether the bar's elements have a 1px wide black border (<span class="inline">true</span>) or not (<span class="inline">false</span>).</td></tr></tbody></table><p>&nbsp;</p><h4>Returns:</h4><p class="code"><span data-keyref="Type_Void">N/A</span></p><p>&nbsp;</p><h4>Example:</h4><p class="code">var pc;<br>pc = (hp / max_hp) * 100;<br>draw_healthbar(100, 100, 500, 200, pc, c_black, c_red, c_lime, 0, true, true)</p><p>The above code uses the percentage value that you get from the variables "hp" and "hp_max" to draw a standard red/green healthbar.</p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><div class="footer"><div class="buttons"><div class="clear"><div style="float:left">Back: <a href="Basic_Forms.htm">Basic Forms</a></div><div style="float:right">Next: <a href="draw_path.htm">draw_path</a></div></div></div><h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2024 All Rights Reserved</span></h5></div></body></html>