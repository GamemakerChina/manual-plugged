<!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml"><head><script type="text/javascript" src="../../../../assets/import/jquery-3.6.1.min.js"></script><script type="text/javascript" src="../../../../assets/import/layer/layer.js"></script><script type="text/javascript" src="../../../../assets/import/pangu.min.js"></script><link rel="stylesheet" type="text/css" href="../../../../assets/import/layer/layui_btn.css"><link rel="stylesheet" type="text/css" href="../../../../assets/import/layer/layui_col.css"><link rel="stylesheet" type="text/css" href="../../../../assets/import/layer/theme/default/layer.css"><link rel="stylesheet" type="text/css" href="../../../../assets/import/main.css"><script>let str;removeHtml=function(e){return e=(e=(e=(e=e.replace(/(<([^>]+)>)/gi,"{}")).replace(/\r\n/g,"\n")).replace(/\n/g,"")).replace(/ {2,}/g," ")},retHtml=function(e){return e.match(/(<([^>]+)>)/gi)},setTranslator=function(e,t,a){let s;s=a?e.attr(a):e.html();let o=t[removeHtml(s)];if(null!=o&&o.length){t=retHtml(s);let n=0;t&&t.forEach(function(e,t){var a=o.replace("{"+n+"}",e);o=a===o?o.replace("{}",e):a,n++}),a?e.attr(a,o):e.html(o)}},noTranslationState=function(){return"true"==window.localStorage.getItem("noTranslationState")},noTranslationStateToggle=function(){window.localStorage.setItem("noTranslationState",!noTranslationState())},addNoTranslationStateButton=function(){var e=`
		
		<button style="
			float: right;
			font-size: 16px;
			padding: 4px 12px;
		"
		onclick="
		window.location.replace('gmmt://'+document.location.hash)
		"
		>打开编辑器</button>

		<button style="
			float: right;
			font-size: 16px;
			padding: 4px 12px;
		"
		onclick="
		noTranslationStateToggle();
		location.reload();
    	event.stopPropagation();
		"
		>切换翻译</button>
		`;$(".header").length?$(".header").append(e):($(".topic-header").append(e),$(".topic-header button").css("position","relative").css("top","44px"))},removeExtensionFromHash=function(e){return e.replaceAll("#t=","").replaceAll("%2F","/").replaceAll(".htm","")};let json_global,json_file={"After this, a couple&nbsp;of circles are drawn in a for loop using&nbsp;{}{}draw_circle{}{}. The depth used to draw each circle is set to the value of the loop variable&nbsp;{}z{}, which is increased by 10 every iteration. The radius of the circle varies in a way that the final shape looks like an hourglass shape. The draw colour is changed to bring variation in the colours&nbsp;of the circles.":"在此之后，使用{}{}draw_circle{}{}在for循环中绘制几个圆。用于绘制每个圆的深度设置为循环变量{}z{}的值，每次迭代时增加10。圆的半径以某种方式变化，最终形状看起来像沙漏形状。绘制颜色会改变，以改变圆的颜色。","Draw Event":"绘制事件","Finally, depth, z-writing and z-testing are all set to their previous value in&nbsp;order to not affect further drawing.":"最后，深度、z-writing 和 z-testing 都设置为之前的值，以免影响进一步的绘制。","Finally, the draw colour and depth are set back to the values they had before, in&nbsp;order to not affect further drawing&nbsp;on the instance's layer.":"最后，绘制颜色和深度被设置回它们之前的值，以便不影响在实例层上的进一步绘制。","First, z-writing and z-testing are enabled on the GPU using&nbsp;{}{}gpu_set_zwriteenable{}{}&nbsp;and&nbsp;{}{}gpu_set_ztestenable{}{}. Their current values are stored in temporary variables {}_zwrite{} and {}_ztest{}&nbsp;respectively, as well as the current depth, which is stored in a temporary variable {}_depth{}. The depth is then set to the instance's {}-y{}&nbsp;using&nbsp;{}{}gpu_set_depth{}{} and the instance is drawn normally using&nbsp;{}{}draw_self{}{}.":"首先，使用 {}{}gpu_set_zwriteenable{}{} 和 {}{}gpu_set_ztestenable{}{} 在 GPU 上启用 z 写入和 z 测试。它们的当前值分别存储在临时变量 {}_zwrite{} 和 {}_ztest{} 中，当前深度也存储在临时变量 {}_depth{} 中。然后使用 {}{}gpu_set_depth{}{} 将深度设置为实例的 {14}-y{15}，并使用 {}{}draw_self{}{} 正常绘制实例。","First, z-writing and z-testing&nbsp;are enabled ({}{}gpu_set_zwriteenable{}{}&nbsp;and&nbsp;{}{}gpu_set_ztestenable{}{}) and an appropriate projection ({}{}matrix_build_projection_perspective_fov{}{}) and view matrix ({}{}matrix_build_lookat{}{}) are built and set using&nbsp;{}{}matrix_set{}{}. Next, the current depth value and draw colour are stored so they can be restored later.":"首先，启用 z 写入和 z 测试 ({}{}gpu_set_zwriteenable{}{} 和 {}{}gpu_set_ztestenable{}{}) 以及适当的投影 ({}{}matrix_build_projection_perspective_fov{}{}) 和视图矩阵 ({}{}matrix_build_lookat{}{}) 使用 {}{}matrix_set{}{} 构建和设置。接下来，存储当前的深度值和绘制颜色，以便稍后恢复。",'The above code sets the depth used for drawing&nbsp;to the current instance\'s&nbsp;{}-y{}. This gives an easy way to draw instances behind&nbsp;other instances&nbsp;once they move "behind" them, if those instances also have their depth set to {}-y{}.':'上面的代码将用于绘制的深度设置为当前实例的 {}-y{}。如果这些实例的深度也设置为 {}-y{}，则一旦其他实例移动到其他实例的 " 后面"，这提供了一种简单的方法来将这些实例绘制在其他实例的后面。',"The code above draws a coloured hourglass-like shape in the Draw event.":"上面的代码在 Draw 事件中绘制了一个彩色的沙漏状形状。","The new depth value to use for drawing":"用于绘制的新深度值","This function sets the depth (i.e. the z coordinate) for&nbsp;{}GameMaker{}'s&nbsp;2D drawing functions (sprites, shapes, primitives, text, etc.)":"此函数为{}GameMaker{}的2D绘图功能(精灵、形状、图元、文本等)设置深度(即z坐标)。","{}By default,&nbsp;{}GameMaker{}&nbsp;uses the layer's depth when drawing flat graphics, but this function allows you to use your own. This can be used to draw at a different depth, or draw individual sprites/primitives at their own depths.{}":"{}默认情况下，{}GameMaker{} 在绘制平面图形时使用层的深度，但此功能允许您使用自己的深度。此功能可用于在不同的深度绘制，或在各自的深度绘制单个精灵/图元。{}","{}{}IMPORTANT{}{}&nbsp;This function doesn't change the depth of the layer when called in a layer begin script (see&nbsp;{}{}layer_script_begin{}{}). If you need to&nbsp;change the depth of a specific layer in the layer begin script you should do so using&nbsp;{}{}layer_force_draw_depth{}{}&nbsp;instead.":"{}{} 重要信息{}{} 在层开始脚本中调用此函数时，不会更改层的深度 (请参阅 {}{}layer_script_begin{}{})。如果您需要更改图层开始脚本中特定图层的深度，您应该使用 {}{}layer_force_draw_depth{}{} 来执行此操作。","{}{}NOTE{}{}&nbsp;Depth values are approximate. If you try to draw things at depth values close to the maximum depth&nbsp;and minimum depth, they may not be drawn due to inaccuracies introduced by the calculations.":"{}{} 注意{}{} 深度值是近似值。如果您尝试以接近最大深度和最小深度的深度值绘制事物，则可能会由于计算引入的不准确性而无法绘制它们。","{}{}NOTE{}{}&nbsp;{}GameMaker{}{}&nbsp;only changes the depth when it starts drawing a new layer, so you may want to restore the original depth (saved previously from&nbsp;{}{}gpu_get_depth{}{}{}{}) after you're done drawing, so any subsequent calls will not be affected by your depth change.{}":"{}{} 注意{}{}{}GameMaker{}{} 仅在开始绘制新图层时更改深度，因此您可能需要恢复原始深度 (之前从 {}{}gpu_get_depth{}{} 保存 ){}{}) 在您完成绘制后，因此任何后续调用都不会受到深度更改的影响。{}"},get_json_global=$.ajax({url:"/global.json",type:"GET",dataType:"json",async:!1,success:function(e){json_global=e}});$(function(){if(addNoTranslationStateButton(),noTranslationState())return!1;$("div.footer a,h4,caption").each(function(){setTranslator($(this),json_global)}),$("p,h1,h2,h3,td,li,a,div.dropspotnote,figcaption").each(function(){setTranslator($(this),json_file)}),$("th,.warning,.important,.optional").each(function(){setTranslator($(this),json_global)}),$(".header").length&&(window.setInterval(function(){$("#toc-panel a:not('isTranslate')").each(function(){$(this).addClass("isTranslate"),setTranslator($(this),json_global)}),$(".GlossDefinitionText:not('isTranslate')").each(function(){$(this).addClass("isTranslate"),setTranslator($(this),json_global)})},250),console.log("成功啦!现在正在疯狂翻译菜单中!")),$(".tooltip").each(function(){setTranslator($(this),json_global,"title")})}),document.addEventListener("DOMContentLoaded",()=>{pangu.autoSpacingPage()})</script><script type="text/javascript" language="JavaScript">function reDo(){innerWidth==origWidth&&innerHeight==origHeight||location.reload()}4==parseInt(navigator.appVersion)&&"Netscape"==navigator.appName&&(origWidth=innerWidth,origHeight=innerHeight,onresize=reDo),onerror=null</script><style type="text/css">p.WebHelpNavBar{text-align:right}</style><script type="text/javascript">gCommonRootRelPath=gRootRelPath="../../../..",gTopicId="8.2.2.6.2.0_27"</script><script type="text/javascript" src="../../../../template/scripts/rh.min.js"></script><script type="text/javascript" src="../../../../template/scripts/common.min.js"></script><script type="text/javascript" src="../../../../template/scripts/topic.min.js"></script><script type="text/javascript" src="../../../../template/scripts/topicwidgets.min.js"></script><script type="text/javascript" src="../../../../whxdata/projectsettings.js"></script><link rel="stylesheet" type="text/css" href="../../../../template/styles/topic.min.css"><link rel="stylesheet" type="text/css" href="../../../../template/Charcoal_Grey/topicheader.css"><meta name="topic-status" content="Draft"><meta http-equiv="Content-Type" content="text/html; charset=utf-8"><title>gpu_set_depth</title><meta name="generator" content="Adobe RoboHelp 2022"><link rel="stylesheet" type="text/css" href="../../../../assets/css/default.css"><script src="../../../../assets/scripts/main_script.js" type="module"></script><meta name="rh-authors" content=""><meta name="topic-comment" content=""><meta name="rh-index-keywords" content="gpu_set_depth"><meta name="search-keywords" content="gpu_set_depth"><meta name="template" content="assets/masterpages/Manual_Keyword_Page.htt"><meta name="brsnext" value="GameMaker_Language/GML_Reference/Drawing/GPU_Control/gpu_set_fog.htm"><meta name="brsprev" value="GameMaker_Language/GML_Reference/Drawing/GPU_Control/gpu_set_zwriteenable.htm"></head><body><div class="topic-header rh-hide" id="rh-topic-header"><div class="logo"></div><div class="nav"><div class="title" title="gpu_set_depth"><span>gpu_set_depth</span></div><div class="gotohome" title="Click here to see this page in full context"><a href="#" onclick="rh._.goToFullLayout()">Click here to see this page in full context</a></div></div></div><div class="topic-header-shadow rh-hide" id="rh-topic-header-shadow"></div><h1><span data-field="title" data-format="default">gpu_set_depth</span></h1><p>This function sets the depth (i.e. the z coordinate) for&nbsp;<span data-keyref="GameMaker Name">GameMaker</span>'s&nbsp;2D drawing functions (sprites, shapes, primitives, text, etc.)</p><p><span>By default,&nbsp;<span data-keyref="GameMaker Name">GameMaker</span>&nbsp;uses the layer's depth when drawing flat graphics, but this function allows you to use your own. This can be used to draw at a different depth, or draw individual sprites/primitives at their own depths.</span></p><p class="note" style="text-align:left"><span data-conref="../../../../assets/snippets/Tag_important.hts"><span class="important">IMPORTANT</span></span>&nbsp;This function doesn't change the depth of the layer when called in a layer begin script (see&nbsp;<span class="inline3_func"><a href="../../Asset_Management/Rooms/General_Layer_Functions/layer_script_begin.htm">layer_script_begin</a></span>). If you need to&nbsp;change the depth of a specific layer in the layer begin script you should do so using&nbsp;<span class="inline3_func"><a href="../../Asset_Management/Rooms/General_Layer_Functions/layer_force_draw_depth.htm">layer_force_draw_depth</a></span>&nbsp;instead.</p><p class="note"><span data-conref="../../../../assets/snippets/Tag_note.hts"><span class="note">NOTE</span></span>&nbsp;<span data-keyref="GameMaker Name">GameMaker</span><span>&nbsp;only changes the depth when it starts drawing a new layer, so you may want to restore the original depth (saved previously from&nbsp;<span class="inline3_func"><a href="gpu_get_depth.htm">gpu_get_depth</a></span></span><span>) after you're done drawing, so any subsequent calls will not be affected by your depth change.</span></p><div data-conref="../../../../assets/snippets/Note_Depth_Values_Are_Approximate.hts"><p class="note"><span data-conref="../../../../assets/snippets/Tag_note.hts"><span class="note">NOTE</span></span>&nbsp;Depth values are approximate. If you try to draw things at depth values close to the maximum depth&nbsp;and minimum depth, they may not be drawn due to inaccuracies introduced by the calculations.</p></div><p>&nbsp;</p><h4>Syntax:</h4><p class="code"><span data-field="title" data-format="default">gpu_set_depth</span>(depth);</p><table><colgroup><col><col><col></colgroup><tbody><tr><th>Argument</th><th>Type</th><th>Description</th></tr><tr><td>depth</td><td><span data-keyref="Type_Real"><a target="_blank" href="../../../GML_Overview/Data_Types.htm">Real</a></span></td><td>The new depth value to use for drawing</td></tr></tbody></table><p>&nbsp;</p><h4>Returns:</h4><p class="code"><span data-keyref="Type_Void">N/A</span></p><p>&nbsp;</p><h4>Example 1: "depth = -y"</h4><p class="code_heading">Draw Event</p><p class="code">var _zwrite = gpu_get_zwriteenable();<br>var _ztest = gpu_get_ztestenable();<br>gpu_set_zwriteenable(true);<br>gpu_set_ztestenable(true);<br>var _depth = gpu_get_depth();<br><br>gpu_set_depth(-y);<br><br>draw_self();<br><br>gpu_set_depth(_depth);<br>gpu_set_zwriteenable(_zwrite);<br>gpu_set_ztestenable(_ztest);</p><p>The above code sets the depth used for drawing&nbsp;to the current instance's&nbsp;<span class="inline2">-y</span>. This gives an easy way to draw instances behind&nbsp;other instances&nbsp;once they move "behind" them, if those instances also have their depth set to <span class="inline2">-y</span>.</p><p>First, z-writing and z-testing are enabled on the GPU using&nbsp;<span class="inline3_func"><a href="gpu_set_zwriteenable.htm">gpu_set_zwriteenable</a></span>&nbsp;and&nbsp;<span class="inline3_func"><a href="gpu_set_ztestenable.htm">gpu_set_ztestenable</a></span>. Their current values are stored in temporary variables <span class="inline2">_zwrite</span> and <span class="inline2">_ztest</span>&nbsp;respectively, as well as the current depth, which is stored in a temporary variable <span class="inline2">_depth</span>. The depth is then set to the instance's <span class="inline2">-y</span>&nbsp;using&nbsp;<span class="inline3_func"><span data-field="title" data-format="default">gpu_set_depth</span></span> and the instance is drawn normally using&nbsp;<span class="inline3_func"><a href="../Sprites_And_Tiles/draw_self.htm">draw_self</a></span>.</p><p>Finally, depth, z-writing and z-testing are all set to their previous value in&nbsp;order to not affect further drawing.</p><p>&nbsp;</p><h4>Example 2: Drawing an Hourglass Shape using Circles</h4><p class="code_heading">Draw Event</p><p class="code">gpu_set_zwriteenable(true);<br>gpu_set_ztestenable(true);<br>matrix_set(matrix_view, matrix_build_lookat(220, 0, 90, 0, 0, 90, 0, 0, 1));<br>matrix_set(matrix_projection, matrix_build_projection_perspective_fov(60, room_width/room_height, 1, 10000));<br><br>var _depth = gpu_get_depth(); // store previous depth<br>var _col = draw_get_colour();<br><br>var n = 180;<br>for (var z = 0; z &lt;= n; z += 10)<br>{<br>&nbsp; &nbsp;&nbsp;gpu_set_depth(z);<br>&nbsp; &nbsp;&nbsp;draw_set_colour(make_color_hsv(z / n * 255, 150, 250));<br>&nbsp; &nbsp; draw_circle(0, 0, 40 + lengthdir_x(20, z / n * 360), false);<br>}<br><br>draw_set_colour(_col);<br>gpu_set_depth(_depth);&nbsp; &nbsp; &nbsp; &nbsp; // restore previous depth</p><p>The code above draws a coloured hourglass-like shape in the Draw event.</p><p>First, z-writing and z-testing&nbsp;are enabled (<span class="inline3_func"><a href="gpu_set_zwriteenable.htm">gpu_set_zwriteenable</a></span>&nbsp;and&nbsp;<span class="inline3_func"><a href="gpu_set_ztestenable.htm">gpu_set_ztestenable</a></span>) and an appropriate projection (<span class="inline3_func"><a href="../../Maths_And_Numbers/Matrix_Functions/matrix_build_projection_perspective_fov.htm">matrix_build_projection_perspective_fov</a></span>) and view matrix (<span class="inline3_func"><a href="../../Maths_And_Numbers/Matrix_Functions/matrix_build_lookat.htm">matrix_build_lookat</a></span>) are built and set using&nbsp;<span class="inline3_func"><a href="../../Maths_And_Numbers/Matrix_Functions/matrix_set.htm">matrix_set</a></span>. Next, the current depth value and draw colour are stored so they can be restored later.</p><p>After this, a couple&nbsp;of circles are drawn in a for loop using&nbsp;<span class="inline3_func"><a href="../Basic_Forms/draw_circle.htm">draw_circle</a></span>. The depth used to draw each circle is set to the value of the loop variable&nbsp;<span class="inline2">z</span>, which is increased by 10 every iteration. The radius of the circle varies in a way that the final shape looks like an hourglass shape. The draw colour is changed to bring variation in the colours&nbsp;of the circles.</p><p>Finally, the draw colour and depth are set back to the values they had before, in&nbsp;order to not affect further drawing&nbsp;on the instance's layer.</p><p>&nbsp;</p><p>&nbsp;</p><div class="footer"><div class="buttons"><div class="clear"><div>Back:&nbsp;<a href="GPU_Control.htm">GPU Control</a></div><div>Next:&nbsp;<a href="gpu_set_fog.htm">gpu_set_fog</a></div></div></div><h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2024 All Rights Reserved</span></h5></div></body></html>