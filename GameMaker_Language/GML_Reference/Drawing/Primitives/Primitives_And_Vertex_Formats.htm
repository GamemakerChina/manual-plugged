<!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml"><head><script type="text/javascript" src="../../../../assets/import/jquery-3.6.1.min.js"></script><script type="text/javascript" src="../../../../assets/import/layer/layer.js"></script><script type="text/javascript" src="../../../../assets/import/pangu.min.js"></script><link rel="stylesheet" type="text/css" href="../../../../assets/import/layer/layui_btn.css"><link rel="stylesheet" type="text/css" href="../../../../assets/import/layer/layui_col.css"><link rel="stylesheet" type="text/css" href="../../../../assets/import/layer/theme/default/layer.css"><link rel="stylesheet" type="text/css" href="../../../../assets/import/main.css"><script>let str;removeHtml=function(t){return t=(t=(t=(t=t.replace(/(<([^>]+)>)/gi,"{}")).replace(/\r\n/g,"\n")).replace(/\n/g,"")).replace(/ {2,}/g," ")},retHtml=function(t){return t.match(/(<([^>]+)>)/gi)},setTranslator=function(t,n,a){let e;e=a?t.attr(a):t.html();let l=n[removeHtml(e)];if(null!=l&&l.length){n=retHtml(e);let o=0;n&&n.forEach(function(t,n){var a=l.replace("{"+o+"}",t);l=a===l?l.replace("{}",t):a,o++}),a?t.attr(a,l):t.html(l)}},noTranslationState=function(){return"true"==window.localStorage.getItem("noTranslationState")},noTranslationStateToggle=function(){window.localStorage.setItem("noTranslationState",!noTranslationState())},addNoTranslationStateButton=function(){$(".header").length&&$(".header").append(`
		
		<button style="
			float: right;
			font-size: 16px;
			padding: 4px 12px;
		"
		onclick="
		window.location.replace('gmmt://'+document.location.hash)
		"
		>打开编辑器</button>

		<button style="
			float: right;
			font-size: 16px;
			padding: 4px 12px;
		"
		onclick="
		noTranslationStateToggle();
		location.reload();
    	event.stopPropagation();
		"
		>切换翻译</button>
		`)},removeExtensionFromHash=function(t){return t.replaceAll("#t=","").replaceAll("%2F","/").replaceAll(".htm","")},$(function(){if(addNoTranslationStateButton(),noTranslationState())return!1;$("div.footer a,h4,caption").each(function(){setTranslator($(this),json_global)}),$("p,h1,h2,h3,td,li,a,div.dropspotnote,figcaption").each(function(){setTranslator($(this),json)}),$("th,.warning,.important,.optional").each(function(){setTranslator($(this),json_global)}),$(".header").length&&(window.setInterval(function(){$("#toc-panel a:not('isTranslate')").each(function(){$(this).addClass("isTranslate"),setTranslator($(this),json_global)}),$(".GlossDefinitionText:not('isTranslate')").each(function(){$(this).addClass("isTranslate"),setTranslator($(this),json_global)})},250),console.log("成功啦!现在正在疯狂翻译菜单中!")),$(".tooltip").each(function(){setTranslator($(this),json_global,"title")})}),document.addEventListener("DOMContentLoaded",()=>{pangu.autoSpacingPage()})</script><script type="text/javascript" language="JavaScript">function reDo(){innerWidth==origWidth&&innerHeight==origHeight||location.reload()}4==parseInt(navigator.appVersion)&&"Netscape"==navigator.appName&&(origWidth=innerWidth,origHeight=innerHeight,onresize=reDo),onerror=null</script><style type="text/css">p.WebHelpNavBar{text-align:right}</style><script type="text/javascript">gCommonRootRelPath=gRootRelPath="../../../..",gTopicId="8.2.2.6.7"</script><script type="text/javascript" src="../../../../template/scripts/rh.min.js"></script><script type="text/javascript" src="../../../../template/scripts/common.min.js"></script><script type="text/javascript" src="../../../../template/scripts/topic.min.js"></script><script type="text/javascript" src="../../../../template/scripts/topicwidgets.min.js"></script><script type="text/javascript" src="../../../../whxdata/projectsettings.js"></script><link rel="stylesheet" type="text/css" href="../../../../template/styles/topic.min.css"><link rel="stylesheet" type="text/css" href="../../../../template/Charcoal_Grey/topicheader.css"><meta name="topic-status" content="Draft"><meta http-equiv="Content-Type" content="text/html; charset=utf-8"><title>Primitives&nbsp;And Vertex Formats</title><meta name="generator" content="Adobe RoboHelp 2022"><link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css"><script src="../../../../assets/scripts/main_script.js" type="module"></script><meta name="rh-authors" content="Mark Alexander"><meta name="topic-comment" content="Reference section for the Primitive&nbsp;And Vertex Format functions and variables"><meta name="rh-index-keywords" content=""><meta name="search-keywords" content="Primitives&nbsp;And Vertex Formats,Primitives,Vertex Buffers,Vertex Formats"><meta name="brsnext" value="GameMaker_Language/GML_Reference/Drawing/Primitives/draw_primitive_begin.htm"><meta name="brsprev" value="GameMaker_Language/GML_Reference/Drawing/Text/draw_highscore.htm"></head><body><div class="topic-header rh-hide" id="rh-topic-header"><div class="logo"></div><div class="nav"><div class="title" title="Primitives&nbsp;And Vertex Formats"><span>Primitives&nbsp;And Vertex Formats</span></div><div class="gotohome" title="Click here to see this page in full context"><a href="#" onclick="rh._.goToFullLayout()">Click here to see this page in full context</a></div></div></div><div class="topic-header-shadow rh-hide" id="rh-topic-header-shadow"></div><h1><span data-field="title" data-format="default">Primitives&nbsp;And Vertex Formats</span></h1><p>A primitive is a type of drawing done using points to define what is shown on the screen. They can be made up of single points, lines or triangles and can be coloured, have alpha blending and even be given a texture, which means that they can be used to create some very exciting effects in your 2D and 3D games!</p><p>The points of a primitive are called <em>vertices</em> (singular <em><a class="tooltip" title="A vertex is the name given to a single point of a polygon that contains various characteristics that define it's position, its colour and its texture. In computer graphics, this usually means a corner of a triangle that is used to create a primitive, and a combination of such primitives is what makes the graphics on the screen.">vertex</a></em>) and store data about their position, colour, texture and possibly other information. The GPU then draws these vertices using the primitive <em>type</em>&nbsp;that you provide:&nbsp;</p><p><img alt="The different primitive types" class="center" height="436" src="../../../../assets/Images/Scripting_Reference/GML/Reference/Drawing/primitive_types.png" width="573"></p><p>For example, you can create a rectangle using two triangle primitives, then texture it with a flag sprite and in the Draw event of an instance have that flag "wave" in the wind and distort the sprite you used by simply modifying the points that form the primitive.<b></b></p><div data-conref="../../../../assets/snippets/Note_Primitives_Enable_WebGL_On_HTML5.hts"><p class="note"><b><span data-conref="../../../../assets/snippets/Tag_warning.hts"><span class="warning">WARNING</span></span>&nbsp;</b>These functions do not work with the HTML5 module unless you have enabled WebGL in the <a href="../../../../Settings/Game_Options/HTML5.htm">Game Options</a>.</p></div><h2>Creating Primitives</h2><p><span data-keyref="GameMaker Name">GameMaker</span>&nbsp;offers two ways to draw and create primitives:&nbsp;</p><ul class="colour"><li>The primitive functions: the&nbsp;<span class="inline3_func">draw_primitive_*</span> and <span class="inline3_func">draw_vertex_*</span> functions</li><li>Vertex buffers</li></ul><h3>Primitive Functions</h3><p>The <span class="inline3_func">draw_primitive_*</span> functions allow you to define primitives and draw them directly to the screen (or to a <a href="../Surfaces/Surfaces.htm">surface</a>). You call&nbsp;<span class="inline3_func"><a href="draw_primitive_begin.htm">draw_primitive_begin</a></span>&nbsp;or&nbsp;<span class="inline3_func"><a href="draw_primitive_begin_texture.htm">draw_primitive_begin_texture</a></span>, then define the vertices with any of the <span class="inline3_func">draw_vertex_*</span> functions and finally call&nbsp;<span class="inline3_func"><a href="draw_primitive_end.htm">draw_primitive_end</a></span>&nbsp;to draw the primitive.</p><p class="code_heading">Draw Event</p><p class="code">var _tex = sprite_get_texture(spr_image, 0);<br>draw_primitive_begin_texture(pr_trianglestrip, _tex);<br>draw_vertex_texture(0, 0, 0, 0);<br>draw_vertex_texture(100, 0, 1, 0);<br>draw_vertex_texture(0, 100, 0, 1);<br>draw_vertex_texture(100, 100, 1, 1);<br>draw_primitive_end();</p><h3>Vertex Buffers</h3><p>Vertex buffers are the more advanced way to define reusable primitives. They are&nbsp;<a href="../../Buffers/Buffers.htm">Buffers</a>&nbsp;that store data about vertices specifically ("vertex data").&nbsp;With vertex buffers you split up the definition of the primitive and its drawing.</p><p>You create a new, empty vertex buffer using&nbsp;<span class="inline3_func"><a href="vertex_create_buffer.htm">vertex_create_buffer</a></span>&nbsp;/&nbsp;<span class="inline3_func"><a href="vertex_create_buffer_ext.htm">vertex_create_buffer_ext</a></span> or create one and fill it with the data in a buffer using&nbsp;<span class="inline3_func"><a href="vertex_create_buffer_from_buffer.htm">vertex_create_buffer_from_buffer</a></span>&nbsp;/&nbsp;<span class="inline3_func"><a href="vertex_create_buffer_from_buffer_ext.htm">vertex_create_buffer_from_buffer_ext</a></span>:</p><p class="code_heading">Create Event</p><p class="code">// Create an empty vertex buffer<br>vb = vertex_create_buffer();<br><br>// Create a vertex buffer filled with data from a buffer<br>var _buff = buffer_load("model.mod");<br>vb_model = vertex_create_buffer_from_buffer(_buff, format);<br>buffer_delete(_buff);</p><p class="note"><span data-conref="../../../../assets/snippets/Tag_note.hts"><span class="note">NOTE</span></span>&nbsp;See&nbsp;<a href="../../Buffers/Transferring_Data_Between_Buffers.htm">Transferring Data Between Buffers</a>&nbsp;for more info on how to pass data between the two buffer types.</p><p>You draw a vertex buffer by submitting it at any time in Draw events using&nbsp;<span class="inline3_func"><a href="vertex_submit.htm">vertex_submit</a></span>, or just part&nbsp;of it using<span class="inline3_func"><a href="vertex_submit_ext.htm">vertex_submit_ext</a></span>.</p><p>The following is a complete example that makes use of&nbsp;<span data-keyref="GameMaker Name">GameMaker</span>'s default&nbsp;<a href="../../../../Additional_Information/Guide_To_Primitives_And_Vertex_Building.htm">passthrough vertex format</a>:&nbsp;</p><p class="code_heading">Create Event</p><p class="code">var _uv_data = sprite_get_uvs(spr_image, 0);<br>var _umin = _uv_data[0], _vmin = _uv_data[1], _umax = _uv_data[2], _vmax = _uv_data[3];<br><br>vb = vertex_create_buffer();<br><br>vertex_begin(vb, format);<br><br>vertex_position_3d(vb,&nbsp; &nbsp;0,&nbsp; &nbsp;0, 0); vertex_color(vb, c_white, 1); vertex_texcoord(vb, _umin, _vmin);<br>vertex_position_3d(vb, 100,&nbsp; &nbsp;0, 0); vertex_color(vb, c_white, 1); vertex_texcoord(vb, _umax, _vmin);<br>vertex_position_3d(vb,&nbsp; &nbsp;0, 100, 0); vertex_color(vb, c_white, 1); vertex_texcoord(vb, _umin, _vmax);<br>vertex_position_3d(vb, 100, 100, 0); vertex_color(vb, c_white, 1); vertex_texcoord(vb, _umax, _vmax);<br><br>vertex_end(vb);</p><p class="code_heading">Draw Event</p><p class="code">var _tex = sprite_get_texture(spr_image, 0);<br>vertex_submit(vb, pr_trianglestrip, _tex);</p><p class="code_heading">Cleanup Event</p><p class="code">vertex_delete_buffer(vb);</p><p class="note"><span data-conref="../../../../assets/snippets/Tag_note.hts"><span class="note">NOTE</span></span>&nbsp;See the&nbsp;<a href="../../../../Additional_Information/Guide_To_Primitives_And_Vertex_Building.htm">Guide To Primitives And Vertex Building</a>&nbsp;for more info on how to work with vertex buffers.</p><h3>Texture Coordinates</h3><p>In the code examples above, the UVs are provided differently for vertex buffers. This is because the UVs are interpreted differently by both sets of functions:&nbsp;</p><ul class="colour"><li>The functions&nbsp;<span class="inline3_func"><a href="draw_vertex_texture.htm">draw_vertex_texture</a></span>&nbsp;and&nbsp;<span class="inline3_func"><a href="draw_vertex_texture_colour.htm">draw_vertex_texture_colour</a></span>&nbsp;map (0, 0) to the top-left corner of the sprite's region on the texture page and (1, 1) to the bottom-right corner of the sprite's region on the texture page.</li><li>The function&nbsp;<span class="inline3_func"><a href="vertex_texcoord.htm">vertex_texcoord</a></span>&nbsp;doesn't map the texture coordinates that you pass it to any sprite in a texture page. Therefore, (0, 0) is the top-left corner of the texture page and (1, 1) is the bottom-right corner of the texture page, i.e. the range [0, 1] covers the entire texture page.</li></ul><p class="note"><span data-conref="../../../../assets/snippets/Tag_note.hts"><span class="note">NOTE</span></span>&nbsp;You can use the functions&nbsp;<span class="inline3_func"><a href="../../Asset_Management/Sprites/Sprite_Information/sprite_get_uvs.htm">sprite_get_uvs</a></span>,&nbsp;<span class="inline3_func"><a href="../../Asset_Management/Fonts/font_get_uvs.htm">font_get_uvs</a></span>&nbsp;and&nbsp;<span class="inline3_func"><a href="../../Asset_Management/Tilsets/tileset_get_uvs.htm">tileset_get_uvs</a></span>&nbsp;to get a specific asset's UV range on the texture page.</p><h2 id="func_ref">Function Reference</h2><h3 id="func_ref_primitives">Primitives</h3><ul class="colour"><li><a href="draw_primitive_begin.htm">draw_primitive_begin</a></li><li><a href="draw_primitive_begin_texture.htm">draw_primitive_begin_texture</a></li><li><a href="draw_primitive_end.htm">draw_primitive_end</a></li><li><a href="draw_vertex.htm">draw_vertex</a></li><li><a href="draw_vertex_colour.htm">draw_vertex_colour</a></li><li><a href="draw_vertex_texture.htm">draw_vertex_texture</a></li><li><a href="draw_vertex_texture_colour.htm">draw_vertex_texture_colour</a></li></ul><h3 id="func_ref_vertex_formats">Vertex Formats</h3><p><span data-keyref="GameMaker Name">GameMaker</span>&nbsp;permits you to define your own vertex formats from which you can create your own custom primitives. This can greatly speed up shader operations or can be used to extend their capabilities and create surprising effects.</p><p>A <strong>vertex format</strong> lists the attributes that are stored for a vertex in order. You start defining one with&nbsp;<span class="inline3_func"><a href="vertex_format_begin.htm">vertex_format_begin</a></span>, then add the attributes using the <span class="inline2">vertex_format_add_*</span> functions and finally end it using&nbsp;<span class="inline3_func"><a href="vertex_format_end.htm">vertex_format_end</a></span>.</p><ul class="colour"><li><a href="vertex_format_begin.htm">vertex_format_begin</a></li><li><a href="vertex_format_add_colour.htm">vertex_format_add_colour</a></li><li><a href="vertex_format_add_position.htm">vertex_format_add_position</a></li><li><a href="vertex_format_add_position_3d.htm">vertex_format_add_position_3d</a></li><li><a href="vertex_format_add_texcoord.htm">vertex_format_add_texcoord</a></li><li><a href="vertex_format_add_normal.htm">vertex_format_add_normal</a></li><li><a href="vertex_format_add_custom.htm">vertex_format_add_custom</a></li><li><a href="vertex_format_end.htm">vertex_format_end</a></li><li><a href="vertex_format_delete.htm">vertex_format_delete</a></li><li><a href="vertex_format_get_info.htm">vertex_format_get_info</a></li></ul><h3 id="func_ref_vertex_buffers">Vertex Buffers</h3><p>Once you have created your vertex format (see the section above) you can then use it to build the primitives that you want to draw using the following vertex buffer functions:</p><ul class="colour"><li><a href="vertex_create_buffer.htm">vertex_create_buffer</a></li><li><a href="vertex_create_buffer_ext.htm">vertex_create_buffer_ext</a></li><li><a href="vertex_create_buffer_from_buffer.htm">vertex_create_buffer_from_buffer</a></li><li><a href="vertex_create_buffer_from_buffer_ext.htm">vertex_create_buffer_from_buffer_ext</a></li><li><a href="vertex_update_buffer_from_buffer.htm">vertex_update_buffer_from_buffer</a></li><li><a href="vertex_update_buffer_from_vertex.htm">vertex_update_buffer_from_vertex</a></li><li><a href="vertex_get_buffer_size.htm">vertex_get_buffer_size</a></li><li><a href="vertex_get_number.htm">vertex_get_number</a></li><li><a href="vertex_delete_buffer.htm">vertex_delete_buffer</a></li><li><a href="vertex_begin.htm">vertex_begin</a></li><li><a href="vertex_colour.htm">vertex_colour</a></li><li><a href="vertex_normal.htm">vertex_normal</a></li><li><a href="vertex_position.htm">vertex_position</a></li><li><a href="vertex_position_3d.htm">vertex_position_3d</a></li><li><a href="vertex_argb.htm">vertex_argb</a></li><li><a href="vertex_texcoord.htm">vertex_texcoord</a></li><li><a href="vertex_float1.htm">vertex_float1</a></li><li><a href="vertex_float2.htm">vertex_float2</a></li><li><a href="vertex_float3.htm">vertex_float3</a></li><li><a href="vertex_float4.htm">vertex_float4</a></li><li><a href="vertex_ubyte4.htm">vertex_ubyte4</a></li><li><a href="vertex_end.htm">vertex_end</a></li><li><a href="vertex_freeze.htm">vertex_freeze</a></li><li><a href="vertex_submit.htm">vertex_submit</a></li><li><a href="vertex_submit_ext.htm">vertex_submit_ext</a></li></ul><p class="note"><span data-conref="../../../../assets/snippets/Tag_important.hts"><span class="important">IMPORTANT</span></span>&nbsp;The primitives that you build should follow the format that you have set using the Vertex Format functions, so if you have defined a vertex format with only positional data, there is no point building your primitive with colour data. You should note that the order in which you add properties to the primitive you are building is defined by the order in which you added these properties when creating the vertex format, so if you have defined the vector format with the order position, colour and texture coordinate, you <i>must</i> add these properties to the primitive being built in the same order otherwise you will get errors.</p><p>For an overview of how to build primitives using the vertex functions, see:</p><ul class="colour"><li><a href="../../../../Additional_Information/Guide_To_Primitives_And_Vertex_Building.htm">Guide To Primitives And Vertex Building</a></li></ul><p>&nbsp;</p><p>&nbsp;</p><div class="footer"><div class="buttons"><div class="clear"><div style="float:left">Back: <a href="../Drawing.htm">Drawing</a></div><div style="float:right">Next: <a href="../Surfaces/Surfaces.htm">Surfaces</a></div></div></div><h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2024 All Rights Reserved</span></h5></div></body></html>