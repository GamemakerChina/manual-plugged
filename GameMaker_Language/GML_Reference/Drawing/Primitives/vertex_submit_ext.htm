<!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml"><head><script type="text/javascript" src="../../../../assets/import/jquery-3.6.1.min.js"></script><script type="text/javascript" src="../../../../assets/import/layer/layer.js"></script><script type="text/javascript" src="../../../../assets/import/pangu.min.js"></script><link rel="stylesheet" type="text/css" href="../../../../assets/import/layer/layui_btn.css"><link rel="stylesheet" type="text/css" href="../../../../assets/import/layer/layui_col.css"><link rel="stylesheet" type="text/css" href="../../../../assets/import/layer/theme/default/layer.css"><link rel="stylesheet" type="text/css" href="../../../../assets/import/main.css"><script>let str;removeHtml=function(t){return t=(t=(t=(t=t.replace(/(<([^>]+)>)/gi,"{}")).replace(/\r\n/g,"\n")).replace(/\n/g,"")).replace(/ {2,}/g," ")},retHtml=function(t){return t.match(/(<([^>]+)>)/gi)},setTranslator=function(t,n,a){let e;e=a?t.attr(a):t.html();let l=n[removeHtml(e)];if(null!=l&&l.length){n=retHtml(e);let o=0;n&&n.forEach(function(t,n){var a=l.replace("{"+o+"}",t);l=a===l?l.replace("{}",t):a,o++}),a?t.attr(a,l):t.html(l)}},noTranslationState=function(){return"true"==window.localStorage.getItem("noTranslationState")},noTranslationStateToggle=function(){window.localStorage.setItem("noTranslationState",!noTranslationState())},addNoTranslationStateButton=function(){$(".header").length&&$(".header").append(`
		
		<button style="
			float: right;
			font-size: 16px;
			padding: 4px 12px;
		"
		onclick="
		window.location.replace('gmmt://'+document.location.hash)
		"
		>打开编辑器</button>

		<button style="
			float: right;
			font-size: 16px;
			padding: 4px 12px;
		"
		onclick="
		noTranslationStateToggle();
		location.reload();
    	event.stopPropagation();
		"
		>切换翻译</button>
		`)},removeExtensionFromHash=function(t){return t.replaceAll("#t=","").replaceAll("%2F","/").replaceAll(".htm","")},$(function(){if(addNoTranslationStateButton(),noTranslationState())return!1;$("div.footer a,h4,caption").each(function(){setTranslator($(this),json_global)}),$("p,h1,h2,h3,td,li,a,div.dropspotnote,figcaption").each(function(){setTranslator($(this),json)}),$("th,.warning,.important,.optional").each(function(){setTranslator($(this),json_global)}),$(".header").length&&(window.setInterval(function(){$("#toc-panel a:not('isTranslate')").each(function(){$(this).addClass("isTranslate"),setTranslator($(this),json_global)}),$(".GlossDefinitionText:not('isTranslate')").each(function(){$(this).addClass("isTranslate"),setTranslator($(this),json_global)})},250),console.log("成功啦!现在正在疯狂翻译菜单中!")),$(".tooltip").each(function(){setTranslator($(this),json_global,"title")})}),document.addEventListener("DOMContentLoaded",()=>{pangu.autoSpacingPage()})</script><script type="text/javascript" language="JavaScript">function reDo(){innerWidth==origWidth&&innerHeight==origHeight||location.reload()}4==parseInt(navigator.appVersion)&&"Netscape"==navigator.appName&&(origWidth=innerWidth,origHeight=innerHeight,onresize=reDo),onerror=null</script><style type="text/css">p.WebHelpNavBar{text-align:right}</style><script type="text/javascript">gCommonRootRelPath=gRootRelPath="../../../..",gTopicId="8.2.2.6.7.0_42"</script><script type="text/javascript" src="../../../../template/scripts/rh.min.js"></script><script type="text/javascript" src="../../../../template/scripts/common.min.js"></script><script type="text/javascript" src="../../../../template/scripts/topic.min.js"></script><script type="text/javascript" src="../../../../template/scripts/topicwidgets.min.js"></script><script type="text/javascript" src="../../../../whxdata/projectsettings.js"></script><link rel="stylesheet" type="text/css" href="../../../../template/styles/topic.min.css"><link rel="stylesheet" type="text/css" href="../../../../template/Charcoal_Grey/topicheader.css"><meta name="topic-status" content="Draft"><meta http-equiv="Content-Type" content="text/html; charset=utf-8"><title>vertex_submit_ext</title><meta name="generator" content="Adobe RoboHelp 2022"><link rel="stylesheet" type="text/css" href="../../../../assets/css/default.css"><script src="../../../../assets/scripts/main_script.js" type="module"></script><meta name="rh-authors" content=""><meta name="topic-comment" content=""><meta name="rh-index-keywords" content="vertex_submit_ext"><meta name="search-keywords" content="vertex_submit_ext"><meta name="template" content="assets/masterpages/Manual_Keyword_Page.htt"><meta name="brsnext" value="GameMaker_Language/GML_Reference/Drawing/Surfaces/Surfaces.htm"><meta name="brsprev" value="GameMaker_Language/GML_Reference/Drawing/Primitives/vertex_submit.htm"></head><body><div class="topic-header rh-hide" id="rh-topic-header"><div class="logo"></div><div class="nav"><div class="title" title="vertex_submit_ext"><span>vertex_submit_ext</span></div><div class="gotohome" title="Click here to see this page in full context"><a href="#" onclick="rh._.goToFullLayout()">Click here to see this page in full context</a></div></div></div><div class="topic-header-shadow rh-hide" id="rh-topic-header-shadow"></div><h1><span data-field="title" data-format="default">vertex_submit_ext</span></h1><p>This function submits a range of vertices in the given vertex buffer to the GPU for drawing.</p><p>The range is provided as an offset and number of vertices to submit. The&nbsp;offset can be any value greater than 0, the number&nbsp;of vertices the actual number to submit,&nbsp;or the value&nbsp;<span class="inline2">-1</span>&nbsp;to indicate that all vertices starting at the offset should be submitted.</p><div data-conref="../../../../assets/snippets/Note_Warning_Surface_Must_Exist.hts"><p class="note"><span data-conref="../../../../assets/snippets/Tag_warning.hts"><span class="warning">WARNING</span></span>&nbsp;When using a surface as the texture (returned by&nbsp;<span class="inline3_func"><a href="../Surfaces/surface_get_texture.htm">surface_get_texture</a></span>), you should make sure that the surface itself exists (<span class="inline3_func"><a href="../Surfaces/surface_exists.htm">surface_exists</a></span>).</p></div><h3>Usage Notes</h3><ul class="colour"><li>This function can only be used in the&nbsp;<a href="../../../../The_Asset_Editors/Object_Properties/Draw_Events.htm">Draw Events</a>.</li><li>The function supports both regular and&nbsp;<a href="vertex_freeze.htm">frozen</a>&nbsp;vertex buffers.</li><li>The number of vertices must be in accordance with the primitive type you're drawing.</li><li>You can use&nbsp;<span class="inline3_func"><a href="vertex_submit.htm">vertex_submit</a></span>&nbsp;if you need to submit the entire vertex buffer.</li><li>Triangle fans (<span class="inline2">pr_trianglefan</span>) are converted to <span class="inline2">pr_trianglelist</span> internally on platforms that don't support them when you call this function.</li></ul><p>&nbsp;</p><h4>Syntax:</h4><p class="code"><span data-field="title" data-format="default">vertex_submit_ext</span>(<span>buffer, primtype, texture, offset, number</span>);</p><table><colgroup><col><col><col></colgroup><tbody><tr><th>Argument</th><th>Type</th><th>Description</th></tr><tr><td>buffer</td><td><span data-keyref="Type_ID_Buffer_Vertex"><a target="_blank" href="vertex_create_buffer.htm">Vertex Buffer</a></span></td><td>The vertex buffer to use.</td></tr><tr><td>primtype</td><td><span data-keyref="Type_Constant_Draw_Primitive_Type"><a target="_blank" href="draw_primitive_begin.htm">Primitive Type Constant</a></span></td><td>The primitive type to use.</td></tr><tr><td>texture</td><td><span data-keyref="Type_Pointer_Texture"><a target="_blank" href="../../Asset_Management/Sprites/Sprite_Information/sprite_get_texture.htm">Texture</a></span></td><td>The texture to use (or <span class="inline2">-1</span> for no texture).</td></tr><tr><td>offset</td><td><span data-keyref="Type_Real"><a target="_blank" href="../../../GML_Overview/Data_Types.htm">Real</a></span></td><td>The offset in the vertex buffer, or, the index of the first vertex in the buffer to submit. Must be &gt; 0. Use <span class="inline2">-1</span> to submit all vertices after the given&nbsp;offset.</td></tr><tr><td>number</td><td><span data-keyref="Type_Real"><a target="_blank" href="../../../GML_Overview/Data_Types.htm">Real</a></span></td><td>The number of vertices to submit. This value is clamped to the size&nbsp;of the vertex buffer.</td></tr></tbody></table><p>&nbsp;</p><h4>Returns:</h4><p class="code"><span data-keyref="Type_Void">N/A</span></p><p>&nbsp;</p><h4>Example 1: Basic Use</h4><p class="code_heading">Draw Event</p><p class="code">&nbsp;<span data-field="title" data-format="default">vertex_submit_ext</span>(vb, pr_trianglelist, -1, 5, 6);</p><p>The above code shows a basic call to the function&nbsp;<span class="inline3_func"><span data-field="title" data-format="default">vertex_submit_ext</span></span>. The number of vertices is 6, which is a multiple of 3, as required for the primitive type used <span class="inline2">pr_trianglelist</span>.</p><p>&nbsp;</p><h4>Example 2: Progressively Drawing a Line</h4><p class="code_heading">Create Event</p><p class="code">vb = vertex_create_buffer();<br>vertex_begin(vb, fmt_default);<br>repeat(100)<br>{<br>&nbsp;&nbsp; &nbsp;vertex_position_3d(vb, random(room_width), random(room_height), 0);<br>&nbsp;&nbsp; &nbsp;vertex_color(vb, c_white, 1);<br>&nbsp;&nbsp; &nbsp;vertex_texcoord(vb, 0, 0);<br>}<br>vertex_end(vb);</p><p class="code_heading">Draw Event</p><p class="code">var _num = (current_time / 1000 * 12) mod (vertex_get_number(vb) + 1);<br><span data-field="title" data-format="default">vertex_submit_ext</span>(vb, pr_linestrip, -1, 0, _num);</p><p>The code example above fills a vertex buffer with 100 random points and then progressively draws more points using the value of the built-in variable&nbsp;<span class="inline2"><a href="../../Maths_And_Numbers/Date_And_Time/current_time.htm">current_time</a></span>.</p><p>In the Create event, a vertex buffer is created using&nbsp;<span class="inline3_func"><a href="vertex_create_buffer.htm">vertex_create_buffer</a></span>. 100 vertices are then added to it in a&nbsp;<a href="../../../GML_Overview/Language_Features/repeat.htm">repeat</a>&nbsp;loop. Every vertex gets a random position in the room, a white colour and a texture coordinate that's unused but must be there, according to the <a href="../../../../Additional_Information/Guide_To_Primitives_And_Vertex_Building.htm#passthrough_vertex_format">passthrough_vertex_format</a> used.</p><p>In the Draw event, the vertex buffer is submitted using&nbsp;<span class="inline3_func"><span data-field="title" data-format="default">vertex_submit_ext</span></span>&nbsp;as a <span class="inline2">pr_linestrip</span>. The starting vertex is always the first&nbsp;one (indicated by the offset value&nbsp;<span class="inline2">0</span>), the number&nbsp;of vertices is calculated using&nbsp;<span class="inline2"><a href="../../Maths_And_Numbers/Date_And_Time/current_time.htm">current_time</a></span>&nbsp;with a modulo&nbsp;operator used to create a simple animation that loops.</p><p>&nbsp;</p><h4>Example 3: Groups of Vertices</h4><p class="code_heading">Create Event</p><p class="code">vb = vertex_create_buffer();<br>arr_groups = [];<br><br>var _px, _py, _col;<br>vertex_begin(vb, fmt_default);<br>for(var i = 0;i &lt; 8;i++)<br>{<br>&nbsp;&nbsp; &nbsp;_px = random(room_width);<br>&nbsp;&nbsp; &nbsp;_py = random(room_height);<br>&nbsp;&nbsp; &nbsp;_col = choose(c_red, c_blue, c_green, c_yellow);<br>&nbsp;&nbsp; &nbsp;repeat(3)<br>&nbsp;&nbsp; &nbsp;{<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;vertex_position_3d(vb, _px + random_range(-20, 20), _py + random_range(-20, 20), 0);<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;vertex_color(vb, _col, 1);<br>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;vertex_texcoord(vb, 0, 0);<br>&nbsp;&nbsp; &nbsp;}<br>&nbsp;&nbsp; &nbsp;array_push(arr_groups, {visible: true, range: {offset: i * 3, num: 3}});<br>}<br>vertex_end(vb);<br>vertex_freeze(vb);</p><p class="code_heading">Draw Event</p><p class="code">var i = 0, _num = array_length(arr_groups);<br>repeat(_num)<br>{<br>&nbsp;&nbsp; &nbsp;var _group = arr_groups[i++];<br>&nbsp;&nbsp; &nbsp;if (!_group.visible) { continue; }<br>&nbsp;&nbsp; &nbsp;vertex_submit_ext(vb, pr_trianglelist, -1, _group.range.offset, _group.range.num);<br>}</p><p>The code example above shows how to treat a vertex buffer as groups of vertices, each given by a range and number of vertices. The visibility&nbsp;of every group&nbsp;of vertices can be set separately.</p><p>In the Create event, a vertex buffer is created and an empty array with it to store info about every range of vertices. A total of 8 triangles are added to the vertex buffer using the default&nbsp;<a href="../../../../Additional_Information/Guide_To_Primitives_And_Vertex_Building.htm#passthrough_vertex_format">passthrough_vertex_format</a>,&nbsp;each with a random position somewhere in the room, a random colour and a random width and height. A&nbsp;<a href="../../../GML_Overview/Structs.htm">struct</a>&nbsp;is also pushed onto the array using&nbsp;<span class="inline3_func"><a href="../../Variable_Functions/array_push.htm">array_push</a></span>&nbsp;that stores the visibility and range of the vertices of each triangle.&nbsp;Finally the vertex buffer is frozen with&nbsp;<span class="inline3_func"><a href="vertex_freeze.htm">vertex_freeze</a></span>&nbsp;so it can be submitted to the GPU faster.</p><p>In the Draw event, all groups of vertices are submitted separately with a call to&nbsp;<span class="inline3_func"><span data-field="title" data-format="default">vertex_submit_ext</span></span>&nbsp;inside a&nbsp;<a href="../../../GML_Overview/Language_Features/repeat.htm">repeat</a> loop. If any group is not visible, it is skipped and the next one is checked.</p><p>&nbsp;</p><p>&nbsp;</p><div class="footer"><div class="buttons"><div class="clear"><div>Back:&nbsp;<a href="Primitives_And_Vertex_Formats.htm">Primitives&nbsp;And Vertex Formats</a></div><div>Next:&nbsp;<a href="draw_primitive_begin.htm">draw_primitive_begin</a></div></div></div><h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2024 All Rights Reserved</span></h5></div></body></html>