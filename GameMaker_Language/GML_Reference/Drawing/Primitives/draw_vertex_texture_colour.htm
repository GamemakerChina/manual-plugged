<!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml"><head><script type="text/javascript" src="../../../../assets/import/jquery-3.6.1.min.js"></script><script type="text/javascript" src="../../../../assets/import/layer/layer.js"></script><script type="text/javascript" src="../../../../assets/import/pangu.min.js"></script><link rel="stylesheet" type="text/css" href="../../../../assets/import/layer/layui_btn.css"><link rel="stylesheet" type="text/css" href="../../../../assets/import/layer/layui_col.css"><link rel="stylesheet" type="text/css" href="../../../../assets/import/layer/theme/default/layer.css"><link rel="stylesheet" type="text/css" href="../../../../assets/import/main.css"><script>let str;removeHtml=function(e){return e=(e=(e=(e=e.replace(/(<([^>]+)>)/gi,"{}")).replace(/\r\n/g,"\n")).replace(/\n/g,"")).replace(/ {2,}/g," ")},retHtml=function(e){return e.match(/(<([^>]+)>)/gi)},setTranslator=function(e,t,o){let i;i=o?e.attr(o):e.html();let n=t[removeHtml(i)];if(null!=n&&n.length){t=retHtml(i);let a=0;t&&t.forEach(function(e,t){var o=n.replace("{"+a+"}",e);n=o===n?n.replace("{}",e):o,a++}),o?e.attr(o,n):e.html(n)}},noTranslationState=function(){return"true"==window.localStorage.getItem("noTranslationState")},noTranslationStateToggle=function(){window.localStorage.setItem("noTranslationState",!noTranslationState())},addNoTranslationStateButton=function(){var e=`
		
		<button style="
			float: right;
			font-size: 16px;
			padding: 4px 12px;
		"
		onclick="
		window.location.replace('gmmt://'+document.location.hash)
		"
		>打开编辑器</button>

		<button style="
			float: right;
			font-size: 16px;
			padding: 4px 12px;
		"
		onclick="
		noTranslationStateToggle();
		location.reload();
    	event.stopPropagation();
		"
		>切换翻译</button>
		`;$(".header").length?$(".header").append(e):($(".topic-header").append(e),$(".topic-header button").css("position","relative").css("top","44px"))},removeExtensionFromHash=function(e){return e.replaceAll("#t=","").replaceAll("%2F","/").replaceAll(".htm","")};let json_global,json_file={'The above code will draw a 4 vertex triangle strip (making a rectangle) textured with the texture held in the "tex" variable, and the whole texture will be used to cover the completed primitive, and it will be blended with four different colours.':'上面的代码将绘制一个4顶点三角形条(制作一个矩形)纹理与"text"变量中保持的纹理，并且整个纹理将被用来覆盖完整的基元，并且它将与四种不同的颜色混合。',"The above code will draw a 4 vertex triangle strip (making a rectangle) textured with the texture held in the {}_tex{}&nbsp;variable, and the whole texture will be used to cover the completed primitive, and it will be blended with four different colours.":"上面的代码将绘制一个 4 顶点三角形条 (形成一个矩形)，并使用 {}_tex{} 变量中保存的纹理进行纹理化，整个纹理将用于覆盖已完成的图元，并将与四种不同的纹理混合颜色。","The alpha to draw this vertex with (0-1).":"使用(0-1 )绘制此顶点的Alpha。","The alpha to draw this vertex with (a value from 0 - 1).":"用于绘制此顶点的 alpha(0 - 1 之间的值)。","The colour to blend with the texture at this vertex (-1 or {}c_white{} for no blending).":"与此顶点处的纹理混合的颜色(对于不混合，为-1或{}c_white{})。","The colour to blend with the texture at this vertex ({}-1{} or {}c_white{} for no blending).":"在此顶点与纹理混合的颜色 ({}-1{} 或 {}c_white{} 表示不混合)。","The x coordinate of the vertex.":"顶点的x坐标。","The x coordinate within the texture (0 refers to the left edge of the sprite image, 1 refers to the right edge).":"纹理内的 x 坐标 (0 指精灵图像的左边缘，1 指右边缘)。","The x coordinate within the texture.":"纹理中的x坐标。","The y coordinate of the vertex.":"顶点的y坐标。","The y coordinate within the texture (0 refers the top edge of the sprite image, 1 refers the bottom edge).":"纹理内的 y 坐标 (0 指精灵图像的顶部边缘，1 指底部边缘)。","The y coordinate within the texture.":"纹理内的y坐标。","This function defines the position of a textured vertex for a primitive. The final look of the primitive will depend on the primitive type chosen to draw (See {}{}draw_primitive_begin(){}{} for more information), the order with which you add the vertices to it, the position of the start and end points that you give for the texture sample and the colour and alpha values that you have set. To maintain the texture appearance while changing only the alpha, a value of -1 (or {}c_white{}) may be used for the colour argument. To end and draw the primitive you must call {}{}draw_primitive_end(){}{}.":"此函数定义基本体的纹理顶点的位置。基本体的最终外观将取决于选择要绘制的基本体类型(有关详细信息，请参阅{}{}draw_primitive_begin(){}{})。添加顶点的顺序、为纹理采样提供的起点和终点的位置以及已设置的颜色和Alpha值。要在仅更改Alpha的同时保持纹理外观，请输入值of-1(或{}c_white{})可用于颜色参数。要结束并绘制基元，必须调用{}{}draw_primitive_end(){}{}。","This function defines the position of a textured vertex for a primitive. The final look of the primitive will depend on the primitive type chosen to draw (See&nbsp;{}{}draw_primitive_begin{}{} for more information), the order with which you add the vertices to it, the position of the start and end points that you give for the texture sample and the colour and alpha values that you have set. To maintain the texture appearance while changing only the alpha, a value of {}-1{} (or {}c_white{}) may be used for the colour argument. To end and draw the primitive you must call {}{}draw_primitive_end{}{}.":"该函数定义图元的纹理顶点的位置。图元的最终外观将取决于选择绘制的图元类型 (有关详细信息，请参阅 {}{}draw_primitive_begin{}{})、向其添加顶点的顺序、起点和终点的位置您为纹理样本提供的值以及您设置的颜色和 alpha 值。为了在仅更改 Alpha 的同时保持纹理外观，可以将值 {}-1{}( 或 {}c_white{}) 用于颜色参数。要结束并绘制图元，您必须调用 {}{}draw_primitive_end{}{}。","{}{}NOTE{}{} For a texture to repeat it must be a power of two in size, ie: 32x32, 128x128, etc...":"{}{}注意{}{}要重复纹理，其大小必须为2的幂，即：32 x 32、128 x 128等...","{}{}NOTE{}{}&nbsp;For a texture to repeat it must be a power of two in size, i.e.: 32x32, 128x128, etc.":"{}{} 注意{}{} 对于要重复的纹理，其大小必须是 2 的幂，即：32x32、128x128 等。"},get_json_global=$.ajax({url:"/global.json",type:"GET",dataType:"json",async:!1,success:function(e){json_global=e}});$(function(){if(addNoTranslationStateButton(),noTranslationState())return!1;$("div.footer a,h4,caption").each(function(){setTranslator($(this),json_global)}),$("p,h1,h2,h3,td,li,a,div.dropspotnote,figcaption").each(function(){setTranslator($(this),json_file)}),$("th,.warning,.important,.optional").each(function(){setTranslator($(this),json_global)}),$(".header").length&&(window.setInterval(function(){$("#toc-panel a:not('isTranslate')").each(function(){$(this).addClass("isTranslate"),setTranslator($(this),json_global)}),$(".GlossDefinitionText:not('isTranslate')").each(function(){$(this).addClass("isTranslate"),setTranslator($(this),json_global)})},250),console.log("成功啦!现在正在疯狂翻译菜单中!")),$(".tooltip").each(function(){setTranslator($(this),json_global,"title")})}),document.addEventListener("DOMContentLoaded",()=>{pangu.autoSpacingPage()})</script><script type="text/javascript" language="JavaScript">function reDo(){innerWidth==origWidth&&innerHeight==origHeight||location.reload()}4==parseInt(navigator.appVersion)&&"Netscape"==navigator.appName&&(origWidth=innerWidth,origHeight=innerHeight,onresize=reDo),onerror=null</script><style type="text/css">p.WebHelpNavBar{text-align:right}</style><script type="text/javascript">gCommonRootRelPath=gRootRelPath="../../../..",gTopicId="8.2.2.6.7.0_7"</script><script type="text/javascript" src="../../../../template/scripts/rh.min.js"></script><script type="text/javascript" src="../../../../template/scripts/common.min.js"></script><script type="text/javascript" src="../../../../template/scripts/topic.min.js"></script><script type="text/javascript" src="../../../../template/scripts/topicwidgets.min.js"></script><script type="text/javascript" src="../../../../whxdata/projectsettings.js"></script><link rel="stylesheet" type="text/css" href="../../../../template/styles/topic.min.css"><link rel="stylesheet" type="text/css" href="../../../../template/Charcoal_Grey/topicheader.css"><meta name="topic-status" content="Draft"><meta http-equiv="Content-Type" content="text/html; charset=utf-8"><title>draw_vertex_texture_colour</title><meta name="generator" content="Adobe RoboHelp 2022"><link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css"><script src="../../../../assets/scripts/main_script.js" type="module"></script><meta name="rh-authors" content="Mark Alexander"><meta name="topic-comment" content="Reference for draw_vertex_texture_colour"><meta name="rh-index-keywords" content="draw_vertex_texture_colour,draw_vertex_texture_color"><meta name="search-keywords" content="draw_vertex_texture_colour,draw_vertex_texture_color"><meta name="is_pure" content="true"><meta name="brsnext" value="GameMaker_Language/GML_Reference/Drawing/Primitives/vertex_format_begin.htm"><meta name="brsprev" value="GameMaker_Language/GML_Reference/Drawing/Primitives/draw_vertex_texture.htm"></head><body><div class="topic-header rh-hide" id="rh-topic-header"><div class="logo"></div><div class="nav"><div class="title" title="draw_vertex_texture_colour"><span>draw_vertex_texture_colour</span></div><div class="gotohome" title="Click here to see this page in full context"><a href="#" onclick="rh._.goToFullLayout()">Click here to see this page in full context</a></div></div></div><div class="topic-header-shadow rh-hide" id="rh-topic-header-shadow"></div><h1><span data-field="title" data-format="default">draw_vertex_texture_colour</span></h1><p>This function defines the position of a textured vertex for a primitive. The final look of the primitive will depend on the primitive type chosen to draw (See&nbsp;<span class="inline3_func"><a href="draw_primitive_begin.htm">draw_primitive_begin</a></span> for more information), the order with which you add the vertices to it, the position of the start and end points that you give for the texture sample and the colour and alpha values that you have set. To maintain the texture appearance while changing only the alpha, a value of <span class="inline2">-1</span> (or <span class="inline2">c_white</span>) may be used for the colour argument. To end and draw the primitive you must call <span class="inline3_func"><a href="draw_primitive_end.htm">draw_primitive_end</a></span>.</p><div data-conref="../../../../assets/snippets/Note_Texture_Repeat_Requires_PowerOfTwo.hts"><p class="note"><span data-conref="../../../../assets/snippets/Tag_note.hts"><span class="note">NOTE</span></span>&nbsp;For a texture to repeat it must be a power of two in size, i.e.: 32x32, 128x128, etc.</p></div><p>&nbsp;</p><h4>Syntax:</h4><p class="code"><span data-field="title" data-format="default">draw_vertex_texture_colour</span>(x, y, xtex, ytex, col, alpha)</p><table><tbody><tr><th>Argument</th><th>Type</th><th>Description</th></tr><tr><td>x</td><td><span data-keyref="Type_Real"><a target="_blank" href="../../../GML_Overview/Data_Types.htm">Real</a></span></td><td>The x coordinate of the vertex.</td></tr><tr><td>y</td><td><span data-keyref="Type_Real"><a target="_blank" href="../../../GML_Overview/Data_Types.htm">Real</a></span></td><td>The y coordinate of the vertex.</td></tr><tr><td>xtex</td><td><span data-keyref="Type_Real"><a target="_blank" href="../../../GML_Overview/Data_Types.htm">Real</a></span></td><td>The x coordinate within the texture (0 refers to the left edge of the sprite image, 1 refers to the right edge).</td></tr><tr><td>ytex</td><td><span data-keyref="Type_Real"><a target="_blank" href="../../../GML_Overview/Data_Types.htm">Real</a></span></td><td>The y coordinate within the texture (0 refers the top edge of the sprite image, 1 refers the bottom edge).</td></tr><tr><td>col</td><td><span data-keyref="Type_Constant_Colour"><a target="_blank" href="../Colour_And_Alpha/Colour_And_Alpha.htm">Colour</a></span></td><td>The colour to blend with the texture at this vertex (<span class="inline2">-1</span> or <span class="inline2">c_white</span> for no blending).</td></tr><tr><td>alpha</td><td><span data-keyref="Type_Real"><a target="_blank" href="../../../GML_Overview/Data_Types.htm">Real</a></span></td><td>The alpha to draw this vertex with (a value from 0 - 1).</td></tr></tbody></table><p>&nbsp;</p><h4>Returns:</h4><p class="code"><span data-keyref="Type_Void">N/A</span></p><p>&nbsp;</p><h4>Example:</h4><p class="code">draw_set_colour(c_white);<br>var _tex = sprite_get_texture(spr_Background, 0);<br>draw_primitive_begin_texture(pr_trianglestrip, _tex);<br>draw_vertex_texture_colour(0, 0, 0, 0, c_fuchsia, 1);<br>draw_vertex_texture_colour(640, 0, 1, 0, c_yellow, 1);<br>draw_vertex_texture_colour(0, 480, 0, 1, c_aqua, 1);<br>draw_vertex_texture_colour(640, 480, 1, 1, c_lime, 1);<br>draw_primitive_end();</p><p>The above code will draw a 4 vertex triangle strip (making a rectangle) textured with the texture held in the <span class="inline2">_tex</span>&nbsp;variable, and the whole texture will be used to cover the completed primitive, and it will be blended with four different colours.</p><p>&nbsp;</p><p>&nbsp;</p><div class="footer"><div class="buttons"><div class="clear"><div style="float:left">Back:&nbsp;<a href="Primitives_And_Vertex_Formats.htm">Primitives&nbsp;And Vertex Formats</a></div><div style="float:right">Next:&nbsp;<a href="vertex_format_begin.htm">vertex_format_begin</a></div></div></div><h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2024 All Rights Reserved</span></h5></div></body></html>