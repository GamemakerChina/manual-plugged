<!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml"><head><script type="text/javascript" src="../../../../assets/import/jquery-3.6.1.min.js"></script><script type="text/javascript" src="../../../../assets/import/layer/layer.js"></script><script type="text/javascript" src="../../../../assets/import/pangu.min.js"></script><link rel="stylesheet" type="text/css" href="../../../../assets/import/layer/layui_btn.css"><link rel="stylesheet" type="text/css" href="../../../../assets/import/layer/layui_col.css"><link rel="stylesheet" type="text/css" href="../../../../assets/import/layer/theme/default/layer.css"><link rel="stylesheet" type="text/css" href="../../../../assets/import/main.css"><script>let str;removeHtml=function(e){return e=(e=(e=(e=e.replace(/(<([^>]+)>)/gi,"{}")).replace(/\r\n/g,"\n")).replace(/\n/g,"")).replace(/ {2,}/g," ")},retHtml=function(e){return e.match(/(<([^>]+)>)/gi)},setTranslator=function(e,t,n){let a;a=n?e.attr(n):e.html();let r=t[removeHtml(a)];if(null!=r&&r.length){t=retHtml(a);let o=0;t&&t.forEach(function(e,t){var n=r.replace("{"+o+"}",e);r=n===r?r.replace("{}",e):n,o++}),n?e.attr(n,r):e.html(r)}},noTranslationState=function(){return"true"==window.localStorage.getItem("noTranslationState")},noTranslationStateToggle=function(){window.localStorage.setItem("noTranslationState",!noTranslationState())},addNoTranslationStateButton=function(){var e=`
		
		<button style="
			float: right;
			font-size: 16px;
			padding: 4px 12px;
		"
		onclick="
		window.location.replace('gmmt://'+document.location.hash)
		"
		>打开编辑器</button>

		<button style="
			float: right;
			font-size: 16px;
			padding: 4px 12px;
		"
		onclick="
		noTranslationStateToggle();
		location.reload();
    	event.stopPropagation();
		"
		>切换翻译</button>
		`;$(".header").length?$(".header").append(e):($(".topic-header").append(e),$(".topic-header button").css("position","relative").css("top","44px"))},removeExtensionFromHash=function(e){return e.replaceAll("#t=","").replaceAll("%2F","/").replaceAll(".htm","")};let json_global,json_file={"Finally, in the Draw event, {}vb2{} is drawn using&nbsp;{}{}vertex_submit{}{}.":"最后，在 Draw 事件中，使用 {}{}vertex_submit{}{} 绘制 {0}vb2{1}。","First, in the Create event, a vertex format identical to the&nbsp;{}Passthrough Vertex Format{}&nbsp;is created and stored in a variable {}vertex_format{}. Then, a new vertex buffer is created and filled with three vertices, according to the vertex format. After that, a second vertex buffer {}vb2{} is created and updated with the vertex data in {}vb{}&nbsp;using {}{}vertex_update_buffer_from_vertex{}{}. After the function call, the vertex data in {}vb2{} will be identical to that in {}vb{}.":"首先，在 Create 事件中，创建与 {} 直通顶点格式 {} 相同的顶点格式并将其存储在变量 {}vertex_format{} 中。然后，根据顶点格式创建一个新的顶点缓冲区并用三个顶点填充。之后，使用 {}{}vertex_update_buffer_from_vertex{}{} 创建第二个顶点缓冲区 {}vb2{}，并使用 {}vb{} 中的顶点数据进行更新。函数调用后，{}vb2{} 中的顶点数据将与 {}vb{} 中的相同。","If the destination vertex buffer never had any vertices added to it, the vertices will be added using the source buffer's vertex format.":"如果目标顶点缓冲区从未添加任何顶点，则将使用源缓冲区的顶点格式添加顶点。","The above code shows how to duplicate a vertex buffer's contents to another, newly created vertex buffer.":"上面的代码显示了如何将顶点缓冲区的内容复制到另一个新创建的顶点缓冲区。","The destination vertex buffer to copy vertices to":"将顶点复制到的目标顶点缓冲区","The destination vertex buffer's&nbsp;{}vertex format{}&nbsp;should have the same attributes as the source vertex buffer (its&nbsp;{}{}Vertex Format{}{}&nbsp;can be different).":"目标顶点缓冲区的 {} 顶点格式 {} 应与源顶点缓冲区具有相同的属性 (其 {}{} 顶点格式 {}{} 可以不同)。","The index&nbsp;of the first vertex in the destination vertex buffer to copy to":"要复制到的目标顶点缓冲区中第一个顶点的索引","The source vertex buffer to copy vertices from":"用于从中复制顶点的源顶点缓冲区","This function updates the contents&nbsp;of a vertex buffer using (part of) the contents&nbsp;of another vertex buffer.":"此函数使用另一个顶点缓冲区的 (部分) 内容来更新顶点缓冲区的内容。","Usage Notes":"使用说明","You can&nbsp;optionally provide the starting vertex and the number&nbsp;of vertices to copy.":"您可以选择提供起始顶点和要复制的顶点数。","{}Writing data outside of the vertex buffer's current size will resize the vertex buffer as required.{}":"{} 写入超出顶点缓冲区当前大小的数据将根据需要调整顶点缓冲区的大小。{}","{}{}IMPORTANT{}{}&nbsp;You cannot pass&nbsp;{}frozen{}&nbsp;vertex buffers into this function.":"{}{} 重要信息{}{} 您无法将 {} 冻结 {} 顶点缓冲区传递到此函数中。","{}{}OPTIONAL{}{}&nbsp;The index&nbsp;of the first vertex in the source vertex buffer to copy":"{}{} 可选{}{} 要复制的源顶点缓冲区中第一个顶点的索引","{}{}OPTIONAL{}{}&nbsp;The number&nbsp;of vertices to copy":"{}{} 可选{}{} 要复制的顶点数"},get_json_global=$.ajax({url:"/global.json",type:"GET",dataType:"json",async:!1,success:function(e){json_global=e}});$(function(){if(addNoTranslationStateButton(),noTranslationState())return!1;$("div.footer a,h4,caption").each(function(){setTranslator($(this),json_global)}),$("p,h1,h2,h3,td,li,a,div.dropspotnote,figcaption").each(function(){setTranslator($(this),json_file)}),$("th,.warning,.important,.optional").each(function(){setTranslator($(this),json_global)}),$(".header").length&&(window.setInterval(function(){$("#toc-panel a:not('isTranslate')").each(function(){$(this).addClass("isTranslate"),setTranslator($(this),json_global)}),$(".GlossDefinitionText:not('isTranslate')").each(function(){$(this).addClass("isTranslate"),setTranslator($(this),json_global)})},250),console.log("成功啦!现在正在疯狂翻译菜单中!")),$(".tooltip").each(function(){setTranslator($(this),json_global,"title")})}),document.addEventListener("DOMContentLoaded",()=>{pangu.autoSpacingPage()})</script><script type="text/javascript" language="JavaScript">function reDo(){innerWidth==origWidth&&innerHeight==origHeight||location.reload()}4==parseInt(navigator.appVersion)&&"Netscape"==navigator.appName&&(origWidth=innerWidth,origHeight=innerHeight,onresize=reDo),onerror=null</script><style type="text/css">p.WebHelpNavBar{text-align:right}</style><script type="text/javascript">gCommonRootRelPath=gRootRelPath="../../../..",gTopicId="8.2.2.6.7.0_23"</script><script type="text/javascript" src="../../../../template/scripts/rh.min.js"></script><script type="text/javascript" src="../../../../template/scripts/common.min.js"></script><script type="text/javascript" src="../../../../template/scripts/topic.min.js"></script><script type="text/javascript" src="../../../../template/scripts/topicwidgets.min.js"></script><script type="text/javascript" src="../../../../whxdata/projectsettings.js"></script><link rel="stylesheet" type="text/css" href="../../../../template/styles/topic.min.css"><link rel="stylesheet" type="text/css" href="../../../../template/Charcoal_Grey/topicheader.css"><meta name="topic-status" content="Draft"><meta http-equiv="Content-Type" content="text/html; charset=utf-8"><title>vertex_update_buffer_from_vertex</title><meta name="generator" content="Adobe RoboHelp 2022"><link rel="stylesheet" type="text/css" href="../../../../assets/css/default.css"><script src="../../../../assets/scripts/main_script.js" type="module"></script><meta name="rh-authors" content=""><meta name="topic-comment" content=""><meta name="rh-index-keywords" content=""><meta name="search-keywords" content=""><meta name="template" content="assets/masterpages/Manual_Keyword_Page.htt"><meta name="brsnext" value="GameMaker_Language/GML_Reference/Drawing/Primitives/vertex_get_buffer_size.htm"><meta name="brsprev" value="GameMaker_Language/GML_Reference/Drawing/Primitives/vertex_update_buffer_from_buffer.htm"></head><body><div class="topic-header rh-hide" id="rh-topic-header"><div class="logo"></div><div class="nav"><div class="title" title="vertex_update_buffer_from_vertex"><span>vertex_update_buffer_from_vertex</span></div><div class="gotohome" title="Click here to see this page in full context"><a href="#" onclick="rh._.goToFullLayout()">Click here to see this page in full context</a></div></div></div><div class="topic-header-shadow rh-hide" id="rh-topic-header-shadow"></div><h1><span data-field="title" data-format="default">vertex_update_buffer_from_vertex</span></h1><p>This function updates the contents&nbsp;of a vertex buffer using (part of) the contents&nbsp;of another vertex buffer.</p><p class="note"><span data-conref="../../../../assets/snippets/Tag_important.hts"><span class="important">IMPORTANT</span></span>&nbsp;You cannot pass&nbsp;<a href="vertex_freeze.htm">frozen</a>&nbsp;vertex buffers into this function.</p><h3>Usage Notes</h3><ul class="Disc"><li>You can&nbsp;optionally provide the starting vertex and the number&nbsp;of vertices to copy.</li><li>The destination vertex buffer's&nbsp;<a href="Primitives_And_Vertex_Formats.htm#func_ref_vertex_formats">vertex format</a>&nbsp;should have the same attributes as the source vertex buffer (its&nbsp;<span data-keyref="Type_ID_Vertex_Format"><a target="_blank" href="vertex_format_end.htm">Vertex Format</a></span>&nbsp;can be different).</li><li>If the destination vertex buffer never had any vertices added to it, the vertices will be added using the source buffer's vertex format.</li><li><span>Writing data outside of the vertex buffer's current size will resize the vertex buffer as required.</span></li></ul><p>&nbsp;</p><h4>Syntax:</h4><p class="code"><span data-field="title" data-format="default">vertex_update_buffer_from_vertex</span>(dest_vbuff, dest_vert, src_vbuff[, src_vert, src_vert_num]);</p><table><colgroup><col><col><col></colgroup><tbody><tr><th>Argument</th><th>Type</th><th>Description</th></tr><tr><td>dest_vbuff</td><td><span data-keyref="Type_ID_Buffer_Vertex"><a target="_blank" href="vertex_create_buffer.htm">Vertex Buffer</a></span></td><td>The destination vertex buffer to copy vertices to</td></tr><tr><td>dest_vert</td><td><span data-keyref="Type_Real"><a target="_blank" href="../../../GML_Overview/Data_Types.htm">Real</a></span></td><td>The index&nbsp;of the first vertex in the destination vertex buffer to copy to</td></tr><tr><td>src_vbuff</td><td><span data-keyref="Type_ID_Buffer_Vertex"><a target="_blank" href="vertex_create_buffer.htm">Vertex Buffer</a></span></td><td>The source vertex buffer to copy vertices from</td></tr><tr><td>src_vert</td><td><span data-keyref="Type_Real"><a target="_blank" href="../../../GML_Overview/Data_Types.htm">Real</a></span></td><td><span data-conref="../../../../assets/snippets/Tag_optional.hts"><span class="optional">OPTIONAL</span></span>&nbsp;The index&nbsp;of the first vertex in the source vertex buffer to copy</td></tr><tr><td>src_vert_num</td><td><span data-keyref="Type_Real"><a target="_blank" href="../../../GML_Overview/Data_Types.htm">Real</a></span></td><td><span data-conref="../../../../assets/snippets/Tag_optional.hts"><span class="optional">OPTIONAL</span></span>&nbsp;The number&nbsp;of vertices to copy</td></tr></tbody></table><p>&nbsp;</p><h4>Returns:</h4><p class="code"><span data-keyref="Type_Void">N/A</span></p><p>&nbsp;</p><h4>Example:</h4><p class="code_heading">Create Event</p><p class="code">vertex_format_begin();<br>vertex_format_add_position_3d();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Three buffer_f32 values<br>vertex_format_add_color();&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;// Four buffer_u8 values<br>vertex_format_add_texcoord();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Two buffer_f32 values<br>vertex_format = vertex_format_end();<br><br>vb = vertex_create_buffer();<br>vertex_begin(vb, vertex_format);<br>vertex_position_3d(vb, 100, 100, 0);<br>vertex_color(vb, c_lime, 1);<br>vertex_texcoord(vb, 0, 0);<br>vertex_position_3d(vb, 200, 100, 0);<br>vertex_color(vb, c_lime, 1);<br>vertex_texcoord(vb, 1, 0);<br>vertex_position_3d(vb, 200, 200, 0);<br>vertex_color(vb, c_lime, 1);<br>vertex_texcoord(vb, 1, 1);<br>vertex_end(vb);<br><br>vb2 = vertex_create_buffer();<br><br><span data-field="title" data-format="default">vertex_update_buffer_from_vertex</span>(vb2, 0, vb);</p><p class="code_heading">Draw Event</p><p class="code">vertex_submit(vb2, pr_trianglelist, -1);</p><p>The above code shows how to duplicate a vertex buffer's contents to another, newly created vertex buffer.</p><p>First, in the Create event, a vertex format identical to the&nbsp;<a href="Primitives_And_Vertex_Formats.htm#passthrough_vertex_format">Passthrough Vertex Format</a>&nbsp;is created and stored in a variable <span class="inline2">vertex_format</span>. Then, a new vertex buffer is created and filled with three vertices, according to the vertex format. After that, a second vertex buffer <span class="inline2">vb2</span> is created and updated with the vertex data in <span class="inline2">vb</span>&nbsp;using <span class="inline3_func"><span data-field="title" data-format="default">vertex_update_buffer_from_vertex</span></span>. After the function call, the vertex data in <span class="inline2">vb2</span> will be identical to that in <span class="inline2">vb</span>.</p><p>Finally, in the Draw event, <span class="inline2">vb2</span> is drawn using&nbsp;<span class="inline3_func"><a href="vertex_submit.htm">vertex_submit</a></span>.</p><p>&nbsp;</p><p>&nbsp;</p><div class="footer"><div class="buttons"><div class="clear"><div>Back:&nbsp;<a href="Primitives_And_Vertex_Formats.htm">Primitives&nbsp;And Vertex Formats</a></div><div>Next:&nbsp;<a href="vertex_get_buffer_size.htm">vertex_get_buffer_size</a></div></div></div><h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2024 All Rights Reserved</span></h5></div></body></html>