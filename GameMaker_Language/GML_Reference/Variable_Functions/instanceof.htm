<!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml"><head><script type="text/javascript" src="../../../assets/import/jquery-3.6.1.min.js"></script><script type="text/javascript" src="../../../assets/import/layer/layer.js"></script><script type="text/javascript" src="../../../assets/import/pangu.min.js"></script><link rel="stylesheet" type="text/css" href="../../../assets/import/layer/layui_btn.css"><link rel="stylesheet" type="text/css" href="../../../assets/import/layer/layui_col.css"><link rel="stylesheet" type="text/css" href="../../../assets/import/layer/theme/default/layer.css"><link rel="stylesheet" type="text/css" href="../../../assets/import/main.css"><script>let str;removeHtml=function(t){return t=(t=(t=(t=t.replace(/(<([^>]+)>)/gi,"{}")).replace(/\r\n/g,"\n")).replace(/\n/g,"")).replace(/ {2,}/g," ")},retHtml=function(t){return t.match(/(<([^>]+)>)/gi)},setTranslator=function(t,e,n){let a;a=n?t.attr(n):t.html();let s=e[removeHtml(a)];if(null!=s&&s.length){e=retHtml(a);let o=0;e&&e.forEach(function(t,e){var n=s.replace("{"+o+"}",t);s=n===s?s.replace("{}",t):n,o++}),n?t.attr(n,s):t.html(s)}},noTranslationState=function(){return"true"==window.localStorage.getItem("noTranslationState")},noTranslationStateToggle=function(){window.localStorage.setItem("noTranslationState",!noTranslationState())},addNoTranslationStateButton=function(){var t=`
		
		<button style="
			float: right;
			font-size: 16px;
			padding: 4px 12px;
		"
		onclick="
		window.location.replace('gmmt://'+document.location.hash)
		"
		>打开编辑器</button>

		<button style="
			float: right;
			font-size: 16px;
			padding: 4px 12px;
		"
		onclick="
		noTranslationStateToggle();
		location.reload();
    	event.stopPropagation();
		"
		>切换翻译</button>
		`;$(".header").length?$(".header").append(t):($(".topic-header").append(t),$(".topic-header button").css("position","relative").css("top","44px"))},removeExtensionFromHash=function(t){return t.replaceAll("#t=","").replaceAll("%2F","/").replaceAll(".htm","")};let json_global,json_file={'If you pass the function a struct literal (i.e.: a struct that was created without using a constructor function) then it will simply return the string {}"struct"{}.':'如果向函数传递结构文字 (即：不使用构造函数创建的结构)，则它将简单地返回字符串 {}"struct"{}。','If you pass the function the&nbsp;{}self{}&nbsp;keyword inside an object instance, it will return {}"instance"{}.':'如果在对象实例中向函数传递{}self{}关键字，它将返回{}"instance"{}。',"In this example we must first define the function that will be used as the constructor for our struct. The following function is defined in a script asset:":"在这个例子中，我们必须首先定义将用作我们结构的构造函数。在脚本资源中定义了以下函数:",'Note that if you pass the function a struct literal (i.e.: a struct that was created without using a constructor function) then it will simply return the string {}"struct"{}.':"请注意，如果你传递函数一个结构文字 (即: 一个没有使用构造函数创建的结构)，那么它将简单地返回字符串{}“struct”{}。",'The returned constructor name will include additional text if the constructor function was not created in a script. If it was created inside an object, its name will include the object and the event where it was created. For example, a constructor called {}test_constructor{} created in the Create event of {}Object1{} will be returned as {}"test_constructor_gml_Object_Object1_Create_0"{}. To avoid this, create your constructors in a {}script{}.':"如果未在脚本中创建构造函数，则返回的构造函数名称将包含其他文本。如果它是在对象内部创建的，则其名称将包括该对象和创建该对象的事件。例如，在{}Object1{}的创建事件中创建的名为{}test_constructor{}的构造函数将返回为{}“test_constructor_gml_Object_Object1_Create_0”{}。为了避免这种情况，请在{}脚本{}中创建构造函数。","The struct reference to use.":"要使用的struct引用。",'This function can also be used to check if a struct reference is a&nbsp;{}{}weak reference{}{}&nbsp;or not, in which case the function will return the string {}"weakref"{} instead of the name of the function that created the struct. For more information, see the function {}{}weak_ref_create(){}{}.':"该函数还可以用来检查struct引用是否是{}{}弱引用{}{}，在这种情况下，函数将返回字符串{}“weakref”{}，而不是创建结构的函数的名称。有关更多信息，请参见函数{}{}weak_ref_create(){}{}。","This function can be used to get the name of the {}constructor function{} that was used to create a struct. The struct itself should have been created using the {}{}{}{} {}{}new{}{} operator along with the constructor itself. You supply the variable with the struct reference to check and the function will return either a string with the constructor name or {}undefined{}.":"此函数可用于获取用于创建结构的{}构造函数{}的名称。结构本身应该是使用{}{}{}{} {}{}new{}{} 运算符以及构造函数本身创建的。您为变量提供要检查的struct引用，该函数将返回具有构造函数名称的字符串或 {}undefined{}。","This function can then be used along with the {}new{} operator to create a struct and populate it with the variables set to the values of the arguments used in the function:":"然后可以将此函数与{}new{}运算符一起使用，以创建一个结构，并使用设置为函数中使用的参数值的变量来填充它:",'This will print the string {}"init_struct"{} to the output log, which is the name of the constructor function as defined in its script.':"这会将字符串{}“init_struct”{}打印到输出日志中，该日志是其脚本中定义的构造函数的名称。","Usage Notes":"用法说明","We can then get the name of the constructor function that was used like this:":"然后，我们可以得到这样使用的构造函数的名称:","{}{}TIP{}{}&nbsp;It's recommended to use&nbsp;{}{}is_instanceof{}{}&nbsp;to check the constructor of a struct, as it additionally allows you to check using parent constructors (i.e. constructors that the struct's constructor may have inherited from).&nbsp;{}{}is_instanceof{}{}&nbsp;also allows you to check using the constructor function reference directly instead of strings.":"{}{}提示{}{} 建议使用 {}{}is_instanceof{}{} 检查结构的构造函数，因为它还允许您使用父构造函数 (即结构的构造函数可能继承自的构造函数) 进行检查。{}{}is_instanceof{}{} 还允许您直接使用构造函数引用而不是字符串进行检查。"},get_json_global=$.ajax({url:"/global.json",type:"GET",dataType:"json",async:!1,success:function(t){json_global=t}});$(function(){if(addNoTranslationStateButton(),noTranslationState())return!1;$("div.footer a,h4,caption").each(function(){setTranslator($(this),json_global)}),$("p,h1,h2,h3,td,li,a,div.dropspotnote,figcaption").each(function(){setTranslator($(this),json_file)}),$("th,.warning,.important,.optional").each(function(){setTranslator($(this),json_global)}),$(".header").length&&(window.setInterval(function(){$("#toc-panel a:not('isTranslate')").each(function(){$(this).addClass("isTranslate"),setTranslator($(this),json_global)}),$(".GlossDefinitionText:not('isTranslate')").each(function(){$(this).addClass("isTranslate"),setTranslator($(this),json_global)})},250),console.log("成功啦!现在正在疯狂翻译菜单中!")),$(".tooltip").each(function(){setTranslator($(this),json_global,"title")})}),document.addEventListener("DOMContentLoaded",()=>{pangu.autoSpacingPage()})</script><script type="text/javascript" language="JavaScript">function reDo(){innerWidth==origWidth&&innerHeight==origHeight||location.reload()}4==parseInt(navigator.appVersion)&&"Netscape"==navigator.appName&&(origWidth=innerWidth,origHeight=innerHeight,onresize=reDo),onerror=null</script><style type="text/css">p.WebHelpNavBar{text-align:right}</style><script type="text/javascript">gCommonRootRelPath=gRootRelPath="../../..",gTopicId="8.2.2.1.0_24"</script><script type="text/javascript" src="../../../template/scripts/rh.min.js"></script><script type="text/javascript" src="../../../template/scripts/common.min.js"></script><script type="text/javascript" src="../../../template/scripts/topic.min.js"></script><script type="text/javascript" src="../../../template/scripts/topicwidgets.min.js"></script><script type="text/javascript" src="../../../whxdata/projectsettings.js"></script><link rel="stylesheet" type="text/css" href="../../../template/styles/topic.min.css"><link rel="stylesheet" type="text/css" href="../../../template/Charcoal_Grey/topicheader.css"><meta name="topic-status" content="Draft"><meta http-equiv="Content-Type" content="text/html; charset=utf-8"><title>instanceof</title><meta name="generator" content="Adobe RoboHelp 2022"><link rel="stylesheet" href="../../../assets/css/default.css" type="text/css"><script src="../../../assets/scripts/main_script.js" type="module"></script><meta name="rh-authors" content="Mark Alexander"><meta name="topic-comment" content="Page explaining the function instanceof"><meta name="rh-index-keywords" content="instanceof"><meta name="search-keywords" content=""><meta name="is_pure" content="true"><meta name="brsnext" value="GameMaker_Language/GML_Reference/Variable_Functions/struct_foreach.htm"><meta name="brsprev" value="GameMaker_Language/GML_Reference/Variable_Functions/static_set.htm"></head><body><div class="topic-header rh-hide" id="rh-topic-header"><div class="logo"></div><div class="nav"><div class="title" title="instanceof"><span>instanceof</span></div><div class="gotohome" title="Click here to see this page in full context"><a href="#" onclick="rh._.goToFullLayout()">Click here to see this page in full context</a></div></div></div><div class="topic-header-shadow rh-hide" id="rh-topic-header-shadow"></div><h1><span data-field="title" data-format="default">instanceof</span></h1><p>This function can be used to get the name of the <a href="../../GML_Overview/Structs.htm">constructor function</a> that was used to create a struct. The struct itself should have been created using the<a href="../../GML_Overview/Language_Features/new.htm"><span class="inline"></span></a> <a href="../../GML_Overview/Language_Features/new.htm"><span class="inline">new</span></a> operator along with the constructor itself. You supply the variable with the struct reference to check and the function will return either a string with the constructor name or <span class="inline">undefined</span>.</p><p class="note"><span data-conref="../../../assets/snippets/Tag_tip.hts"><span class="tip">TIP</span></span>&nbsp;It's recommended to use&nbsp;<span class="inline3_func"><a href="is_instanceof.htm">is_instanceof</a></span>&nbsp;to check the constructor of a struct, as it additionally allows you to check using parent constructors (i.e. constructors that the struct's constructor may have inherited from).&nbsp;<span class="inline3_func"><a href="is_instanceof.htm">is_instanceof</a></span>&nbsp;also allows you to check using the constructor function reference directly instead of strings.</p><h3>Usage Notes</h3><ul class="colour"><li>If you pass the function a struct literal (i.e.: a struct that was created without using a constructor function) then it will simply return the string <span class="inline2">"struct"</span>.</li><li>If you pass the function the&nbsp;<span class="inline2">self</span>&nbsp;keyword inside an object instance, it will return <span class="inline2">"instance"</span>.</li><li>The returned constructor name will include additional text if the constructor function was not created in a script. If it was created inside an object, its name will include the object and the event where it was created. For example, a constructor called <span class="inline2">test_constructor</span> created in the Create event of <strong>Object1</strong> will be returned as <span class="inline2">"test_constructor_gml_Object_Object1_Create_0"</span>. To avoid this, create your constructors in a <a href="../../GML_Overview/Script_Functions.htm">script</a>.</li><li>This function can also be used to check if a struct reference is a&nbsp;<strong><a class="tooltip" title="A&nbsp;weak reference is a reference that does not protect the referenced object from collection by a garbage collector, and so can be used to check if a struct is still &quot;alive&quot; (referenced) or not somewhere in the game.">weak reference</a></strong>&nbsp;or not, in which case the function will return the string <span class="inline2">"weakref"</span> instead of the name of the function that created the struct. For more information, see the function <a href="../Garbage_Collection/weak_ref_create.htm"><span class="inline">weak_ref_create()</span></a>.</li></ul><p>&nbsp;</p><h4>Syntax:</h4><p class="code"><span data-field="title" data-format="default">instanceof</span>(struct_id);</p><table><tbody><tr><th>Argument</th><th>Type</th><th>Description</th></tr><tr><td>struct</td><td><span data-keyref="Type_Struct"><a target="_blank" href="../../GML_Overview/Structs.htm">Struct</a></span></td><td>The struct reference to use.</td></tr></tbody></table><p>&nbsp;</p><h4>Returns:</h4><p class="code"><span data-keyref="Type_String"><a target="_blank" href="../../GML_Overview/Data_Types.htm">String</a></span>&nbsp;or&nbsp;<span data-keyref="Type_Undefined"><a target="_blank" href="../../GML_Overview/Data_Types.htm">undefined</a></span></p><p>&nbsp;</p><h4>Extended Example:</h4><p>In this example we must first define the function that will be used as the constructor for our struct. The following function is defined in a script asset:</p><p class="code">function init_struct(_a, _b, _c) constructor<br>{<br>&nbsp;&nbsp;&nbsp;&nbsp;a = _a;<br>&nbsp;&nbsp;&nbsp;&nbsp;b = _b;<br>&nbsp;&nbsp;&nbsp;&nbsp;c = _c;<br>}</p><p>This function can then be used along with the <span class="inline">new</span> operator to create a struct and populate it with the variables set to the values of the arguments used in the function:</p><p class="code">mystruct = new init_struct(10, 100, "Hello World");</p><p>We can then get the name of the constructor function that was used like this:</p><p class="code">var _name = instanceof(mystruct);<br>if (is_string(_name))<br>{<br>&nbsp;&nbsp;&nbsp;&nbsp;show_debug_message(_name);<br>}</p><p>This will print the string <span class="inline2">"init_struct"</span> to the output log, which is the name of the constructor function as defined in its script.</p><p>&nbsp;</p><p>&nbsp;</p><div class="footer"><div class="buttons"><div class="clear"><div style="float:left">Back: <a href="Variable_Functions.htm">Variable Functions</a></div><div style="float:right">Next:&nbsp;<a href="struct_foreach.htm">struct_foreach</a></div></div></div><h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2024 All Rights Reserved</span></h5></div></body></html>