<!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml"><head><script type="text/javascript" src="../../../assets/import/jquery-3.6.1.min.js"></script><script type="text/javascript" src="../../../assets/import/layer/layer.js"></script><script type="text/javascript" src="../../../assets/import/pangu.min.js"></script><link rel="stylesheet" type="text/css" href="../../../assets/import/layer/layui_btn.css"><link rel="stylesheet" type="text/css" href="../../../assets/import/layer/layui_col.css"><link rel="stylesheet" type="text/css" href="../../../assets/import/layer/theme/default/layer.css"><link rel="stylesheet" type="text/css" href="../../../assets/import/main.css"><script>let str;removeHtml=function(t){return t=(t=(t=(t=t.replace(/(<([^>]+)>)/gi,"{}")).replace(/\r\n/g,"\n")).replace(/\n/g,"")).replace(/ {2,}/g," ")},retHtml=function(t){return t.match(/(<([^>]+)>)/gi)},setTranslator=function(t,n,e){let a;a=e?t.attr(e):t.html();let s=n[removeHtml(a)];if(null!=s&&s.length){n=retHtml(a);let o=0;n&&n.forEach(function(t,n){var e=s.replace("{"+o+"}",t);s=e===s?s.replace("{}",t):e,o++}),e?t.attr(e,s):t.html(s)}},noTranslationState=function(){return"true"==window.localStorage.getItem("noTranslationState")},noTranslationStateToggle=function(){window.localStorage.setItem("noTranslationState",!noTranslationState())},addNoTranslationStateButton=function(){var t=`
		
		<button style="
			float: right;
			font-size: 16px;
			padding: 4px 12px;
		"
		onclick="
		window.location.replace('gmmt://'+document.location.hash)
		"
		>打开编辑器</button>

		<button style="
			float: right;
			font-size: 16px;
			padding: 4px 12px;
		"
		onclick="
		noTranslationStateToggle();
		location.reload();
    	event.stopPropagation();
		"
		>切换翻译</button>
		`;$(".header").length?$(".header").append(t):($(".topic-header").append(t),$(".topic-header button").css("position","relative").css("top","44px"))},removeExtensionFromHash=function(t){return t.replaceAll("#t=","").replaceAll("%2F","/").replaceAll(".htm","")};let json_global,json_file={"It creates a struct from the {}potion{} constructor. Using {}is_instanceof(){}, we can check that the new struct:":"它从 {}potion{} 构造函数创建一个结构。使用 {}is_instanceof(){}，我们可以检查新结构：","The above code shows three constructors:&nbsp;{}item{}, {}potion{} which is a child of {}item{}, and {}enemy{}, which is a separate constructor.":"上面的代码显示了三个构造函数：{}item{}，{}potion{}，它是 {}item{} 的子类，以及 {}enemy{}，它是一个单独的构造函数。","The constructor to check (is the struct an {}instance of{} this constructor?)":"要检查的构造函数(该结构是此构造函数的{}实例{}吗？)",'The struct to check (the "instance")':'要检查的结构("实例")','This function returns whether the given {}struct{}&nbsp;is an "instance of" the given {}constructor{}. You can use this function to check if the constructor used to create your struct was the same one as you supplied in the second argument, or if it\'s a child constructor of your given constructor.':'此函数返回给定的{}结构{}是否为给定的{}构造函数{}的"实例"。您可以使用此函数来检查用于创建结构的构造函数是否与您在第二个参数中提供的构造函数相同，或者它是否是给定构造函数的子构造函数。',"This function works by checking the&nbsp;{}Static Chain{}&nbsp;of your given struct to see if your given constructor is included anywhere in that chain. See:&nbsp;{}Static Struct{}":"此函数通过检查给定结构的{}静态链{}来查看给定构造函数是否包含在该链中的任何位置。请参阅：{}静态结构{}","This means that if your struct was created from constructor {}B{}, and constructor {}B{} is a child of constructor {}A{}, calling {}is_instanceof(struct_of_B, A){} will return {}true{}.":"这意味着，如果您的结构是从构造函数 {}B{} 创建的，并且构造函数 {}B{} 是构造函数 {}A{} 的子级，则调用 {}is_instanceof(struct_of_B，A){} 将返回 {}true{}。",'This way you can check whether a struct "is" something, as {}a potion is an item{}, so it returns {}true{} for both constructors. However if wouldn\'t be true the other way around: {}an item is not a potion{}.':'通过这种方式，您可以检查结构是否"是"某物，因为 {}potion 是 item{}，因此它为两个构造函数返回 {}true{}。然而，如果不是真的，反过来：{}item 不是 potion{}。',"is a {}potion{}":"是一个 {}potion{}","is an {}item{}":"是一个 {}item{}","is not an {}enemy{}":"不是一个 {}enemy{}","{}{}NOTE{}{}&nbsp;If you use&nbsp;{}{}static_set{}{}&nbsp;to replace the static chain of a struct, it will modify the behaviour of this function on that struct, as it checks the static chain to determine inheritance. Using&nbsp;{}{}static_set{}{}&nbsp;is not recommended aside from deserialisation cases where an anonymous struct is loaded back as part of a hierarchy.":"{}{}注意{}{} 如果使用 {}{}static_set{}{} 替换结构的静态链，它将修改该结构上此函数的行为，因为它会检查静态链以确定继承。除了将匿名结构作为层次结构的一部分重新加载的反序列化情况外，不建议使用 {}{}static_set{}{}。"},get_json_global=$.ajax({url:"/global.json",type:"GET",dataType:"json",async:!1,success:function(t){json_global=t}});$(function(){if(addNoTranslationStateButton(),noTranslationState())return!1;$("div.footer a,h4,caption").each(function(){setTranslator($(this),json_global)}),$("p,h1,h2,h3,td,li,a,div.dropspotnote,figcaption").each(function(){setTranslator($(this),json_file)}),$("th,.warning,.important,.optional").each(function(){setTranslator($(this),json_global)}),$(".header").length&&(window.setInterval(function(){$("#toc-panel a:not('isTranslate')").each(function(){$(this).addClass("isTranslate"),setTranslator($(this),json_global)}),$(".GlossDefinitionText:not('isTranslate')").each(function(){$(this).addClass("isTranslate"),setTranslator($(this),json_global)})},250),console.log("成功啦!现在正在疯狂翻译菜单中!")),$(".tooltip").each(function(){setTranslator($(this),json_global,"title")})}),document.addEventListener("DOMContentLoaded",()=>{pangu.autoSpacingPage()})</script><script type="text/javascript" language="JavaScript">function reDo(){innerWidth==origWidth&&innerHeight==origHeight||location.reload()}4==parseInt(navigator.appVersion)&&"Netscape"==navigator.appName&&(origWidth=innerWidth,origHeight=innerHeight,onresize=reDo),onerror=null</script><style type="text/css">p.WebHelpNavBar{text-align:right}</style><script type="text/javascript">gCommonRootRelPath=gRootRelPath="../../..",gTopicId="8.2.2.1.0_21"</script><script type="text/javascript" src="../../../template/scripts/rh.min.js"></script><script type="text/javascript" src="../../../template/scripts/common.min.js"></script><script type="text/javascript" src="../../../template/scripts/topic.min.js"></script><script type="text/javascript" src="../../../template/scripts/topicwidgets.min.js"></script><script type="text/javascript" src="../../../whxdata/projectsettings.js"></script><link rel="stylesheet" type="text/css" href="../../../template/styles/topic.min.css"><link rel="stylesheet" type="text/css" href="../../../template/Charcoal_Grey/topicheader.css"><meta name="topic-status" content="Draft"><meta http-equiv="Content-Type" content="text/html; charset=utf-8"><title>is_instanceof</title><meta name="generator" content="Adobe RoboHelp 2022"><link rel="stylesheet" type="text/css" href="../../../assets/css/default.css"><script src="../../../assets/scripts/main_script.js" type="module"></script><meta name="rh-authors" content="Gurpreet S. Matharoo"><meta name="topic-comment" content="Reference page for the function is_instanceof"><meta name="rh-index-keywords" content="is_instanceof"><meta name="search-keywords" content="is_instanceof"><meta name="template" content="assets/masterpages/Manual_Keyword_Page.htt"><meta name="brsnext" value="GameMaker_Language/GML_Reference/Variable_Functions/static_get.htm"><meta name="brsprev" value="GameMaker_Language/GML_Reference/Variable_Functions/variable_struct_names_count.htm"></head><body><div class="topic-header rh-hide" id="rh-topic-header"><div class="logo"></div><div class="nav"><div class="title" title="is_instanceof"><span>is_instanceof</span></div><div class="gotohome" title="Click here to see this page in full context"><a href="#" onclick="rh._.goToFullLayout()">Click here to see this page in full context</a></div></div></div><div class="topic-header-shadow rh-hide" id="rh-topic-header-shadow"></div><h1><span data-field="title" data-format="default">is_instanceof</span></h1><p>This function returns whether the given <a href="../../GML_Overview/Structs.htm">struct</a>&nbsp;is an "instance of" the given <a href="../../GML_Overview/Structs.htm#constr">constructor</a>. You can use this function to check if the constructor used to create your struct was the same one as you supplied in the second argument, or if it's a child constructor of your given constructor.</p><p>This means that if your struct was created from constructor <span class="inline2">B</span>, and constructor <span class="inline2">B</span> is a child of constructor <span class="inline2">A</span>, calling <span class="inline2">is_instanceof(struct_of_B, A)</span> will return <span class="inline2">true</span>.</p><p>This function works by checking the&nbsp;<a href="../../GML_Overview/Structs/Static_Structs.htm#h">Static Chain</a>&nbsp;of your given struct to see if your given constructor is included anywhere in that chain. See:&nbsp;<a href="../../GML_Overview/Structs/Static_Structs.htm">Static Struct</a></p><p class="note"><span data-conref="../../../assets/snippets/Tag_note.hts"><span class="note">NOTE</span></span>&nbsp;If you use&nbsp;<span class="inline3_func"><a href="static_set.htm">static_set</a></span>&nbsp;to replace the static chain of a struct, it will modify the behaviour of this function on that struct, as it checks the static chain to determine inheritance. Using&nbsp;<span class="inline3_func"><a href="static_set.htm">static_set</a></span>&nbsp;is not recommended aside from deserialisation cases where an anonymous struct is loaded back as part of a hierarchy.</p><p>&nbsp;</p><h4>Syntax:</h4><p class="code"><span data-field="title" data-format="default">is_instanceof</span>(struct, constructor_name);</p><table><colgroup><col><col><col></colgroup><tbody><tr><th>Argument</th><th>Type</th><th>Description</th></tr><tr><td>struct</td><td><span data-keyref="Type_Struct"><a target="_blank" href="../../GML_Overview/Structs.htm">Struct</a></span></td><td>The struct to check (the "instance")</td></tr><tr><td>constructor_name</td><td><span data-keyref="Type_Function"><a target="_blank" href="../../GML_Overview/Script_Functions.htm">Function</a></span></td><td>The constructor to check (is the struct an <strong>instance of</strong> this constructor?)</td></tr></tbody></table><p>&nbsp;</p><h4>Returns:</h4><p class="code"><span data-keyref="Type_Bool"><a target="_blank" href="../../GML_Overview/Data_Types.htm">Boolean</a></span></p><p>&nbsp;</p><h4>Example:</h4><div data-conref="../../../assets/snippets/is_instanceof_example.hts"><p class="code">function item() constructor {}<br><br>function potion() : item() constructor {}<br><br>function enemy() constructor {}<br><br>var _potion = new potion();<br><br>show_debug_message(is_instanceof(_potion, potion)); // true (1)<br>show_debug_message(is_instanceof(_potion, item)); // true (1)<br>show_debug_message(is_instanceof(_potion, enemy)); // false (0)</p><p>The above code shows three constructors:&nbsp;<span class="inline2">item</span>, <span class="inline2">potion</span> which is a child of <span class="inline2">item</span>, and <span class="inline2">enemy</span>, which is a separate constructor.</p><p>It creates a struct from the <span class="inline2">potion</span> constructor. Using <span class="inline2">is_instanceof()</span>, we can check that the new struct:</p><ul class="colour"><li>is a <span class="inline2">potion</span></li><li>is an <span class="inline2">item</span></li><li>is not an <span class="inline2">enemy</span></li></ul><p>This way you can check whether a struct "is" something, as <strong>a potion is an item</strong>, so it returns <span class="inline2">true</span> for both constructors. However if wouldn't be true the other way around: <strong>an item is not a potion</strong>.</p></div><p>&nbsp;</p><p>&nbsp;</p><div class="footer"><div class="buttons"><div class="clear"><div>Back:&nbsp;<a href="Variable_Functions.htm">Variable Functions</a></div><div>Next:&nbsp;<a href="static_get.htm">static_get</a></div></div></div><h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2024 All Rights Reserved</span></h5></div></body></html>