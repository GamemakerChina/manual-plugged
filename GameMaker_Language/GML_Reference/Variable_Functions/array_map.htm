<!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml"><head><script type="text/javascript" src="../../../assets/import/jquery-3.6.1.min.js"></script><script type="text/javascript" src="../../../assets/import/layer/layer.js"></script><script type="text/javascript" src="../../../assets/import/pangu.min.js"></script><link rel="stylesheet" type="text/css" href="../../../assets/import/layer/layui_btn.css"><link rel="stylesheet" type="text/css" href="../../../assets/import/layer/layui_col.css"><link rel="stylesheet" type="text/css" href="../../../assets/import/layer/theme/default/layer.css"><link rel="stylesheet" type="text/css" href="../../../assets/import/main.css"><script>let str;removeHtml=function(e){return e=(e=(e=(e=e.replace(/(<([^>]+)>)/gi,"{}")).replace(/\r\n/g,"\n")).replace(/\n/g,"")).replace(/ {2,}/g," ")},retHtml=function(e){return e.match(/(<([^>]+)>)/gi)},setTranslator=function(e,t,a){let r;r=a?e.attr(a):e.html();let o=t[removeHtml(r)];if(null!=o&&o.length){t=retHtml(r);let n=0;t&&t.forEach(function(e,t){var a=o.replace("{"+n+"}",e);o=a===o?o.replace("{}",e):a,n++}),a?e.attr(a,o):e.html(o)}},noTranslationState=function(){return"true"==window.localStorage.getItem("noTranslationState")},noTranslationStateToggle=function(){window.localStorage.setItem("noTranslationState",!noTranslationState())},addNoTranslationStateButton=function(){var e=`
		
		<button style="
			float: right;
			font-size: 16px;
			padding: 4px 12px;
		"
		onclick="
		window.location.replace('gmmt://'+document.location.hash)
		"
		>打开编辑器</button>

		<button style="
			float: right;
			font-size: 16px;
			padding: 4px 12px;
		"
		onclick="
		noTranslationStateToggle();
		location.reload();
    	event.stopPropagation();
		"
		>切换翻译</button>
		`;$(".header").length?$(".header").append(e):($(".topic-header").append(e),$(".topic-header button").css("position","relative").css("top","44px"))},removeExtensionFromHash=function(e){return e.replaceAll("#t=","").replaceAll("%2F","/").replaceAll(".htm","")};let json_global,json_file={"After the callback is executed for all elements, the modified array is returned. The original array is {}not changed{}; for that, see&nbsp;{}array_map_ext{}.":"对所有元素执行回调后，返回修改后的数组。原始数组为{}未更改{}有关这一点，请参阅 {}array_map_ext{}。","After the callback is executed for all elements, the modified array&nbsp;(or the affected range of it) is returned as a new array. The original array is {}not changed{}; for that, see&nbsp;{}array_map_ext{}.":"对所有元素执行回调后，返回修改后的数组(或其受影响的范围)。原始数组为{}未更改{}有关这一点，请参阅 {}array_map_ext{}。","It creates a function {}_double{} that takes the array element and index, and returns the element multiplied by 2.":"它创建了一个函数 {}_double{}，该函数接受数组元素和索引，并返回乘以 2 的元素。","See information and examples on&nbsp;{}Predicate Function{}.":"请参阅有关{}判断函数{}的信息和示例。","The above code creates an array {}_numbers{} with numbers from 1 to 5.":"上面的代码创建了一个数字介于 1 到 5 之间的数组 {}_numbers{}。",'The above code first creates a function {}vowel_or_consonant{} that checks if the given element (which must be a valid letter) is a vowel. It does that by using&nbsp;{}{}array_any{}{}. If the letter is found, the function returns the string "vowel", if it is not it returns the string "consonant". It then creates an array {}letters{} with the first letters of the alphabet. Finally it calls&nbsp;{}{}array_map{}{}&nbsp;on the {}letters{} array with the {}vowel_or_consonant{} function and assigns the result to {}letter_type{}. This array will contain the text "vowel" or "consonant", depending on whether the element in the original array was a vowel or a consonant.':'上面的代码首先创建一个函数{}vowel_or_consonant{}，用于检查给定元素 (必须是有效字母) 是否是元音。它通过使用{}{}array_any{}{}来做到这一点。如果找到字母，则函数返回字符串 “vowel”，如果不是，则返回字符串 “consonant”。然后，它使用字母表的第一个字母创建一个数组{}letters{}。最后，它用{}{}vowel_or_consonant{}{}函数在{}letters{}数组上调用{}array_map{}，并将结果分配给{}letter_type{}。这个数组将包含 "元音 "或 "辅音 "的文字，取决于原始数组中的元素是元音还是辅音。此数组将包含文本 “vowel” 或 “consonant”，具体取决于原始数组中的元素是元音还是辅音。',"The array to use":"要使用的数组","The callback function you pass into this function should take the following arguments:":"传递到此函数的回调函数应采用以下参数：","The callback function&nbsp;to run on each element":"要在每个元素上运行的回调函数","The current array element":"当前数组元素","The current array element's value":"当前数组元素的值","The current array index":"当前数组索引","The function to use for each element":"用于每个元素的函数","The new value to be used for every index is given by the predicate function.":"用于每个索引的新值由判断函数给出。","The predicate function should return a&nbsp;{}{}Boolean{}{}{}, which affects how the original function modifies or reads the array{}{}.{}":"判断函数应返回{}{}布尔值{}{}{}，这会影响原始函数修改或读取数组的方式{}{}。{}","The&nbsp;{}Predicate Function{}&nbsp;to run on each element":"对每个元素运行的{}判断函数{}","This callback function should return a value of&nbsp;{}{}Any{}{} type that will be applied back to the array element.":"此回调函数应返回一个{}{}任何{}{}将应用于数组元素的类型的值。","This function is then used in an {}array_map{} call, which returns a modified version of the array with all numbers doubled: {}[2, 4, 6, 8, 10]{}.":"然后在一个 {}array_map{} 调用中使用该函数，该调用返回一个修改后的数组版本，所有数字都加倍：{}[2，4，6，8，10]{}。","This function returns a modified version of the given array, based on a callback function.":"此函数基于回调函数返回给定数组的修改版本。","This function returns a {}new{} array that is a modified version of the given array (or a range of it), based on a callback function.":"此函数返回一个{}新{}数组，该数组是基于回调函数的给定数组(或其范围)的修改版本。","This function returns a {}new{} array that is a modified version of the given array {}(or a range of it){}, based on a callback function.":"此函数返回一个{}新{}数组，其中包含数组{}(或数组范围){}中元素的修改版本。","This function returns a {}new{} array with a modified version of the elements in the array or a range of it.":"此函数返回一个{}新{}数组，其中包含数组或数组范围中元素的修改版本。","This function takes a&nbsp;{}Predicate Function{}&nbsp;that operates on the given array. The predicate function is passed the following arguments:":"此函数接受在给定数组上操作的{}判断函数{}。向判断函数传递以下参数：","You provide an array, and a callback function, which is called for each element in the given array. The callback function can return any value, which is applied to that index in a new copy of the array.":"您提供一个数组和一个回调函数，给定数组中的每个元素都会调用该函数。回调函数可以返回任何值，该值应用于数组的新副本中的索引。","You provide an array, and a {}Callback Method{}, which is called for each element in the given array. The callback function can return any value, which is applied to that index in a new copy of the array.":"您提供一个数组和一个{}回调方法{}，给定数组中的每个元素都会调用该函数。回调函数可以返回任何值，该值应用于数组的新副本中的索引。","{}Callback Function{}{}Callback Function{}":"{}回调函数{}{}回调函数{}","{}Predicate Function{}{}Predicate Function{}":"{}判断函数{}{}判断函数{}","{}{}OPTIONAL{}{}&nbsp;The number of elements to traverse. A negative value will traverse the array backwards (i.e. in descending order of indices, e.g. 2 &gt; 1 &gt; 0 instead of 0 &gt; 1 &gt; 2).":"{}{}可选{}{}要遍历的元素数量。负值将向后遍历数组 (即按索引的降序排列，例如2 &gt; 1 &gt; 0而不是0 &gt; 1 &gt; 2)。","{}{}OPTIONAL{}{}&nbsp;The number of elements to traverse. A negative value will traverse the array backwards (i.e. in descending order of indices, e.g. 2, 1, 0 instead of 2, 3, 4). See:&nbsp;{}Offset And Length{}":"{}{}可选{}{} 要遍历的元素数。负值将向后遍历数组(即以索引的降序，例如 2、1、0 而不是 2、3、4)。请参阅：{}偏移量和长度{}","{}{}OPTIONAL{}{}&nbsp;The offset, or starting index, in the array. Setting a negative value will count from the end of the array. The starting index will then be {}array_length(array) + offset{}. See:&nbsp;{}Offset And Length{}":"{}{}可选{}{} 数组中的偏移量或起始索引。设置负值将从数组的末尾开始计数。然后，起始索引将是 {}array_length(array) + offset{}。请参阅：{}偏移量和长度{}","{}{}OPTIONAL{}{}&nbsp;The offset, or the starting index, in the array. Setting a negative value will count from the end of the array. The starting index will then be {}array_length(array) + offset{}.":"{}{}可选{}{}数组中的偏移量或起始索引。设置负值将从数组的末尾开始计数。然后，起始索引将为{}array_length(array) + offset{}."},get_json_global=$.ajax({url:"/global.json",type:"GET",dataType:"json",async:!1,success:function(e){json_global=e}});$(function(){if(addNoTranslationStateButton(),noTranslationState())return!1;$("div.footer a,h4,caption").each(function(){setTranslator($(this),json_global)}),$("p,h1,h2,h3,td,li,a,div.dropspotnote,figcaption").each(function(){setTranslator($(this),json_file)}),$("th,.warning,.important,.optional").each(function(){setTranslator($(this),json_global)}),$(".header").length&&(window.setInterval(function(){$("#toc-panel a:not('isTranslate')").each(function(){$(this).addClass("isTranslate"),setTranslator($(this),json_global)}),$(".GlossDefinitionText:not('isTranslate')").each(function(){$(this).addClass("isTranslate"),setTranslator($(this),json_global)})},250),console.log("成功啦!现在正在疯狂翻译菜单中!")),$(".tooltip").each(function(){setTranslator($(this),json_global,"title")})}),document.addEventListener("DOMContentLoaded",()=>{pangu.autoSpacingPage()})</script><script type="text/javascript" language="JavaScript">function reDo(){innerWidth==origWidth&&innerHeight==origHeight||location.reload()}4==parseInt(navigator.appVersion)&&"Netscape"==navigator.appName&&(origWidth=innerWidth,origHeight=innerHeight,onresize=reDo),onerror=null</script><style type="text/css">p.WebHelpNavBar{text-align:right}</style><script type="text/javascript">gCommonRootRelPath=gRootRelPath="../../..",gTopicId="8.2.2.2.0_33"</script><script type="text/javascript" src="../../../template/scripts/rh.min.js"></script><script type="text/javascript" src="../../../template/scripts/common.min.js"></script><script type="text/javascript" src="../../../template/scripts/topic.min.js"></script><script type="text/javascript" src="../../../template/scripts/topicwidgets.min.js"></script><script type="text/javascript" src="../../../whxdata/projectsettings.js"></script><link rel="stylesheet" type="text/css" href="../../../template/styles/topic.min.css"><link rel="stylesheet" type="text/css" href="../../../template/Charcoal_Grey/topicheader.css"><meta name="topic-status" content="Draft"><meta http-equiv="Content-Type" content="text/html; charset=utf-8"><title>array_map</title><meta name="generator" content="Adobe RoboHelp 2022"><link rel="stylesheet" type="text/css" href="../../../assets/css/default.css"><script src="../../../assets/scripts/main_script.js" type="module"></script><meta name="rh-authors" content=""><meta name="topic-comment" content=""><meta name="rh-index-keywords" content="array_map"><meta name="search-keywords" content="array_map"><meta name="template" content="assets/masterpages/Manual_Keyword_Page.htt"><meta name="brsnext" value="GameMaker_Language/GML_Reference/Variable_Functions/array_unique.htm"><meta name="brsprev" value="GameMaker_Language/GML_Reference/Variable_Functions/array_filter.htm"></head><body><div class="topic-header rh-hide" id="rh-topic-header"><div class="logo"></div><div class="nav"><div class="title" title="array_map"><span>array_map</span></div><div class="gotohome" title="Click here to see this page in full context"><a href="#" onclick="rh._.goToFullLayout()">Click here to see this page in full context</a></div></div></div><div class="topic-header-shadow rh-hide" id="rh-topic-header-shadow"></div><h1><span data-field="title" data-format="default">array_map</span></h1><p>This function returns a <strong>new</strong> array that is a modified version of the given array (or a range of it), based on a callback function.</p><p>You provide an array, and a <a href="Array_Functions.htm#h2">Callback Method</a>, which is called for each element in the given array. The callback function can return any value, which is applied to that index in a new copy of the array.</p><p>After the callback is executed for all elements, the modified array&nbsp;(or the affected range of it) is returned as a new array. The original array is <strong>not changed</strong>; for that, see&nbsp;<a href="array_map_ext.htm">array_map_ext</a>.</p><p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down2" href="../../../assets/snippets/Syntax_predicate_general.hts#"><span data-open-text="true" data-skip-index="true">Callback Function</span><span data-close-text="true">Callback Function</span></a></p><div class="droptext" data-targetname="drop-down2"><p>The callback function you pass into this function should take the following arguments:</p><h4>Syntax:</h4><p class="code">function(element, index);</p><table class="cke_show_border"><tbody><tr><th>Argument</th><th>Type</th><th>Description</th></tr><tr><td>element</td><td><span data-keyref="Type_Any"><a target="_blank" href="../../GML_Overview/Data_Types.htm#variable">Any</a></span></td><td>The current array element</td></tr><tr><td>index</td><td><span data-keyref="Type_Real"><a target="_blank" href="../../GML_Overview/Data_Types.htm">Real</a></span></td><td>The current array index</td></tr></tbody></table><p>This callback function should return a value of&nbsp;<span data-keyref="Type_Any"><a target="_blank" href="../../GML_Overview/Data_Types.htm#variable">Any</a></span> type that will be applied back to the array element.</p></div><p>&nbsp;</p><div data-conref="../../../assets/snippets/Syntax_Callback_function.hts"><h4>Syntax:</h4><p class="code"><span data-field="title" data-format="default" title="Field [title]" data-tcx-title="Field [title]">array_map</span>(array, function, [offset], [length]);</p><table class="cke_show_border"><colgroup><col><col><col></colgroup><tbody><tr><th>Argument</th><th>Type</th><th>Description</th></tr><tr><td>array</td><td><span data-keyref="Type_Array" title="Variable [Type_Array]" data-tcx-title="Variable [Type_Array]"><a target="_blank" href="../../GML_Overview/Arrays.htm">Array</a></span></td><td>The array to use</td></tr><tr><td>function</td><td><span data-keyref="Type_Function" title="Variable [Type_Function]" data-tcx-title="Variable [Type_Function]"><a target="_blank" href="../../GML_Overview/Script_Functions.htm">Function</a></span></td><td>The callback function&nbsp;to run on each element</td></tr><tr><td>offset</td><td><span data-keyref="Type_Real" title="Variable [Type_Real]" data-tcx-title="Variable [Type_Real]"><a target="_blank" href="../../GML_Overview/Data_Types.htm">Real</a></span></td><td><span data-conref="../../../assets/snippets/Tag_optional.hts" title="Snippet [assets/snippets/Tag_optional.hts]" data-tcx-title="Snippet [assets/snippets/Tag_optional.hts]"><span class="optional">OPTIONAL</span></span>&nbsp;The offset, or starting index, in the array. Setting a negative value will count from the end of the array. The starting index will then be <span class="inline2">array_length(array) + offset</span>. See:&nbsp;<a href="Array_Functions.htm#h1" title="Cross-reference [I:/yy_Manual_Repo/Manual/contents/GameMaker_Language/GML_Reference/Variable_Functions/Array_Functions.htm#h1]" data-tcx-title="Cross-reference [I:/yy_Manual_Repo/Manual/contents/GameMaker_Language/GML_Reference/Variable_Functions/Array_Functions.htm#h1]">Offset And Length</a></td></tr><tr><td>length</td><td><span data-keyref="Type_Real" title="Variable [Type_Real]" data-tcx-title="Variable [Type_Real]"><a target="_blank" href="../../GML_Overview/Data_Types.htm">Real</a></span></td><td><span data-conref="../../../assets/snippets/Tag_optional.hts" title="Snippet [assets/snippets/Tag_optional.hts]" data-tcx-title="Snippet [assets/snippets/Tag_optional.hts]"><span class="optional">OPTIONAL</span></span>&nbsp;The number of elements to traverse. A negative value will traverse the array backwards (i.e. in descending order of indices, e.g. 2, 1, 0 instead of 2, 3, 4). See:&nbsp;<a href="Array_Functions.htm#h1" title="Cross-reference [I:/yy_Manual_Repo/Manual/contents/GameMaker_Language/GML_Reference/Variable_Functions/Array_Functions.htm#h1]" data-tcx-title="Cross-reference [I:/yy_Manual_Repo/Manual/contents/GameMaker_Language/GML_Reference/Variable_Functions/Array_Functions.htm#h1]">Offset And Length</a></td></tr></tbody></table></div><p>&nbsp;</p><h4>Returns:</h4><p class="code"><span data-keyref="Type_Array"><a target="_blank" href="../../GML_Overview/Arrays.htm">Array</a></span></p><p>&nbsp;</p><div class="droptext" data-targetname="drop-down">&nbsp;</div><h4>Example:</h4><p class="code">var _numbers = [1, 2, 3, 4, 5];<br><br>var _double = function (_element, _index)<br>{<br>&nbsp;&nbsp; &nbsp;return _element * 2;<br>}<br><br>var _numbers_doubled = array_map(_numbers, _double);</p><p>The above code creates an array <span class="inline2">_numbers</span> with numbers from 1 to 5.</p><p>It creates a function <span class="inline2">_double</span> that takes the array element and index, and returns the element multiplied by 2.</p><p>This function is then used in an <span class="inline2">array_map</span> call, which returns a modified version of the array with all numbers doubled: <span class="inline2">[2, 4, 6, 8, 10]</span>.</p><p>&nbsp;</p><p>&nbsp;</p><div class="footer"><div class="buttons"><div class="clear"><div>Back:&nbsp;<a href="Array_Functions.htm">Array Functions</a></div><div>Next:&nbsp;<a href="array_unique.htm">array_unique</a></div></div></div><h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2024 All Rights Reserved</span></h5></div></body></html>