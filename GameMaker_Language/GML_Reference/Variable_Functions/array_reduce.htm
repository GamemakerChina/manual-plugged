<!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml"><head><script type="text/javascript" src="../../../assets/import/jquery-3.6.1.min.js"></script><script type="text/javascript" src="../../../assets/import/layer/layer.js"></script><script type="text/javascript" src="../../../assets/import/pangu.min.js"></script><link rel="stylesheet" type="text/css" href="../../../assets/import/layer/layui_btn.css"><link rel="stylesheet" type="text/css" href="../../../assets/import/layer/layui_col.css"><link rel="stylesheet" type="text/css" href="../../../assets/import/layer/theme/default/layer.css"><link rel="stylesheet" type="text/css" href="../../../assets/import/main.css"><script>let str;removeHtml=function(e){return e=(e=(e=(e=e.replace(/(<([^>]+)>)/gi,"{}")).replace(/\r\n/g,"\n")).replace(/\n/g,"")).replace(/ {2,}/g," ")},retHtml=function(e){return e.match(/(<([^>]+)>)/gi)},setTranslator=function(e,t,a){let r;r=a?e.attr(a):e.html();let i=t[removeHtml(r)];if(null!=i&&i.length){t=retHtml(r);let n=0;t&&t.forEach(function(e,t){var a=i.replace("{"+n+"}",e);i=a===i?i.replace("{}",e):a,n++}),a?e.attr(a,i):e.html(i)}},noTranslationState=function(){return"true"==window.localStorage.getItem("noTranslationState")},noTranslationStateToggle=function(){window.localStorage.setItem("noTranslationState",!noTranslationState())},addNoTranslationStateButton=function(){var e=`
		
		<button style="
			float: right;
			font-size: 16px;
			padding: 4px 12px;
		"
		onclick="
		window.location.replace('gmmt://'+document.location.hash)
		"
		>打开编辑器</button>

		<button style="
			float: right;
			font-size: 16px;
			padding: 4px 12px;
		"
		onclick="
		noTranslationStateToggle();
		location.reload();
    	event.stopPropagation();
		"
		>切换翻译</button>
		`;$(".header").length?$(".header").append(e):($(".topic-header").append(e),$(".topic-header button").css("position","relative").css("top","44px"))},removeExtensionFromHash=function(e){return e.replaceAll("#t=","").replaceAll("%2F","/").replaceAll(".htm","")};let json_global,json_file={"Any&nbsp;(the final {}return{} value)":"任意(最终{}返回{}值)","Finally it calls&nbsp;{}{}array_reduce{}{}&nbsp;on the array, using {}_min_value{} as the callback function, and stores the final result in a temporary variable {}value{}. This variable will contain {}1{} as that is the smallest value in the array.":"最后，它使用 {4}_min_value{5} 作为回调函数，对数组调用 {}{}arrayReduce{}{}，并将最终结果存储在临时变量 {}value{} 中。此变量将包含 {}1{}，因为这是数组中的最小值。","Finally there are a couple of special cases, which are handled as follows:&nbsp;":"最后还有几个特殊情况，处理如下：","If the array has one element and no initial value is given, the function returns the first array element.":"如果数组只有一个元素，并且没有给出初始值，则该函数返回第一个数组元素。","If the array is empty and an initial value is supplied, the function returns that initial value. If none is given, the function throws an error.":"如果数组为空并且提供了初始值，则该函数返回该初始值。如果没有给出，该函数将抛出错误。","If you supply the {}init{} parameter to this function, the first iteration will not be skipped, and the {}previous{} parameter for the first element's callback will be set to the {}init{} value you passed.":"如果您向此函数提供了 {}init{} 参数，则不会跳过第一次迭代，并且第一个元素回调的 {}previous{} 参数将被设置为您传递的 {}init{} 值。","The above code tries to find the smallest value in an array. It first creates a temporary array {}array{} and fills it with a set of numbers.":"上面的代码尝试查找数组中的最小值。它首先创建一个临时数组 {}array{} 并用一组数字填充它。","The above piece of code first creates a temporary array {}array{} and fills it with a couple of numbers. It then creates a new function {}min_value{} that returns the minimum of its {}previous{} and {}current{} arguments. Finally it calls&nbsp;{}{}array_reduce{}{}&nbsp;on the array and stores the result in a temporary variable {}value{}. This variable will contain -1 as that is the smallest value in the array.":"上面这段代码首先创建了一个临时数组{}array{}，并将几个数字填入其中。 然后，它创建了一个新函数{}min_value{}，返回其{}previous{}和{}current{}参数的最小值。 最后，它对数组调用&nbsp;{}{}array_reduce{}{}&nbsp;，并将结果存储在一个临时变量{}value{}中。 这个变量将包含-1，因为那是数组中最小的值。","The array to use":"要使用的数组","The current element of the iteration":"迭代的当前元素","The current index of the iteration":"迭代的当前索引","The element value of the current iteration":"当前迭代的元素值","The first time this callback function is called, its {}previous{} argument is set to the value of the first array element (or the element at the given {}offset{}), and the first iteration of the array range is skipped, meaning callbacks start from the second element in the given range.":"第一次调用此回调函数时，其 {}previous{} 参数被设置为第一个数组元素 (或给定 {}offset{} 处的元素) 的值，并且跳过数组范围的第一次迭代，这意味着回调从给定范围内的第二个元素开始。","The function to use for each element":"用于每个元素的函数","The index of the current iteration":"当前迭代的索引","The initial value to use as the first carried value. If none is provided this defaults to&nbsp;{}array[offset]{}.":"用来作为第一个携带的初始值。 如果没有提供，则默认为&nbsp;{}array[offset]{}。","The value returned by the previous iteration":"前一次迭代返回的值","Then it creates a new function {}min_value{} that returns either the&nbsp;{}previous{} or&nbsp;{}current{} argument, whichever is smaller.":"然后，它创建一个新函数 {}min_value{}，该函数返回 {}previous{} 或 {}current{} 参数中较小的一个。","This function is used to obtain one value from an array, by processing all array elements one-by-one.":"此函数用于逐个处理所有数组元素，从而从数组中获取一个值。","When the callback function returns a value, it's carried over into the next iteration. This process is repeated, until the given array (or the provided range) has been fully iterated. The function returns the value obtained from the final element's callback.":"当回调函数返回一个值时，它将被带到下一次迭代中。重复此过程，直到完全迭代给定的数组(或提供的范围)。该函数返回从最终元素的回调中获得的值。","You supply a callback function which runs for each element of the given array. The callback function must return a value, which is passed to the next element's callback, in its {}previous{} argument.":"您提供了一个回调函数，该函数为给定数组的每个元素运行。回调函数必须在其{}前一个{}参数中返回一个值，该值被传递给下一个元素的回调。","You supply a {}Callback Method{} which runs for each element of the given array. The callback function must return a value, which is passed to the next element's callback, in its {}previous{} argument.":"您提供了一个{}回调方法{}，该函数为给定数组的每个元素运行。回调函数必须在其{}前一个{}参数中返回一个值，该值被传递给下一个元素的回调。","{}Callback Function {}{}Callback Function {}":"{}回调函数{}{}回调函数{}","{}This function {}reduces{} the elements of the array (or a range of it) to a single value.{}":"{}这个函数{}将{}数组(或数组的某个范围)中的元素变为一个单一的值。{}","{}To do this, the function executes the predicate function for all elements of the array and carries the return value into the next execution. It returns the return value of the last execution of the predicate function.{}":"{}为此，该函数对数组的所有元素执行判断函数，并将返回值带入下一次执行。 它返回判断函数最后一次执行的返回值。{}。","{}{}IMPORTANT{}{}&nbsp;The {}carry{} is the result of the previous call to the predicate function (for the previous array index). For the first call to the predicate function this depends on the value of {}init{}. If you don't provide a value for {}init{}&nbsp;it will default to {}array[offset]{}&nbsp;and the first iteration will be skipped. If you do provide a value for {}init{}&nbsp;it will be used as the carry value in the first iteration.":"{}{}重要{}{}&nbsp;{}carry{}是之前调用判断函数的结果(针对前一个数组索引)。对于第一次调用判断函数，这取决于{}init{}的值。如果你没有为{}init{}提供一个值，它将默认为{}array[offset]{}&nbsp;并且第一次迭代将被跳过。如果你提供了{}init{}&nbsp;的值，它将被用作第一次迭代的携带值。","{}{}OPTIONAL{}{}&nbsp;The initial value to use as the first carried value. If none is provided this defaults to&nbsp;{}array[offset]{}&nbsp;and the first iteration is skipped.":"{}{}可选{}{} 用作第一个进位值的初始值。如果未提供，则默认为 {}array[offset]{} ，并跳过第一次迭代。","{}{}OPTIONAL{}{}&nbsp;The number of elements to traverse. A negative value will traverse the array backwards (i.e. in descending order of indices, e.g. 2 &gt; 1 &gt; 0 instead of 0 &gt; 1 &gt; 2).":"{}{}可选{}{}&nbsp;要遍历的元素数量。负值将反向遍历数组(即按索引降序排列，例如，2 &gt; 1 &gt; 0而不是0 &gt; 1 &gt; 2)","{}{}OPTIONAL{}{}&nbsp;The number of elements to traverse. A negative value will traverse the array backwards (i.e. in descending order of indices, e.g. 2 &gt; 1 &gt; 0 instead of 0 &gt; 1 &gt; 2). See&nbsp;{}Offset And Length{}":"{}{}可选{}{} 要遍历的元素数。负值将向后遍历数组(即按索引的降序排列，例如 2>1>0 而不是 0>1>2)。请参阅 {}偏移量和长度{}","{}{}OPTIONAL{}{}&nbsp;The offset, or the starting index, in the array. Setting a negative value will count from the end of the array. The starting index will then be {}array_length(array) + offset{}.":"{}{}可选{}{}&nbsp;数组中的偏移量，或起始索引。<br>设置一个负值将从数组的末端开始计算。 然后，起始索引将是{}array_length(array) + offset{}。","{}{}OPTIONAL{}{}&nbsp;The offset, or the starting index, in the array. Setting a negative value will count from the end of the array. The starting index will then be {}array_length(array) + offset{}. See&nbsp;{}Offset And Length{}":"{}{}可选{}{} 数组中的偏移量或起始索引。设置负值将从数组的末尾开始计数。然后，起始索引将是 {}array_length(array) + offset{}。请参阅 {}偏移量和长度{}"},get_json_global=$.ajax({url:"/global.json",type:"GET",dataType:"json",async:!1,success:function(e){json_global=e}});$(function(){if(addNoTranslationStateButton(),noTranslationState())return!1;$("div.footer a,h4,caption").each(function(){setTranslator($(this),json_global)}),$("p,h1,h2,h3,td,li,a,div.dropspotnote,figcaption").each(function(){setTranslator($(this),json_file)}),$("th,.warning,.important,.optional").each(function(){setTranslator($(this),json_global)}),$(".header").length&&(window.setInterval(function(){$("#toc-panel a:not('isTranslate')").each(function(){$(this).addClass("isTranslate"),setTranslator($(this),json_global)}),$(".GlossDefinitionText:not('isTranslate')").each(function(){$(this).addClass("isTranslate"),setTranslator($(this),json_global)})},250),console.log("成功啦!现在正在疯狂翻译菜单中!")),$(".tooltip").each(function(){setTranslator($(this),json_global,"title")})}),document.addEventListener("DOMContentLoaded",()=>{pangu.autoSpacingPage()})</script><script type="text/javascript" language="JavaScript">function reDo(){innerWidth==origWidth&&innerHeight==origHeight||location.reload()}4==parseInt(navigator.appVersion)&&"Netscape"==navigator.appName&&(origWidth=innerWidth,origHeight=innerHeight,onresize=reDo),onerror=null</script><style type="text/css">p.WebHelpNavBar{text-align:right}</style><script type="text/javascript">gCommonRootRelPath=gRootRelPath="../../..",gTopicId="8.2.2.2.0_28"</script><script type="text/javascript" src="../../../template/scripts/rh.min.js"></script><script type="text/javascript" src="../../../template/scripts/common.min.js"></script><script type="text/javascript" src="../../../template/scripts/topic.min.js"></script><script type="text/javascript" src="../../../template/scripts/topicwidgets.min.js"></script><script type="text/javascript" src="../../../whxdata/projectsettings.js"></script><link rel="stylesheet" type="text/css" href="../../../template/styles/topic.min.css"><link rel="stylesheet" type="text/css" href="../../../template/Charcoal_Grey/topicheader.css"><meta name="topic-status" content="Draft"><meta http-equiv="Content-Type" content="text/html; charset=utf-8"><title>array_reduce</title><meta name="generator" content="Adobe RoboHelp 2022"><link rel="stylesheet" type="text/css" href="../../../assets/css/default.css"><script src="../../../assets/scripts/main_script.js" type="module"></script><meta name="rh-authors" content=""><meta name="topic-comment" content=""><meta name="rh-index-keywords" content="array_reduce"><meta name="search-keywords" content="array_reduce"><meta name="template" content="assets/masterpages/Manual_Keyword_Page.htt"><meta name="brsnext" value="GameMaker_Language/GML_Reference/Variable_Functions/array_concat.htm"><meta name="brsprev" value="GameMaker_Language/GML_Reference/Variable_Functions/array_foreach.htm"></head><body><div class="topic-header rh-hide" id="rh-topic-header"><div class="logo"></div><div class="nav"><div class="title" title="array_reduce"><span>array_reduce</span></div><div class="gotohome" title="Click here to see this page in full context"><a href="#" onclick="rh._.goToFullLayout()">Click here to see this page in full context</a></div></div></div><div class="topic-header-shadow rh-hide" id="rh-topic-header-shadow"></div><h1><span data-field="title" data-format="default">array_reduce</span></h1><p>This function is used to obtain one value from an array, by processing all array elements one-by-one.</p><p>You supply a <a href="Array_Functions.htm#h2">Callback Method</a> which runs for each element of the given array. The callback function must return a value, which is passed to the next element's callback, in its <span class="inline2">previous</span> argument.</p><p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down1" href="#"><span data-open-text="true" data-skip-index="true">Callback Function</span> <span data-close-text="true">Callback Function</span></a></p><div class="droptext" data-targetname="drop-down1"><h4>Syntax:</h4><p class="code">function(previous, current, index);</p><table class="cke_show_border"><tbody><tr><th>Argument</th><th>Type</th><th>Description</th></tr><tr><td>previous</td><td><span data-keyref="Type_Any"><a target="_blank" href="../../GML_Overview/Data_Types.htm#variable">Any</a></span></td><td>The value returned by the previous iteration</td></tr><tr><td>current</td><td><span data-keyref="Type_Any"><a target="_blank" href="../../GML_Overview/Data_Types.htm#variable">Any</a></span></td><td>The element value of the current iteration</td></tr><tr><td>index</td><td><span data-keyref="Type_Real"><a target="_blank" href="../../GML_Overview/Data_Types.htm">Real</a></span></td><td>The index of the current iteration</td></tr></tbody></table><p>&nbsp;</p></div><p>The first time this callback function is called, its <span class="inline2">previous</span> argument is set to the value of the first array element (or the element at the given <span class="inline2">offset</span>), and the first iteration of the array range is skipped, meaning callbacks start from the second element in the given range.</p><p>If you supply the <span class="inline2">init</span> parameter to this function, the first iteration will not be skipped, and the <span class="inline2">previous</span> parameter for the first element's callback will be set to the <span class="inline2">init</span> value you passed.</p><p>When the callback function returns a value, it's carried over into the next iteration. This process is repeated, until the given array (or the provided range) has been fully iterated. The function returns the value obtained from the final element's callback.</p><p>Finally there are a couple of special cases, which are handled as follows:&nbsp;</p><ul class="colour"><li>If the array has one element and no initial value is given, the function returns the first array element.</li><li>If the array is empty and an initial value is supplied, the function returns that initial value. If none is given, the function throws an error.</li></ul><p>&nbsp;</p><h4>Syntax:</h4><p class="code"><span data-field="title" data-format="default">array_reduce</span>(array, function, [init], [offset], [length]);</p><table><colgroup><col><col><col></colgroup><tbody><tr><th>Argument</th><th>Type</th><th>Description</th></tr><tr><td>array</td><td><span data-keyref="Type_Array"><a target="_blank" href="../../GML_Overview/Arrays.htm">Array</a></span></td><td>The array to use</td></tr><tr><td>function</td><td><span data-keyref="Type_Function"><a target="_blank" href="../../GML_Overview/Script_Functions.htm">Function</a></span></td><td>The function to use for each element</td></tr><tr><td>init</td><td><span data-keyref="Type_Any"><a target="_blank" href="../../GML_Overview/Data_Types.htm#variable">Any</a></span></td><td><span data-conref="../../../assets/snippets/Tag_optional.hts"><span class="optional">OPTIONAL</span></span>&nbsp;The initial value to use as the first carried value. If none is provided this defaults to&nbsp;<span class="inline2">array[offset]</span>&nbsp;and the first iteration is skipped.</td></tr><tr><td>offset</td><td><span data-keyref="Type_Real"><a target="_blank" href="../../GML_Overview/Data_Types.htm">Real</a></span></td><td><span data-conref="../../../assets/snippets/Tag_optional.hts"><span class="optional">OPTIONAL</span></span>&nbsp;The offset, or the starting index, in the array. Setting a negative value will count from the end of the array. The starting index will then be <span class="inline2">array_length(array) + offset</span>. See&nbsp;<a href="Array_Functions.htm#h1">Offset And Length</a></td></tr><tr><td>length</td><td><span data-keyref="Type_Real"><a target="_blank" href="../../GML_Overview/Data_Types.htm">Real</a></span></td><td><span data-conref="../../../assets/snippets/Tag_optional.hts"><span class="optional">OPTIONAL</span></span>&nbsp;The number of elements to traverse. A negative value will traverse the array backwards (i.e. in descending order of indices, e.g. 2 &gt; 1 &gt; 0 instead of 0 &gt; 1 &gt; 2). See&nbsp;<a href="Array_Functions.htm#h1">Offset And Length</a></td></tr></tbody></table><p>&nbsp;</p><h4>Returns:</h4><p class="code"><span data-keyref="Type_Any"><a target="_blank" href="../../GML_Overview/Data_Types.htm#variable">Any</a></span></p><p>&nbsp;</p><h4>Example:</h4><p class="code">var _array = [2, 1, 3, 4, 5];<br><br>var _min_value = function(_previous, _current, _index)<br>{<br>&nbsp;&nbsp; &nbsp;return min(_previous, _current);<br>}<br><br>var _value = <span data-field="title" data-format="default">array_reduce</span>(_array, _min_value);</p><p>The above code tries to find the smallest value in an array. It first creates a temporary array <span class="inline2">array</span> and fills it with a set of numbers.</p><p>Then it creates a new function <span class="inline2">min_value</span> that returns either the&nbsp;<span class="inline2">previous</span> or&nbsp;<span class="inline2">current</span> argument, whichever is smaller.</p><p>Finally it calls&nbsp;<span class="inline2"><span data-field="title" data-format="default">array_reduce</span></span>&nbsp;on the array, using <span class="inline2">_min_value</span> as the callback function, and stores the final result in a temporary variable <span class="inline2">value</span>. This variable will contain <span class="inline2">1</span> as that is the smallest value in the array.</p><p>&nbsp;</p><p>&nbsp;</p><div class="footer"><div class="buttons"><div class="clear"><div>Back:&nbsp;<a href="Array_Functions.htm">Array Functions</a></div><div>Next:&nbsp;<a href="array_concat.htm">array_concat</a></div></div></div><h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2024 All Rights Reserved</span></h5></div></body></html>