<!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml"><head><script type="text/javascript" src="../../../assets/import/jquery-3.6.1.min.js"></script><script type="text/javascript" src="../../../assets/import/layer/layer.js"></script><script type="text/javascript" src="../../../assets/import/pangu.min.js"></script><link rel="stylesheet" type="text/css" href="../../../assets/import/layer/layui_btn.css"><link rel="stylesheet" type="text/css" href="../../../assets/import/layer/layui_col.css"><link rel="stylesheet" type="text/css" href="../../../assets/import/layer/theme/default/layer.css"><link rel="stylesheet" type="text/css" href="../../../assets/import/main.css"><script>let str;removeHtml=function(e){return e=(e=(e=(e=e.replace(/(<([^>]+)>)/gi,"{}")).replace(/\r\n/g,"\n")).replace(/\n/g,"")).replace(/ {2,}/g," ")},retHtml=function(e){return e.match(/(<([^>]+)>)/gi)},setTranslator=function(e,t,n){let r;r=n?e.attr(n):e.html();let o=t[removeHtml(r)];if(null!=o&&o.length){t=retHtml(r);let a=0;t&&t.forEach(function(e,t){var n=o.replace("{"+a+"}",e);o=n===o?o.replace("{}",e):n,a++}),n?e.attr(n,o):e.html(o)}},noTranslationState=function(){return"true"==window.localStorage.getItem("noTranslationState")},noTranslationStateToggle=function(){window.localStorage.setItem("noTranslationState",!noTranslationState())},addNoTranslationStateButton=function(){var e=`
		
		<button style="
			float: right;
			font-size: 16px;
			padding: 4px 12px;
		"
		onclick="
		window.location.replace('gmmt://'+document.location.hash)
		"
		>打开编辑器</button>

		<button style="
			float: right;
			font-size: 16px;
			padding: 4px 12px;
		"
		onclick="
		noTranslationStateToggle();
		location.reload();
    	event.stopPropagation();
		"
		>切换翻译</button>
		`;$(".header").length?$(".header").append(e):($(".topic-header").append(e),$(".topic-header button").css("position","relative").css("top","44px"))},removeExtensionFromHash=function(e){return e.replaceAll("#t=","").replaceAll("%2F","/").replaceAll(".htm","")};let json_global,json_file={"Boolean&nbsp;(whether the condition checked in the {}function{} is {}true{} {}or{} {}false{})":"布尔值(在{}函数{}中检查的条件是{}true{}{}还是{}{}false{})","By default the function checks the whole array. You can optionally supply&nbsp;{}Offset And Length{} arguments to check a part of the array, traversing the array forward or backward.":"默认情况下，该函数检查整个数组。您可以选择提供{}偏移量和长度{}参数来检查数组的一部分，向前或向后遍历数组。","It then creates an array {}scores{}&nbsp;with various values between 0 and 100. Finally it calls {}array_filter{} on this array and stores the new array in a variable {}passed{}.":"然后，它创建一个具有介于 0 和 100 之间的各种值的数组 {}score{}。最后，它对该数组调用 {}array_filter{}，并将新数组存储在 {}passed{} 的变量中。","See information and examples on&nbsp;{}Predicate Function{}.":"请参阅有关{}判断函数{}的信息和示例。","See information and examples on&nbsp;{}Predicate Method{}.":"请参阅有关{}判断方法{}的信息和示例。","The above code first defines a function {}passed_the_test{}&nbsp;that takes in an {}element{}&nbsp;and {}index{} parameter. The function returns {}true{} if the value of {}element{} is greater than or equal to 50 or {}false{} if it is not. It then creates an array {}scores{}&nbsp;with various values between 0 and 100. Finally it calls {}array_filter{} on this array and stores the new array in a variable {}passed{}.":"上面的代码首先定义了一个函数{}passed_the_test{}，它包含一个{}element{}和{}index{}参数。如果{}element{}的值大于或等于50，则该函数返回{}true{}，如果不是，则返回{}false{}。然后，它创建一个数组{}scores{}与0到100之间的各种值。最后，它在此数组上调用{}array_filter{}，并将新数组存储在变量{}passed{}中。","The above code first defines a function {}passed_the_test{}&nbsp;that takes in&nbsp;{}element{}&nbsp;and {}index{} parameters, which is usual for array predicate functions.":"上面的代码首先定义了一个函数 {}passed_the_test{}，该函数接受 {}element{} 和 {}index{} 参数，这对于数组判断函数来说是很常见的。","The array to use":"要使用的数组","The current array element":"当前数组元素","The current array element's value":"当前数组元素的值","The current array index":"当前数组索引","The function returns {}true{} if the value of {}element{} is greater than or equal to 50, otherwise it returns&nbsp;{}false{}.":"如果 {}element{} 的值大于或等于 50，则函数返回 {}true{}，否则返回 {}false{}。","The function to use for each element":"用于每个元素的函数","The predicate function is called for each element in the range that you provide to the function.":"为您提供给函数的范围内的每个元素调用判断函数。","The predicate function should return a&nbsp;{}{}Boolean{}{}{}, which affects how the original function modifies or reads the array{}{}.{}":"判断函数应返回{}{}布尔值{}{}{}，这会影响原始函数修改或读取数组的方式{}{}。{}","The {}passed{} array would only contain values from the {}scores{} array that were greater than or equal to 50, satisfying the condition set in the predicate function.":"{}passed{} 数组将只包含 {}scores{} 数组中大于或等于 50 的值，满足判断函数中设置的条件。","The&nbsp;{}Predicate Function{}&nbsp;to run on each element":"对每个元素运行的{}判断函数{}","The&nbsp;{}Predicate Method{}&nbsp;to run on each element":"要在每个元素上运行的{}判断方法{}","This function takes a&nbsp;{}Predicate Function{}&nbsp;that operates on the given array. The predicate function is passed the following arguments:":"此函数接受在给定数组上操作的{}判断函数{}。向判断函数传递以下参数：","This function takes a&nbsp;{}Predicate Method{}&nbsp;that operates on the given array. The predicate function is passed the following arguments:":"此函数接受在给定数组上操作的{}判断方法{}。向判断函数传递以下参数：","{}Elements for which the predicate function returns {}true{} are included in the returned array, and ones that get{}&nbsp;{}false{} are ignored.":"{}判断函数为其返回 {}true{} 的元素包括在返回的数组中，而获得 {}{}false{} 的元素将被忽略。","{}It only keeps those elements {}of the original array for which the predicate function returns {}true{}{}. Elements for which the predicate function returns {}false{}&nbsp;are {}not{} added to the new array.{}":"{}它只保留原数组中{}判断函数返回{}true{}{}的元素。 判断函数返回{}false{}的元素{}未{}添加到新数组。{}","{}Predicate Function{}{}Predicate Function{}":"{}判断函数{}{}判断函数{}","{}This function returns a {}new{} array that is the {}filtered{} version of the array (or a range of it) that you pass into it.{}":"{}此函数返回一个{}新{}数组，该数组是您传递给它的数组(或数组的范围)的{}筛选{}版本。","{}This function returns a {}new{} array that is the {}filtered{} version of the given array (or a range of it).{}":"{}此函数返回一个{}新的{}数组，该数组是给定数组(或其范围)的{}筛选{}版本。{}","{}You supply a&nbsp;{}Predicate Function{}&nbsp;which runs for all elements in the array. It should return either&nbsp;{}true{} or {}false{}&nbsp;based on a condition.{}":"{} 您提供了一个对数组中的所有元素运行的 {} 判断函数 {}。它应根据条件返回 {}true{} 或 {}false{}。{}","{}You supply a&nbsp;{}Predicate Method{}&nbsp;which runs for all elements in the array. It should return either&nbsp;{}true{} or {}false{}&nbsp;based on a condition.{}":"{}您提供了一个对数组中的所有元素运行的{}判断方法{}。它应根据条件返回 {}true{} 或 {}false{}。{}","{}{}NOTE{}{}&nbsp;See&nbsp;{}{}array_copy_while{}{}&nbsp;for the function that stops execution after the first {}false{} value of the predicate function.":"{}{}注意{}{}请参见{}{}array_copy_while{}{}有关在判断函数的第一个{}false{}值之后停止执行的函数，。","{}{}NOTE{}{}&nbsp;See&nbsp;{}{}array_copy_while{}{}&nbsp;which is similar, but stops execution after the first {}false{} return of the predicate function.":"{}{}注意{}{} 参见 {}{}array_copy_while{}{}，该方法类似，但在判断函数的第一个 {}false{} 返回后停止执行。","{}{}OPTIONAL{}{}&nbsp;The number of elements to traverse. A negative value will traverse the array backwards (i.e. in descending order of indices, e.g. 2 &gt; 1 &gt; 0 instead of 0 &gt; 1 &gt; 2).":"{}{}可选{}{}要遍历的元素数。负值将向后遍历数组(即按索引的降序排列，例如2&gt; 1> 0 而不是0&gt; 1> 2).","{}{}OPTIONAL{}{}&nbsp;The number of elements to traverse. A negative value will traverse the array backwards (i.e. in descending order of indices, e.g. 2, 1, 0 instead of 2, 3, 4). See:&nbsp;{}Offset And Length{}":"{}{}可选{}{} 要遍历的元素数。负值将向后遍历数组(即以索引的降序，例如 2、1、0 而不是 2、3、4)。请参阅：{}偏移量和长度{}","{}{}OPTIONAL{}{}&nbsp;The offset, or starting index, in the array. Setting a negative value will count from the end of the array. The starting index will then be {}array_length(array) + offset{}. See:&nbsp;{}Offset And Length{}":"{}{}可选{}{} 数组中的偏移量或起始索引。设置负值将从数组的末尾开始计数。然后，起始索引将是 {}array_length(array) + offset{}。请参阅：{}偏移量和长度{}","{}{}OPTIONAL{}{}&nbsp;The offset, or the starting index, in the array. Setting a negative value will count from the end of the array. The starting index will then be {}array_length(array) + offset{}.":"{}{}可选{}{}数组中的偏移量或起始索引。设置负值将从数组的末尾开始计数。然后，起始索引将为{}array_length(array) + offset{}。"},get_json_global=$.ajax({url:"/global.json",type:"GET",dataType:"json",async:!1,success:function(e){json_global=e}});$(function(){if(addNoTranslationStateButton(),noTranslationState())return!1;$("div.footer a,h4,caption").each(function(){setTranslator($(this),json_global)}),$("p,h1,h2,h3,td,li,a,div.dropspotnote,figcaption").each(function(){setTranslator($(this),json_file)}),$("th,.warning,.important,.optional").each(function(){setTranslator($(this),json_global)}),$(".header").length&&(window.setInterval(function(){$("#toc-panel a:not('isTranslate')").each(function(){$(this).addClass("isTranslate"),setTranslator($(this),json_global)}),$(".GlossDefinitionText:not('isTranslate')").each(function(){$(this).addClass("isTranslate"),setTranslator($(this),json_global)})},250),console.log("成功啦!现在正在疯狂翻译菜单中!")),$(".tooltip").each(function(){setTranslator($(this),json_global,"title")})}),document.addEventListener("DOMContentLoaded",()=>{pangu.autoSpacingPage()})</script><script type="text/javascript" language="JavaScript">function reDo(){innerWidth==origWidth&&innerHeight==origHeight||location.reload()}4==parseInt(navigator.appVersion)&&"Netscape"==navigator.appName&&(origWidth=innerWidth,origHeight=innerHeight,onresize=reDo),onerror=null</script><style type="text/css">p.WebHelpNavBar{text-align:right}</style><script type="text/javascript">gCommonRootRelPath=gRootRelPath="../../..",gTopicId="8.2.2.2.0_32"</script><script type="text/javascript" src="../../../template/scripts/rh.min.js"></script><script type="text/javascript" src="../../../template/scripts/common.min.js"></script><script type="text/javascript" src="../../../template/scripts/topic.min.js"></script><script type="text/javascript" src="../../../template/scripts/topicwidgets.min.js"></script><script type="text/javascript" src="../../../whxdata/projectsettings.js"></script><link rel="stylesheet" type="text/css" href="../../../template/styles/topic.min.css"><link rel="stylesheet" type="text/css" href="../../../template/Charcoal_Grey/topicheader.css"><meta name="topic-status" content="Draft"><meta http-equiv="Content-Type" content="text/html; charset=utf-8"><title>array_filter</title><meta name="generator" content="Adobe RoboHelp 2022"><link rel="stylesheet" type="text/css" href="../../../assets/css/default.css"><script src="../../../assets/scripts/main_script.js" type="module"></script><meta name="rh-authors" content=""><meta name="topic-comment" content=""><meta name="rh-index-keywords" content="array_filter"><meta name="search-keywords" content="array_filter"><meta name="template" content="assets/masterpages/Manual_Keyword_Page.htt"><meta name="brsnext" value="GameMaker_Language/GML_Reference/Variable_Functions/array_map.htm"><meta name="brsprev" value="GameMaker_Language/GML_Reference/Variable_Functions/array_intersection.htm"></head><body><div class="topic-header rh-hide" id="rh-topic-header"><div class="logo"></div><div class="nav"><div class="title" title="array_filter"><span>array_filter</span></div><div class="gotohome" title="Click here to see this page in full context"><a href="#" onclick="rh._.goToFullLayout()">Click here to see this page in full context</a></div></div></div><div class="topic-header-shadow rh-hide" id="rh-topic-header-shadow"></div><h1><span data-field="title" data-format="default">array_filter</span></h1><p><span>This function returns a <strong>new</strong> array that is the <i>filtered</i> version of the given array (or a range of it).</span></p><p><span>You supply a&nbsp;<a href="Array_Functions.htm#h">Predicate Method</a>&nbsp;which runs for all elements in the array. It should return either&nbsp;<span class="inline2">true</span> or <span class="inline2">false</span>&nbsp;based on a condition.</span></p><p><span>Elements for which the predicate function returns <span class="inline2">true</span> are included in the returned array, and ones that get</span>&nbsp;<span class="inline2">false</span> are ignored.</p><p>By default the function checks the whole array. You can optionally supply&nbsp;<a href="Array_Functions.htm#h1">Offset And Length</a> arguments to check a part of the array, traversing the array forward or backward.</p><div data-conref="../../../assets/snippets/Syntax_predicate_general.hts"><p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down" href="#"><span data-open-text="true" data-skip-index="true">Predicate Function</span><span data-close-text="true">Predicate Function</span></a></p><div class="droptext" data-targetname="drop-down"><p>This function takes a&nbsp;<a href="Array_Functions.htm#h">Predicate Method</a>&nbsp;that operates on the given array. The predicate function is passed the following arguments:</p><h4>Syntax:</h4><p class="code">function(element, index);</p><table class="cke_show_border"><tbody><tr><th>Argument</th><th>Type</th><th>Description</th></tr><tr><td>element</td><td><span data-keyref="Type_Any"><a target="_blank" href="../../GML_Overview/Data_Types.htm#variable">Any</a></span></td><td>The current array element's value</td></tr><tr><td>index</td><td><span data-keyref="Type_Real"><a target="_blank" href="../../GML_Overview/Data_Types.htm">Real</a></span></td><td>The current array index</td></tr></tbody></table><p>The predicate function should return a&nbsp;<span data-keyref="Type_Bool"><a target="_blank" href="../../GML_Overview/Data_Types.htm">Boolean</a></span><span style="text-align:justify">, which affects how the original function modifies or reads the array</span><span style="text-align:justify">.</span></p><p>See information and examples on&nbsp;<a href="Array_Functions.htm#h">Predicate Method</a>.</p></div></div><p class="note"><span data-conref="../../../assets/snippets/Tag_note.hts"><span class="note">NOTE</span></span>&nbsp;See&nbsp;<span class="inline2"><a href="array_copy_while.htm">array_copy_while</a></span>&nbsp;which is similar, but stops execution after the first <span class="inline2">false</span> return of the predicate function.</p><div data-conref="../../../assets/snippets/Syntax_signature_element_index_returns_bool.hts"><div data-conref="../../../assets/snippets/Syntax_signature_element_index.hts"><h4>Syntax:</h4><p class="code"><span data-field="title" data-format="default">array_filter</span>(array, function, [offset], [length]);</p><table><colgroup><col><col><col></colgroup><tbody><tr><th>Argument</th><th>Type</th><th>Description</th></tr><tr><td>array</td><td><span data-keyref="Type_Array"><a target="_blank" href="../../GML_Overview/Arrays.htm">Array</a></span></td><td>The array to use</td></tr><tr><td>function</td><td><span data-keyref="Type_Function"><a target="_blank" href="../../GML_Overview/Script_Functions.htm">Function</a></span></td><td>The&nbsp;<a href="Array_Functions.htm#h">Predicate Method</a>&nbsp;to run on each element</td></tr><tr><td>offset</td><td><span data-keyref="Type_Real"><a target="_blank" href="../../GML_Overview/Data_Types.htm">Real</a></span></td><td><span data-conref="../../../assets/snippets/Tag_optional.hts"><span class="optional">OPTIONAL</span></span>&nbsp;The offset, or starting index, in the array. Setting a negative value will count from the end of the array. The starting index will then be <span class="inline2">array_length(array) + offset</span>. See:&nbsp;<a href="Array_Functions.htm#h1">Offset And Length</a></td></tr><tr><td>length</td><td><span data-keyref="Type_Real"><a target="_blank" href="../../GML_Overview/Data_Types.htm">Real</a></span></td><td><span data-conref="../../../assets/snippets/Tag_optional.hts"><span class="optional">OPTIONAL</span></span>&nbsp;The number of elements to traverse. A negative value will traverse the array backwards (i.e. in descending order of indices, e.g. 2, 1, 0 instead of 2, 3, 4). See:&nbsp;<a href="Array_Functions.htm#h1">Offset And Length</a></td></tr></tbody></table></div></div><h4>Returns:</h4><p class="code"><span data-keyref="Type_Array"><a target="_blank" href="../../GML_Overview/Arrays.htm">Array</a></span></p><p>&nbsp;</p><h4>Example:</h4><p class="code">function passed_the_test(element, index)<br>{<br>&nbsp;&nbsp; &nbsp;return element &gt;= 50;<br>}<br><br>scores = [0, 15, 4, 78, 96, 65, 49];<br>passed = <span data-field="title" data-format="default">array_filter</span>(scores, passed_the_test);</p><p>The above code first defines a function <span class="inline2">passed_the_test</span>&nbsp;that takes in&nbsp;<span class="inline2">element</span>&nbsp;and <span class="inline2">index</span> parameters, which is usual for array predicate functions.</p><p>The function returns <span class="inline2">true</span> if the value of <span class="inline2">element</span> is greater than or equal to 50, otherwise it returns&nbsp;<span class="inline2">false</span>.</p><p>It then creates an array <span class="inline2">scores</span>&nbsp;with various values between 0 and 100. Finally it calls <span class="inline2">array_filter</span> on this array and stores the new array in a variable <span class="inline2">passed</span>.</p><p>The <span class="inline2">passed</span> array would only contain values from the <span class="inline2">scores</span> array that were greater than or equal to 50, satisfying the condition set in the predicate function.</p><p>&nbsp;</p><p>&nbsp;</p><div class="footer"><div class="buttons"><div class="clear"><div>Back:&nbsp;<a href="Array_Functions.htm">Array Functions</a></div><div>Next:&nbsp;<a href="array_map.htm">array_map</a></div></div></div><h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2024 All Rights Reserved</span></h5></div></body></html>