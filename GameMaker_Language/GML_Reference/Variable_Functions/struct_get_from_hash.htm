<!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml"><head><script type="text/javascript" src="../../../assets/import/jquery-3.6.1.min.js"></script><script type="text/javascript" src="../../../assets/import/layer/layer.js"></script><script type="text/javascript" src="../../../assets/import/pangu.min.js"></script><link rel="stylesheet" type="text/css" href="../../../assets/import/layer/layui_btn.css"><link rel="stylesheet" type="text/css" href="../../../assets/import/layer/layui_col.css"><link rel="stylesheet" type="text/css" href="../../../assets/import/layer/theme/default/layer.css"><link rel="stylesheet" type="text/css" href="../../../assets/import/main.css"><script>let str;removeHtml=function(t){return t=(t=(t=(t=t.replace(/(<([^>]+)>)/gi,"{}")).replace(/\r\n/g,"\n")).replace(/\n/g,"")).replace(/ {2,}/g," ")},retHtml=function(t){return t.match(/(<([^>]+)>)/gi)},setTranslator=function(t,e,a){let o;o=a?t.attr(a):t.html();let s=e[removeHtml(o)];if(null!=s&&s.length){e=retHtml(o);let n=0;e&&e.forEach(function(t,e){var a=s.replace("{"+n+"}",t);s=a===s?s.replace("{}",t):a,n++}),a?t.attr(a,s):t.html(s)}},noTranslationState=function(){return"true"==window.localStorage.getItem("noTranslationState")},noTranslationStateToggle=function(){window.localStorage.setItem("noTranslationState",!noTranslationState())},addNoTranslationStateButton=function(){var t=`
		
		<button style="
			float: right;
			font-size: 16px;
			padding: 4px 12px;
		"
		onclick="
		window.location.replace('gmmt://'+document.location.hash)
		"
		>打开编辑器</button>

		<button style="
			float: right;
			font-size: 16px;
			padding: 4px 12px;
		"
		onclick="
		noTranslationStateToggle();
		location.reload();
    	event.stopPropagation();
		"
		>切换翻译</button>
		`;$(".header").length?$(".header").append(t):($(".topic-header").append(t),$(".topic-header button").css("position","relative").css("top","44px"))},removeExtensionFromHash=function(t){return t.replaceAll("#t=","").replaceAll("%2F","/").replaceAll(".htm","")};let json_global,json_file={'Accessing a variable through a hash allows for faster access when using a string, compared to using the {}struct[$ "string"]{} syntax.':'与使用 {}struct[$ "string"]{} 语法相比，通过哈希访问变量可以在使用字符串时实现更快的访问速度。','Accessing a variable through a hash allows for faster access when using a string, compared to using the {}struct[? "string"]{} syntax.':'与使用 {}struct[? "string"]{} 相比，通过散列访问变量可以在使用字符串时更快地访问。',"The above code creates a temporary&nbsp;struct {}_the_struct{} with three member variables: {}a{}, {}b{} and {}c{}. It then gets the hash&nbsp;of a variable {}a{}. This hash is then used in&nbsp;{}{}struct_get_from_hash{}{}&nbsp;to retrieve the value&nbsp;of the struct member with the corresponding name. The returned value is assigned to another temporary variable {}_value{}.":"上面的代码创建了一个具有三个成员变量的临时结构{}_the_struct{}：{}a{}、{}b{}和{}c{}。然后，它获得变量 {}a{} 的散列。然后在 {}{}struct_get_from_hash{}{} 中使用此散列来检索具有相应名称的结构成员的值。返回值被赋给另一个临时变量 {}_value{}。","The hash&nbsp;of the variable to get (as returned by&nbsp;{}{}variable_get_hash{}{})":"要获取的变量的哈希(由 {}{}variable_get_hash{}{} 返回)","The struct reference to use":"要使用的结构引用","This function gets the value&nbsp;of a struct member using the hash returned by&nbsp;{}{}variable_get_hash{}{}.":"此函数使用 {}{}variable_get_hash{}{} 返回的散列获取结构成员的值。"},get_json_global=$.ajax({url:"/global.json",type:"GET",dataType:"json",async:!1,success:function(t){json_global=t}});$(function(){if(addNoTranslationStateButton(),noTranslationState())return!1;$("div.footer a,h4,caption").each(function(){setTranslator($(this),json_global)}),$("p,h1,h2,h3,td,li,a,div.dropspotnote,figcaption").each(function(){setTranslator($(this),json_file)}),$("th,.warning,.important,.optional").each(function(){setTranslator($(this),json_global)}),$(".header").length&&(window.setInterval(function(){$("#toc-panel a:not('isTranslate')").each(function(){$(this).addClass("isTranslate"),setTranslator($(this),json_global)}),$(".GlossDefinitionText:not('isTranslate')").each(function(){$(this).addClass("isTranslate"),setTranslator($(this),json_global)})},250),console.log("成功啦!现在正在疯狂翻译菜单中!")),$(".tooltip").each(function(){setTranslator($(this),json_global,"title")})}),document.addEventListener("DOMContentLoaded",()=>{pangu.autoSpacingPage()})</script><script type="text/javascript" language="JavaScript">function reDo(){innerWidth==origWidth&&innerHeight==origHeight||location.reload()}4==parseInt(navigator.appVersion)&&"Netscape"==navigator.appName&&(origWidth=innerWidth,origHeight=innerHeight,onresize=reDo),onerror=null</script><style type="text/css">p.WebHelpNavBar{text-align:right}</style><script type="text/javascript">gCommonRootRelPath=gRootRelPath="../../..",gTopicId="8.2.2.1.0_26"</script><script type="text/javascript" src="../../../template/scripts/rh.min.js"></script><script type="text/javascript" src="../../../template/scripts/common.min.js"></script><script type="text/javascript" src="../../../template/scripts/topic.min.js"></script><script type="text/javascript" src="../../../template/scripts/topicwidgets.min.js"></script><script type="text/javascript" src="../../../whxdata/projectsettings.js"></script><link rel="stylesheet" type="text/css" href="../../../template/styles/topic.min.css"><link rel="stylesheet" type="text/css" href="../../../template/Charcoal_Grey/topicheader.css"><meta name="topic-status" content="Draft"><meta http-equiv="Content-Type" content="text/html; charset=utf-8"><title>struct_get_from_hash</title><meta name="generator" content="Adobe RoboHelp 2022"><link rel="stylesheet" type="text/css" href="../../../assets/css/default.css"><script src="../../../assets/scripts/main_script.js" type="module"></script><meta name="rh-authors" content=""><meta name="topic-comment" content=""><meta name="rh-index-keywords" content="struct_get_from_hash"><meta name="search-keywords" content="struct_get_from_hash"><meta name="template" content="assets/masterpages/Manual_Keyword_Page.htt"><meta name="brsnext" value="GameMaker_Language/GML_Reference/Variable_Functions/struct_set_from_hash.htm"><meta name="brsprev" value="GameMaker_Language/GML_Reference/Variable_Functions/struct_foreach.htm"></head><body><div class="topic-header rh-hide" id="rh-topic-header"><div class="logo"></div><div class="nav"><div class="title" title="struct_get_from_hash"><span>struct_get_from_hash</span></div><div class="gotohome" title="Click here to see this page in full context"><a href="#" onclick="rh._.goToFullLayout()">Click here to see this page in full context</a></div></div></div><div class="topic-header-shadow rh-hide" id="rh-topic-header-shadow"></div><h1><span data-field="title" data-format="default">struct_get_from_hash</span></h1><p>This function gets the value&nbsp;of a struct member using the hash returned by&nbsp;<span class="inline3_func"><a href="variable_get_hash.htm">variable_get_hash</a></span>.</p><p>Accessing a variable through a hash allows for faster access when using a string, compared to using the <span class="inline2">struct[$ "string"]</span> syntax.</p><p>&nbsp;</p><h4>Syntax:</h4><p class="code"><span data-field="title" data-format="default">struct_get_from_hash</span>(struct, hash);</p><table><colgroup><col><col><col></colgroup><tbody><tr><th>Argument</th><th>Type</th><th>Description</th></tr><tr><td>struct</td><td><span data-keyref="Type_Struct"><a target="_blank" href="../../GML_Overview/Structs.htm">Struct</a></span></td><td>The struct reference to use</td></tr><tr><td>hash</td><td><span data-keyref="Type_Real"><a target="_blank" href="../../GML_Overview/Data_Types.htm">Real</a></span></td><td>The hash&nbsp;of the variable to get (as returned by&nbsp;<span class="inline3_func"><a href="variable_get_hash.htm">variable_get_hash</a></span>)</td></tr></tbody></table><p>&nbsp;</p><h4>Returns:</h4><p class="code"><span data-keyref="Type_Any"><a target="_blank" href="../../GML_Overview/Data_Types.htm#variable">Any</a></span></p><p>&nbsp;</p><h4>Example:</h4><p class="code">var _the_struct = {a: 77, b: 88, c: 99};<br>var _hash = variable_get_hash("a");<br>var _value =&nbsp;<span data-field="title" data-format="default">struct_get_from_hash</span>(_the_struct, _hash);</p><p>The above code creates a temporary&nbsp;struct <span class="inline2">_the_struct</span> with three member variables: <span class="inline2">a</span>, <span class="inline2">b</span> and <span class="inline2">c</span>. It then gets the hash&nbsp;of a variable <span class="inline2">a</span>. This hash is then used in&nbsp;<span class="inline3_func"><span data-field="title" data-format="default">struct_get_from_hash</span></span>&nbsp;to retrieve the value&nbsp;of the struct member with the corresponding name. The returned value is assigned to another temporary variable <span class="inline2">_value</span>.</p><p>&nbsp;</p><p>&nbsp;</p><div class="footer"><div class="buttons"><div class="clear"><div>Back:&nbsp;<a href="Variable_Functions.htm">Variable Functions</a></div><div>Next:&nbsp;<a href="struct_set_from_hash.htm">struct_set_from_hash</a></div></div></div><h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2024 All Rights Reserved</span></h5></div></body></html>