<!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml"><head><script type="text/javascript" src="../../../assets/import/jquery-3.6.1.min.js"></script><script type="text/javascript" src="../../../assets/import/layer/layer.js"></script><script type="text/javascript" src="../../../assets/import/pangu.min.js"></script><link rel="stylesheet" type="text/css" href="../../../assets/import/layer/layui_btn.css"><link rel="stylesheet" type="text/css" href="../../../assets/import/layer/layui_col.css"><link rel="stylesheet" type="text/css" href="../../../assets/import/layer/theme/default/layer.css"><link rel="stylesheet" type="text/css" href="../../../assets/import/main.css"><script>let str;removeHtml=function(e){return e=(e=(e=(e=e.replace(/(<([^>]+)>)/gi,"{}")).replace(/\r\n/g,"\n")).replace(/\n/g,"")).replace(/ {2,}/g," ")},retHtml=function(e){return e.match(/(<([^>]+)>)/gi)},setTranslator=function(e,t,n){let o;o=n?e.attr(n):e.html();let r=t[removeHtml(o)];if(null!=r&&r.length){t=retHtml(o);let a=0;t&&t.forEach(function(e,t){var n=r.replace("{"+a+"}",e);r=n===r?r.replace("{}",e):n,a++}),n?e.attr(n,r):e.html(r)}},noTranslationState=function(){return"true"==window.localStorage.getItem("noTranslationState")},noTranslationStateToggle=function(){window.localStorage.setItem("noTranslationState",!noTranslationState())},addNoTranslationStateButton=function(){var e=`
		
		<button style="
			float: right;
			font-size: 16px;
			padding: 4px 12px;
		"
		onclick="
		window.location.replace('gmmt://'+document.location.hash)
		"
		>打开编辑器</button>

		<button style="
			float: right;
			font-size: 16px;
			padding: 4px 12px;
		"
		onclick="
		noTranslationStateToggle();
		location.reload();
    	event.stopPropagation();
		"
		>切换翻译</button>
		`;$(".header").length?$(".header").append(e):($(".topic-header").append(e),$(".topic-header button").css("position","relative").css("top","44px"))},removeExtensionFromHash=function(e){return e.replaceAll("#t=","").replaceAll("%2F","/").replaceAll(".htm","")};let json_global,json_file={"A reference to a variable created using&nbsp;{}{}ref_create{}{}":"对使用{}{}ref_create{}{}创建的变量的引用","By default, the text input modifies the variable referenced as a string variable. You can change this {}data type{} by setting the optional {}type{} parameter to one of the following values:&nbsp;":"默认情况下，文本输入修改作为字符串变量引用的变量。您可以通过将可选的 {}type{} 参数设置为以下值之一来更改此 {0} 数据类型 {1}：","In the Create event of an object a couple of variables are first defined. They are assigned a real, another real and a string value. Then, a reference is created to each of these instance variables. After that, a text input is created using&nbsp;{}{}dbg_text_input{}{} to modify each of these variables through the reference to it. The function calls to&nbsp;{}{}dbg_text_input{}{}&nbsp;will&nbsp;bring up&nbsp;{}The Debug Overlay{},&nbsp;so no call to&nbsp;{}{}show_debug_overlay{}{}&nbsp;is required.":"在对象的 Create 事件中，首先定义几个变量。它们被分配一个实数、另一个实数和一个字符串值。然后，创建对每个实例变量的引用。之后，使用 {}{}dbg_text_input{}{} 创建文本输入，并通过对每个变量的引用来修改这些变量。对 {}{}dbg_text_input{}{} 的函数调用将调出 {} 调试叠加层 {}，因此无需调用 {}{}show_debug_overlay{}{}。","In the object's Draw event a line of text is displayed using&nbsp;{}{}draw_text{}{}&nbsp;for each of the variables. Each line shows a descriptive text and the type of value between parentheses, followed by the value itself. Any change made in the text inputs will show in the drawn text.":"在对象的 Draw 事件中，使用每个变量的 {}{}draw_text{}{} 显示一行文本。每行显示描述性文本和括号之间的值类型，后跟值本身。文本输入中所做的任何更改都将显示在绘制的文本中。",'Note that the type of the first variable changes immediately from {}"number"{} to {}"int64"{}&nbsp;as soon as you make a change in its text input control.':'请注意，一旦您在其文本输入控件中进行更改，第一个变量的类型就会立即从 {}"number"{} 更改为 {}"int64"{}。',"The above code first assigns some text to an instance variable {}description{}. It then creates a reference to this variable using&nbsp;{}{}ref_create{}{}. Next, it creates a text input control using&nbsp;{}{}dbg_text_input{}{}, the reference {}links{}&nbsp;the control to the variable.":"上面的代码首先将一些文本赋给实例变量{}description{}。然后使用{}{}ref_create{}{}创建对此变量的引用。接下来，它使用{}{}dbg_text_input{}{}创建一个文本输入控件，引用{}将该控件链接{}到变量。","This code example shows how to use custom data types with the text input debug control.":"此代码示例演示如何将自定义数据类型与文本输入调试控件结合使用。","This function creates a text field within the current debug section.":"此函数在当前调试部分中创建一个文本字段。","This function creates a text field within the current debug section. You can use this to modify a string variable.":"此函数在当前调试部分中创建一个文本字段。您可以使用它来修改字符串变量。",'description = {}"This description can be changed"{};{} {}var{} _ref = {}ref_create{}({}self{}, {}"description"{});{} {}dbg_text_input{}(_ref, {}"Enter the description here:"{}); ':'description = {}"此说明可以更改"{};{} {}var{} _ref = {}ref_create{}({}self{}, {}"描述"{});{} {}dbg_text_input{}(_ref, {}"在此处输入描述:"{}); ','{}"f"{}, {}"r"{} or {}"g"{}: a real number, for which&nbsp;{}{}typeof{}{}&nbsp;returns {}"number"{}':'{}"f"{}、{}"r"{} 或 {}"g"{}：实数，{}{}typeof{}{} 返回 {}"number"{}','{}"i"{} or {}"d"{}: an integer, for which&nbsp;{}{}typeof{}{}&nbsp;returns {}"int64"{}':'{}"i"{} 或 {}"d"{}：一个整数，{}{}typeof{}{} 返回 {}"int64"{}','{}"s"{} or {}"t"{}: a string, for which&nbsp;{}{}typeof{}{}&nbsp;returns {}"string"{}':'{}"s"{} 或 {}"t"{}：一个字符串，{}{}typeof{}{} 返回 {}"string"{}',"{}The text field also accepts hexadecimal and binary as input for both integers and real numbers, i.e. {}0xcafebabe{} or {}0b1010101{}. It converts this input to the correct value for the given data type.{}":"{} 文本字段还接受十六进制和二进制作为整数和实数的输入，即 {}0xcafebabe{} 或 {}0b1010101{}。它将该输入转换为给定数据类型的正确值。{}","{}{}NOTE{}{}&nbsp;On Android, editing a text field will bring up the on-screen keyboard.":"{}{} 注意{}{} 在 Android 上，编辑文本字段将显示屏幕键盘。","{}{}NOTE{}{}&nbsp;This debug control spans two columns.":"{}{} 注意{}{} 此调试控件跨越两列。","{}{}OPTIONAL{}{}&nbsp;The label to show next to the text input":"{}{}可选{}{} 显示在文本输入旁边的标签",'{}{}OPTIONAL{}{}&nbsp;The type to store the value as in the variable that\'s referenced. This is indicated by a single letter:&nbsp;{} {} - string: {}"s"{} or {}"t"{} (default){} - integer: {}"i"{} or {}"d"{}{} - real: {}"f"{}, {}"r"{} or {}"g"{} ':'{}{} 可选{}{} 用于存储引用的变量中的值的类型。这由单个字母表示：{}{}- 字符串：{}"s"{} 或 {}"t"{}( 默认 ){}- 整数：{}"i"{} 或 {}"d "{}{}- 实数：{}"f"{}、{}"r"{} 或 {}"g"{}',"{}{}WARNING{}{}&nbsp;If the variable referenced stores a value of a different type than the type you provide to this function, any change you make to the text will change the referenced variable's type.":"{}{} 警告{}{} 如果引用的变量存储的值与您提供给此函数的类型不同，则您对文本所做的任何更改都将更改引用的变量的类型。"},get_json_global=$.ajax({url:"/global.json",type:"GET",dataType:"json",async:!1,success:function(e){json_global=e}});$(function(){if(addNoTranslationStateButton(),noTranslationState())return!1;$("div.footer a,h4,caption").each(function(){setTranslator($(this),json_global)}),$("p,h1,h2,h3,td,li,a,div.dropspotnote,figcaption").each(function(){setTranslator($(this),json_file)}),$("th,.warning,.important,.optional").each(function(){setTranslator($(this),json_global)}),$(".header").length&&(window.setInterval(function(){$("#toc-panel a:not('isTranslate')").each(function(){$(this).addClass("isTranslate"),setTranslator($(this),json_global)}),$(".GlossDefinitionText:not('isTranslate')").each(function(){$(this).addClass("isTranslate"),setTranslator($(this),json_global)})},250),console.log("成功啦!现在正在疯狂翻译菜单中!")),$(".tooltip").each(function(){setTranslator($(this),json_global,"title")})}),document.addEventListener("DOMContentLoaded",()=>{pangu.autoSpacingPage()})</script><script type="text/javascript" language="JavaScript">function reDo(){innerWidth==origWidth&&innerHeight==origHeight||location.reload()}4==parseInt(navigator.appVersion)&&"Netscape"==navigator.appName&&(origWidth=innerWidth,origHeight=innerHeight,onresize=reDo),onerror=null</script><style type="text/css">p.WebHelpNavBar{text-align:right}</style><script type="text/javascript">gCommonRootRelPath=gRootRelPath="../../..",gTopicId="8.2.2.22.1.0_18"</script><script type="text/javascript" src="../../../template/scripts/rh.min.js"></script><script type="text/javascript" src="../../../template/scripts/common.min.js"></script><script type="text/javascript" src="../../../template/scripts/topic.min.js"></script><script type="text/javascript" src="../../../template/scripts/topicwidgets.min.js"></script><script type="text/javascript" src="../../../whxdata/projectsettings.js"></script><link rel="stylesheet" type="text/css" href="../../../template/styles/topic.min.css"><link rel="stylesheet" type="text/css" href="../../../template/Charcoal_Grey/topicheader.css"><meta name="topic-status" content="Draft"><meta http-equiv="Content-Type" content="text/html; charset=utf-8"><title>dbg_text_input</title><meta name="generator" content="Adobe RoboHelp 2022"><link rel="stylesheet" type="text/css" href="../../../assets/css/default.css"><script src="../../../assets/scripts/main_script.js" type="module"></script><meta name="rh-authors" content=""><meta name="topic-comment" content=""><meta name="rh-index-keywords" content="dbg_text_input"><meta name="search-keywords" content="dbg_text_input"><meta name="template" content="assets/masterpages/Manual_Keyword_Page.htt"><meta name="brsnext" value="GameMaker_Language/GML_Reference/Debugging/dbg_watch.htm"><meta name="brsprev" value="GameMaker_Language/GML_Reference/Debugging/dbg_text.htm"></head><body><div class="topic-header rh-hide" id="rh-topic-header"><div class="logo"></div><div class="nav"><div class="title" title="dbg_text_input"><span>dbg_text_input</span></div><div class="gotohome" title="Click here to see this page in full context"><a href="#" onclick="rh._.goToFullLayout()">Click here to see this page in full context</a></div></div></div><div class="topic-header-shadow rh-hide" id="rh-topic-header-shadow"></div><h1><span data-field="title" data-format="default">dbg_text_input</span></h1><p>This function creates a text field within the current debug section.</p><p>By default, the text input modifies the variable referenced as a string variable. You can change this <a href="../../GML_Overview/Data_Types.htm">data type</a> by setting the optional <span class="inline2">type</span> parameter to one of the following values:&nbsp;</p><ul class="colour"><li><span class="inline2">"s"</span> or <span class="inline2">"t"</span>: a string, for which&nbsp;<span class="inline3_func"><a href="../Variable_Functions/typeof.htm">typeof</a></span>&nbsp;returns <span class="inline2">"string"</span></li><li><span class="inline2">"i"</span> or <span class="inline2">"d"</span>: an integer, for which&nbsp;<span class="inline3_func"><a href="../Variable_Functions/typeof.htm">typeof</a></span>&nbsp;returns <span class="inline2">"int64"</span></li><li><span class="inline2">"f"</span>, <span class="inline2">"r"</span> or <span class="inline2">"g"</span>: a real number, for which&nbsp;<span class="inline3_func"><a href="../Variable_Functions/typeof.htm">typeof</a></span>&nbsp;returns <span class="inline2">"number"</span></li></ul><p><span>The text field also accepts hexadecimal and binary as input for both integers and real numbers, i.e. <span class="inline2">0xcafebabe</span> or <span class="inline2">0b1010101</span>. It converts this input to the correct value for the given data type.</span></p><p class="note"><span data-conref="../../../assets/snippets/Tag_warning.hts"><span class="warning">WARNING</span></span>&nbsp;If the variable referenced stores a value of a different type than the type you provide to this function, any change you make to the text will change the referenced variable's type.</p><div data-conref="../../../assets/snippets/Note_Debug_Control_Two_Columns.hts"><p class="note"><span data-conref="../../../assets/snippets/Tag_note.hts"><span class="note">NOTE</span></span>&nbsp;This debug control spans two columns.</p></div><p class="note"><span data-conref="../../../assets/snippets/Tag_note.hts"><span class="note">NOTE</span></span>&nbsp;On Android, editing a text field will bring up the on-screen keyboard.</p><p>&nbsp;</p><h4>Syntax:</h4><p class="code"><span data-field="title" data-format="default">dbg_text_input</span>(ref[, label, type]);</p><table><colgroup><col><col><col></colgroup><tbody><tr><th>Argument</th><th>Type</th><th>Description</th></tr><tr><td>ref</td><td><span data-keyref="Type_DbgRef"><a target="_blank" href="../Variable_Functions/ref_create.htm">Reference</a></span></td><td>A reference to a variable created using&nbsp;<span class="inline3_func"><a href="../Variable_Functions/ref_create.htm">ref_create</a></span></td></tr><tr><td>label</td><td><span data-keyref="Type_String"><a target="_blank" href="../../GML_Overview/Data_Types.htm">String</a></span></td><td><span data-conref="../../../assets/snippets/Tag_optional.hts"><span class="optional">OPTIONAL</span></span>&nbsp;The label to show next to the text input</td></tr><tr><td>type</td><td><span data-keyref="Type_String"><a target="_blank" href="../../GML_Overview/Data_Types.htm">String</a></span></td><td><span data-conref="../../../assets/snippets/Tag_optional.hts"><span class="optional">OPTIONAL</span></span>&nbsp;The type to store the value as in the variable that's referenced. This is indicated by a single letter:&nbsp;<br><br>- string: <span class="inline2">"s"</span> or <span class="inline2">"t"</span> (default)<br>- integer: <span class="inline2">"i"</span> or <span class="inline2">"d"</span><br>- real: <span class="inline2">"f"</span>, <span class="inline2">"r"</span> or <span class="inline2">"g"</span></td></tr></tbody></table><p>&nbsp;</p><h4>Returns:</h4><p class="code"><span data-keyref="Type_Void">N/A</span></p><p>&nbsp;</p><h4>Example 1: Basic Use</h4><p class="code_heading">Create Event</p><p class="code">description = "This description can be changed";<br>var _ref = ref_create(self, "description");<br><span data-field="title" data-format="default">dbg_text_input</span>(_ref, "Enter the description here:");</p><p>The above code first assigns some text to an instance variable <span class="inline2">description</span>. It then creates a reference to this variable using&nbsp;<span class="inline3_func"><a href="../Variable_Functions/ref_create.htm">ref_create</a></span>. Next, it creates a text input control using&nbsp;<span class="inline3_func"><span data-field="title" data-format="default">dbg_text_input</span></span>, the reference <em>links</em>&nbsp;the control to the variable.</p><p>&nbsp;</p><h4>Example 2: Custom Data Types</h4><p class="code_heading">Create Event</p><p class="code">an_integer = 5;<br>a_real = 0.3583;<br>a_string = "3289430";<br><br>ref_to_count = ref_create(self, "an_integer");<br>ref_to_some_value = ref_create(self, "a_real");<br>ref_to_a_string = ref_create(self, "a_string");<br><br>dbg_text_input(ref_to_count, "An Integer", "i");<br>dbg_text_input(ref_to_some_value, "A Real", "f");<br>dbg_text_input(ref_to_a_string, "A String", "s");</p><p class="code_heading">Draw Event</p><p class="code">draw_text(5, 600, $"An Integer ({typeof(an_integer)}): {an_integer}");<br>draw_text(5, 620, $"A Real ({typeof(a_real)}): {a_real}");<br>draw_text(5, 640, $"A String ({typeof(a_string)}): {a_string}");</p><p>This code example shows how to use custom data types with the text input debug control.</p><p>In the Create event of an object a couple of variables are first defined. They are assigned a real, another real and a string value. Then, a reference is created to each of these instance variables. After that, a text input is created using&nbsp;<span class="inline3_func"><span data-field="title" data-format="default">dbg_text_input</span></span> to modify each of these variables through the reference to it. The function calls to&nbsp;<span class="inline3_func"><span data-field="title" data-format="default">dbg_text_input</span></span>&nbsp;will&nbsp;bring up&nbsp;<a href="The_Debug_Overlay.htm">The Debug Overlay</a>,&nbsp;so no call to&nbsp;<span class="inline3_func"><a href="show_debug_overlay.htm">show_debug_overlay</a></span>&nbsp;is required.</p><p>In the object's Draw event a line of text is displayed using&nbsp;<span class="inline3_func"><a href="../Drawing/Text/draw_text.htm">draw_text</a></span>&nbsp;for each of the variables. Each line shows a descriptive text and the type of value between parentheses, followed by the value itself. Any change made in the text inputs will show in the drawn text.</p><p>Note that the type of the first variable changes immediately from <span class="inline2">"number"</span> to <span class="inline2">"int64"</span>&nbsp;as soon as you make a change in its text input control.</p><p>&nbsp;</p><p>&nbsp;</p><div class="footer"><div class="buttons"><div class="clear"><div>Back:&nbsp;<a href="The_Debug_Overlay.htm">The Debug Overlay</a></div><div>Next:&nbsp;<a href="dbg_watch.htm">dbg_watch</a></div></div></div><h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2024 All Rights Reserved</span></h5></div></body></html>