<!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml"><head><script type="text/javascript" src="../../../assets/import/jquery-3.6.1.min.js"></script><script type="text/javascript" src="../../../assets/import/layer/layer.js"></script><script type="text/javascript" src="../../../assets/import/pangu.min.js"></script><link rel="stylesheet" type="text/css" href="../../../assets/import/layer/layui_btn.css"><link rel="stylesheet" type="text/css" href="../../../assets/import/layer/layui_col.css"><link rel="stylesheet" type="text/css" href="../../../assets/import/layer/theme/default/layer.css"><link rel="stylesheet" type="text/css" href="../../../assets/import/main.css"><script>let str;removeHtml=function(t){return t=(t=(t=(t=t.replace(/(<([^>]+)>)/gi,"{}")).replace(/\r\n/g,"\n")).replace(/\n/g,"")).replace(/ {2,}/g," ")},retHtml=function(t){return t.match(/(<([^>]+)>)/gi)},setTranslator=function(t,e,n){let a;a=n?t.attr(n):t.html();let s=e[removeHtml(a)];if(null!=s&&s.length){e=retHtml(a);let o=0;e&&e.forEach(function(t,e){var n=s.replace("{"+o+"}",t);s=n===s?s.replace("{}",t):n,o++}),n?t.attr(n,s):t.html(s)}},noTranslationState=function(){return"true"==window.localStorage.getItem("noTranslationState")},noTranslationStateToggle=function(){window.localStorage.setItem("noTranslationState",!noTranslationState())},addNoTranslationStateButton=function(){var t=`
		
		<button style="
			float: right;
			font-size: 16px;
			padding: 4px 12px;
		"
		onclick="
		window.location.replace('gmmt://'+document.location.hash)
		"
		>打开编辑器</button>

		<button style="
			float: right;
			font-size: 16px;
			padding: 4px 12px;
		"
		onclick="
		noTranslationStateToggle();
		location.reload();
    	event.stopPropagation();
		"
		>切换翻译</button>
		`;$(".header").length?$(".header").append(t):($(".topic-header").append(t),$(".topic-header button").css("position","relative").css("top","44px"))},removeExtensionFromHash=function(t){return t.replaceAll("#t=","").replaceAll("%2F","/").replaceAll(".htm","")};let json_global,json_file={"A reference to a&nbsp;{}{}Function{}{}&nbsp;or&nbsp;{}{}Script Function{}{} created using&nbsp;{}{}ref_create{}{}&nbsp;or a function":"对使用{}{}ref_create{}{}创建的{}{}函数{}{}或{}{}脚本函数{}{}的引用或函数","A {}{}Function{}{}&nbsp;or&nbsp;{}{}Script Function{}{}&nbsp;or a reference to one (created with&nbsp;{}{}ref_create{}{})":"{}{} 函数 {}{} 或 {}{} 脚本函数 {}{} 或对其中之一的引用 (使用 {}{}ref_create{}{} 创建)","First, a script function is defined in a script asset as well as a method in an object's Create event. Then, also in the Create event, various references to the script function and to the method are created. Note that in case of {}ref_to_script_function{}, you can change the function to be executed by simply assigning a new value to the instance variable {}func{}. After that, two sections are added to the debug overlay. Several buttons are added to the first section, where each of them calls the script function or the method through a different path. One more button is added to the second section. Clicking this button executes the built-in function&nbsp;{}{}game_end{}{}, which can be called because it takes no (mandatory) arguments.":"首先，在脚本资源中定义脚本函数，并在对象的 Create 事件中定义方法。然后，也在 Create 事件中创建对脚本函数和方法的各种引用。请注意，对于 {}ref_to_script_function{}，您只需为实例变量 {}func{} 分配新值即可更改要执行的函数。之后，将两个部分添加到调试覆盖层中。第一部分添加了几个按钮，其中每个按钮都通过不同的路径调用脚本函数或方法。第二部分中又添加了一个按钮。单击此按钮将执行内置函数 {}{}game_end{}{}，该函数可以被调用，因为它不带 (强制) 参数。",'The above code creates a button control in an&nbsp;{}object{}\'s Create event using&nbsp;{}{}dbg_button{}{}. Since no calls are made to&nbsp;{}{}dbg_view{}{}&nbsp;or&nbsp;{}{}dbg_section{}{}, the button is added to a new debug section named&nbsp;{}"Default"{}&nbsp;in a new debug view named&nbsp;{}"Default"{}. Clicking the button calls a function that shows a debug message using&nbsp;{}{}show_debug_message{}{}.':"上面的代码使用{}{}dbg_button{}{}在{0}对象{1}的创建事件中创建按钮控件。由于没有调用&nbsp;{}{}dbg_view{}{}&nbsp;或&nbsp;{}{}dbg_section{}{}，按钮被添加到名为&nbsp;{}“Default”{}的新调试视图中名为&nbsp;{}“Default”{}的新调试部分中。单击该按钮将调用一个函数，该函数使用&nbsp;{}{}show_debug_message{}{}显示调试消息。","The code example above shows a variety of ways to add button controls that execute functions to the debug overlay.":"上面的代码示例显示了向调试覆盖层添加执行功能的按钮控件的多种方法。","The current debug section is the&nbsp;one last created using&nbsp;{}{}dbg_section{}{}.":"当前调试节是上次使用{}{}dbg_section{}{}创建的调试节。","The text label to show next to the button":"按钮旁边显示的文本标签","This function creates a button control within the current debug section. Clicking the button executes a {}{}Function{}{}.":"此函数在当前调试部分中创建一个按钮控件。单击按钮执行{}{}函数{}{}。","When the code has executed,&nbsp;{}The Debug Overlay{}&nbsp;is shown as any call to&nbsp;the {}dbg_*{} functions will bring up the overlay.":"代码执行后，会显示 {} 调试叠加层 {}，因为对 {}dbg_*{} 函数的任何调用都会调出叠加层。","{}{}NOTE{}{}&nbsp;This control takes up a single column and can be shown&nbsp;on the same line with another single-column control using&nbsp;{}{}dbg_same_line{}{}.":"{}{}注意{}{}此控件占用一列，可以使用{}{}dbg_same_line{}{}与另一个单列控件显示在同一行上。","{}{}OPTIONAL{}{}&nbsp;The height&nbsp;of the button in pixels":"{}{}可选{}{}按钮的高度(像素)","{}{}OPTIONAL{}{}&nbsp;The width&nbsp;of the button in pixels":"{}{}可选{}{}按钮的宽度(以像素为单位)"},get_json_global=$.ajax({url:"/global.json",type:"GET",dataType:"json",async:!1,success:function(t){json_global=t}});$(function(){if(addNoTranslationStateButton(),noTranslationState())return!1;$("div.footer a,h4,caption").each(function(){setTranslator($(this),json_global)}),$("p,h1,h2,h3,td,li,a,div.dropspotnote,figcaption").each(function(){setTranslator($(this),json_file)}),$("th,.warning,.important,.optional").each(function(){setTranslator($(this),json_global)}),$(".header").length&&(window.setInterval(function(){$("#toc-panel a:not('isTranslate')").each(function(){$(this).addClass("isTranslate"),setTranslator($(this),json_global)}),$(".GlossDefinitionText:not('isTranslate')").each(function(){$(this).addClass("isTranslate"),setTranslator($(this),json_global)})},250),console.log("成功啦!现在正在疯狂翻译菜单中!")),$(".tooltip").each(function(){setTranslator($(this),json_global,"title")})}),document.addEventListener("DOMContentLoaded",()=>{pangu.autoSpacingPage()})</script><script type="text/javascript" language="JavaScript">function reDo(){innerWidth==origWidth&&innerHeight==origHeight||location.reload()}4==parseInt(navigator.appVersion)&&"Netscape"==navigator.appName&&(origWidth=innerWidth,origHeight=innerHeight,onresize=reDo),onerror=null</script><style type="text/css">p.WebHelpNavBar{text-align:right}</style><script type="text/javascript">gCommonRootRelPath=gRootRelPath="../../..",gTopicId="8.2.2.22.1.0_9"</script><script type="text/javascript" src="../../../template/scripts/rh.min.js"></script><script type="text/javascript" src="../../../template/scripts/common.min.js"></script><script type="text/javascript" src="../../../template/scripts/topic.min.js"></script><script type="text/javascript" src="../../../template/scripts/topicwidgets.min.js"></script><script type="text/javascript" src="../../../whxdata/projectsettings.js"></script><link rel="stylesheet" type="text/css" href="../../../template/styles/topic.min.css"><link rel="stylesheet" type="text/css" href="../../../template/Charcoal_Grey/topicheader.css"><meta name="topic-status" content="Draft"><meta http-equiv="Content-Type" content="text/html; charset=utf-8"><title>dbg_button</title><meta name="generator" content="Adobe RoboHelp 2022"><link rel="stylesheet" type="text/css" href="../../../assets/css/default.css"><script src="../../../assets/scripts/main_script.js" type="module"></script><meta name="rh-authors" content=""><meta name="topic-comment" content=""><meta name="rh-index-keywords" content="dbg_button"><meta name="search-keywords" content="dbg_button"><meta name="template" content="assets/masterpages/Manual_Keyword_Page.htt"><meta name="brsnext" value="GameMaker_Language/GML_Reference/Debugging/dbg_checkbox.htm"><meta name="brsprev" value="GameMaker_Language/GML_Reference/Debugging/dbg_section_delete.htm"></head><body><div class="topic-header rh-hide" id="rh-topic-header"><div class="logo"></div><div class="nav"><div class="title" title="dbg_button"><span>dbg_button</span></div><div class="gotohome" title="Click here to see this page in full context"><a href="#" onclick="rh._.goToFullLayout()">Click here to see this page in full context</a></div></div></div><div class="topic-header-shadow rh-hide" id="rh-topic-header-shadow"></div><h1><span data-field="title" data-format="default">dbg_button</span></h1><p>This function creates a button control within the current debug section. Clicking the button executes a <span data-keyref="Type_Function"><a target="_blank" href="../../GML_Overview/Script_Functions.htm">Function</a></span>.</p><p>The current debug section is the&nbsp;one last created using&nbsp;<span class="inline3_func"><a href="dbg_section.htm">dbg_section</a></span>.</p><div data-conref="../../../assets/snippets/Note_Debug_Control_Single_Column.hts"><p class="note"><span data-conref="../../../assets/snippets/Tag_note.hts"><span class="note">NOTE</span></span>&nbsp;This control takes up a single column and can be shown&nbsp;on the same line with another single-column control using&nbsp;<span class="inline3_func"><a href="dbg_same_line.htm">dbg_same_line</a></span>.</p></div><p>&nbsp;</p><h4>Syntax:</h4><p class="code"><span data-field="title" data-format="default">dbg_button</span>(label, ref[, width, height]);</p><p>&nbsp;</p><table><colgroup><col><col><col></colgroup><tbody><tr><th>Argument</th><th>Type</th><th>Description</th></tr><tr><td>label</td><td><span data-keyref="Type_String"><a target="_blank" href="../../GML_Overview/Data_Types.htm">String</a></span></td><td>The text label to show next to the button</td></tr><tr><td>ref</td><td><span data-keyref="Type_DbgRef"><a target="_blank" href="../Variable_Functions/ref_create.htm">Reference</a></span>&nbsp;or&nbsp;<span data-keyref="Type_Function_Script"><a target="_blank" href="../../GML_Overview/Script_Functions.htm">Script Function</a></span>&nbsp;or&nbsp;<span data-keyref="Type_Function"><a target="_blank" href="../../GML_Overview/Script_Functions.htm">Function</a></span></td><td>A <span data-keyref="Type_Function"><a target="_blank" href="../../GML_Overview/Script_Functions.htm">Function</a></span>&nbsp;or&nbsp;<span data-keyref="Type_Function_Script"><a target="_blank" href="../../GML_Overview/Script_Functions.htm">Script Function</a></span>&nbsp;or a reference to one (created with&nbsp;<span class="inline3_func"><a href="../Variable_Functions/ref_create.htm">ref_create</a></span>)</td></tr><tr><td>width</td><td><span data-keyref="Type_Real"><a target="_blank" href="../../GML_Overview/Data_Types.htm">Real</a></span></td><td><span data-conref="../../../assets/snippets/Tag_optional.hts"><span class="optional">OPTIONAL</span></span>&nbsp;The width&nbsp;of the button in pixels</td></tr><tr><td>height</td><td><span data-keyref="Type_Real"><a target="_blank" href="../../GML_Overview/Data_Types.htm">Real</a></span></td><td><span data-conref="../../../assets/snippets/Tag_optional.hts"><span class="optional">OPTIONAL</span></span>&nbsp;The height&nbsp;of the button in pixels</td></tr></tbody></table><p>&nbsp;</p><h4>Returns:</h4><p class="code"><span data-keyref="Type_Void">N/A</span></p><p>&nbsp;</p><h4>Example 1: Basic Use</h4><p class="code_heading">Create Event</p><p class="code">my_method =&nbsp;function()<br>{<br>&nbsp; &nbsp; show_debug_message("Clicked the button!"<br>};<br><span data-field="title" data-format="default">dbg_button</span>("Click me!", my_method);</p><p>The above code creates a button control in an&nbsp;<a href="../Asset_Management/Objects/Objects.htm">object</a>'s Create event using&nbsp;<span class="inline3_func"><span data-field="title" data-format="default">dbg_button</span></span>. Since no calls are made to&nbsp;<span class="inline3_func"><a href="dbg_view.htm">dbg_view</a></span>&nbsp;or&nbsp;<span class="inline3_func"><a href="dbg_section.htm">dbg_section</a></span>, the button is added to a new debug section named&nbsp;<span data-keyref="DebugSection_Name_Default">"Default"</span>&nbsp;in a new debug view named&nbsp;<span data-keyref="DebugView_Name_Default">"Default"</span>. Clicking the button calls a function that shows a debug message using&nbsp;<span class="inline3_func"><a href="show_debug_message.htm">show_debug_message</a></span>.</p><p>&nbsp;</p><h4>Example 2: Extended Example</h4><p class="code_heading">Script Asset</p><p class="code">/// Script Asset<br><br>function script_function()<br>{<br>&nbsp; &nbsp; show_message("Called the script function!");<br>}</p><p class="code_heading">Create Event</p><p class="code">my_method = function()<br>{<br>&nbsp; &nbsp; show_message("Called the method!");<br>}<br><br>ref_to_method = ref_create(self, "my_method");<br>ref_to_script_function_global = ref_create(global, "script_function");<br>func = script_function;<br>ref_to_script_function = ref_create(self, "func");<br><br>dbg_section("Function Calls");<br>dbg_button("Call the Script Function", script_function, 400);<br>dbg_button("Call the Script Function through the Reference", ref_to_script_function, 400);<br>dbg_button("Call the Script Function through the Reference (Global)", ref_to_script_function_global, 400);<br>dbg_button("Call the Method", my_method, 400);<br>dbg_button("Call the Method through the Reference", ref_to_method, 400);<br>dbg_section("Game");<br>dbg_button("End the Game", game_end);</p><p>The code example above shows a variety of ways to add button controls that execute functions to the debug overlay.</p><p>First, a script function is defined in a script asset as well as a method in an object's Create event. Then, also in the Create event, various references to the script function and to the method are created. Note that in case of <span class="inline2">ref_to_script_function</span>, you can change the function to be executed by simply assigning a new value to the instance variable <span class="inline2">func</span>. After that, two sections are added to the debug overlay. Several buttons are added to the first section, where each of them calls the script function or the method through a different path. One more button is added to the second section. Clicking this button executes the built-in function&nbsp;<span class="inline3_func"><a href="../General_Game_Control/game_end.htm">game_end</a></span>, which can be called because it takes no (mandatory) arguments.</p><p>When the code has executed,&nbsp;<a href="The_Debug_Overlay.htm">The Debug Overlay</a>&nbsp;is shown as any call to&nbsp;the <span class="inline2">dbg_*</span> functions will bring up the overlay.</p><p>&nbsp;</p><p>&nbsp;</p><div class="footer"><div class="buttons"><div class="clear"><div>Back:&nbsp;<a href="The_Debug_Overlay.htm">The Debug Overlay</a></div><div>Next:&nbsp;<a href="dbg_checkbox.htm">dbg_checkbox</a></div></div></div><h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2024 All Rights Reserved</span></h5></div></body></html>