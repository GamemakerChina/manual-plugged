<!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml"><head><script type="text/javascript" src="../../../assets/import/jquery-3.6.1.min.js"></script><script type="text/javascript" src="../../../assets/import/layer/layer.js"></script><script type="text/javascript" src="../../../assets/import/pangu.min.js"></script><link rel="stylesheet" type="text/css" href="../../../assets/import/layer/layui_btn.css"><link rel="stylesheet" type="text/css" href="../../../assets/import/layer/layui_col.css"><link rel="stylesheet" type="text/css" href="../../../assets/import/layer/theme/default/layer.css"><link rel="stylesheet" type="text/css" href="../../../assets/import/main.css"><script>let str;removeHtml=function(e){return e=(e=(e=(e=e.replace(/(<([^>]+)>)/gi,"{}")).replace(/\r\n/g,"\n")).replace(/\n/g,"")).replace(/ {2,}/g," ")},retHtml=function(e){return e.match(/(<([^>]+)>)/gi)},setTranslator=function(e,t,a){let n;n=a?e.attr(a):e.html();let s=t[removeHtml(n)];if(null!=s&&s.length){t=retHtml(n);let o=0;t&&t.forEach(function(e,t){var a=s.replace("{"+o+"}",e);s=a===s?s.replace("{}",e):a,o++}),a?e.attr(a,s):e.html(s)}},noTranslationState=function(){return"true"==window.localStorage.getItem("noTranslationState")},noTranslationStateToggle=function(){window.localStorage.setItem("noTranslationState",!noTranslationState())},addNoTranslationStateButton=function(){var e=`
		
		<button style="
			float: right;
			font-size: 16px;
			padding: 4px 12px;
		"
		onclick="
		window.location.replace('gmmt://'+document.location.hash)
		"
		>打开编辑器</button>

		<button style="
			float: right;
			font-size: 16px;
			padding: 4px 12px;
		"
		onclick="
		noTranslationStateToggle();
		location.reload();
    	event.stopPropagation();
		"
		>切换翻译</button>
		`;$(".header").length?$(".header").append(e):($(".topic-header").append(e),$(".topic-header button").css("position","relative").css("top","44px"))},removeExtensionFromHash=function(e){return e.replaceAll("#t=","").replaceAll("%2F","/").replaceAll(".htm","")};let json_global,json_file={"Before using data structures in your game, you should also be aware that there are certain moments when, due to rounding errors, you may get a result that is not what you expected. This may be resolved by changing the DS precision using the following function:":"在游戏中使用数据结构之前，您还应该注意，在某些时刻，由于舍入错误，您可能会得到不符合预期的结果。这可以通过使用以下函数更改D的精度来解决：","Data Structures":"数据结构","Essentially, all data structures work in the same way - You create a data structure and store its {}index value{} in a variable. You then use this index to reference the data structure in all further function calls that can perform operations on it. Finally, once you are done you destroy the data structure again to remove it from memory. You can use as many of the structures at the same time as you need, and all structures can store any of the available {}data types{}.":"基本上，所有数据结构都以相同的方式工作-创建数据结构并将其{}索引值{}存储在变量中。然后，使用此索引在所有可对其执行操作的进一步函数调用中引用数据结构。最后，完成后，再次销毁数据结构以将其从内存中删除。您可以根据需要同时使用任意多个结构，并且所有结构都可以存储任何可用的{}数据类型{}。","Essentially, all data structures work in the same way - you create a data structure and store its reference in a variable. You then use this reference to use the data structure in all further function calls that can perform operations on it. Finally, once you are done you destroy the data structure again to remove it from memory. You can use as many of the structures at the same time as you need, and all structures can store any of the available {}data types{}.":"本质上，所有数据结构都以相同的方式工作 - 您创建一个数据结构并将其引用存储在变量中。然后，您可以使用此引用在可以对其执行操作的所有进一步函数调用中使用该数据结构。最后，完成后，您再次销毁数据结构以将其从内存中删除。您可以根据需要同时使用任意数量的结构，并且所有结构都可以存储任何可用的 {} 数据类型 {}。",Grids:"网格 Grids","In games you often need to store information in a precise and ordered way. For example, you may need to store lists of items that a person carries or you may want to store a grid of places that still need to be visited.":"在游戏中，您经常需要以精确且有序的方式存储信息。例如，您可能需要存储一个人携带的物品列表，或者您可能想要存储仍需要访问的地点的网格。","In games you often need to store information in a precise and ordered way. For example, you may need to store lists of items that a person carries or you may want to store a grid of places that still need to be visited. Now, you {}can{} use the arrays for this, but if you want to do more complicated operations, like sorting the data or searching for a particular item, you need to write large pieces of GML code which can be slow to execute, difficult to debug and a real pain to write!":"在游戏中，您通常需要以精确有序的方式存储信息。例如，您可能需要存储某人携带的项目列表，或者您可能希望存储仍需要访问的网格位置。现在，您{}可以{}使用数组来执行此操作，但如果您想执行更复杂的操作，如对数据进行排序或搜索特定项目，则需要编写大量GML 代码，这些代码的执行速度可能很慢，很难进行调试，而且写起来非常麻烦！","Information on the different data structures can be found in the following sections:":"有关不同数据结构的信息，请参阅以下各节：",Lists:"列表 Lists",Maps:"映射 Maps","Priority Queues":"优先队列 Priority Queues",Queues:"队列 Queues",Stacks:"堆栈 Stacks","There is also a special function for checking to see whether a data structure of any given type exists:":"还有一个特殊函数，用于检查是否存在任何给定类型的数据结构：","To remedy this, {}GameMaker{} has a number of built-in {}data structures{} that can be accessed through specialist functions. There are six different types of data structure available, each one having its own benefits depending on the type of information that you are looking to store and how you wish to manipulate it later: stacks, queues, lists, maps, priority queues, and grids.":"为了解决此问题，{}GameMaker{}具有许多内置的{}数据结构{}，可以通过专家函数访问。有六种不同类型的数据结构可用，每种数据结构都有自己的优点，具体取决于您希望存储的信息类型以及希望以后如何操作它：堆栈、队列、列表、映射、优先级队列和网格。","When you create a data structure, the index value used to identify it is an integer value starting at 0. This means that different data structures can have the {}same{} index value, so if in doubt you should be using the {}{}{}ds_exists{}{}{} function before accessing them. Also note that indices are re-used, so a destroyed data structure index value may be used by a newly created one afterwards, and we recommend that you set any variable that holds a DS index to -1 after having destroyed the data structure.":"创建数据结构时，用于标识该数据结构的索引值是从0开始的整数值。这意味着不同的数据结构可以具有{}相同的{}索引值，因此如果您有疑问，应在访问之前使用{}{}{}ds_exists{}{}{}函数。另请注意，索引将被重复使用，因此新创建的索引之后可能会使用已销毁的数据结构索引值，我们建议您在销毁数据结构之后将保留Ds索引的任何变量设置为-1。","{}GameMaker{} has a number of built-in {}data structures{} that can be accessed through specialist functions. There are six different types of data structure available, each one having its own benefits depending on the type of information that you are looking to store and how you wish to manipulate it later: stacks, queues, lists, maps, priority queues, and grids.":"{}GameMaker{} 具有许多内置的 {} 数据结构 {}，可以通过专用函数进行访问。有六种不同类型的数据结构可用，每一种都有自己的优点，具体取决于您要存储的信息类型以及以后希望如何操作它：堆栈、队列、列表、映射、优先级队列和网格。","{}NOTE{}: It is recommend to use {}arrays{} and {}structs{} over DS lists and maps, as they have similar features, are easier to use and are garbage collected automatically.":"{}注意{}：建议在DS列表和映射上使用{}数组{}和{}结构{}，因为它们具有相似的函数，更易于使用，并且是垃圾自动收集的。","{}{}NOTE{} {}As with all dynamic resources, data structures take up memory and so should {}always{} be destroyed when no longer needed to prevent memory leaks which will slow down and eventually crash your game.":"{}{}注意{}{}与所有动态资源一样，数据结构占用内存，因此当不再需要{}防止内存泄漏时，应始终销毁{}，这将降低速度并最终导致游戏崩溃。","{}{}NOTE{}{}&nbsp;As with all dynamic resources, data structures take up memory and so should {}always{} be destroyed when no longer needed to prevent memory leaks which will slow down and eventually crash your game.":"{}{} 注意{}{} 与所有动态资源一样，数据结构也会占用内存，因此在不再需要时应 {} 始终 {} 销毁，以防止内存泄漏，否则会减慢游戏速度并最终崩溃。","{}{}NOTE{}{}&nbsp;It is recommend to use {}arrays{} and {}structs{} over DS lists and maps, as they now have similar functionality, are easier to use and are garbage collected automatically.":"{}{} 注意{}{} 建议在 DS 列表和映射上使用 {} 数组 {} 和 {} 结构体 {}，因为它们现在具有类似的功能，更易于使用，并且会自动进行垃圾收集。"},get_json_global=$.ajax({url:"/global.json",type:"GET",dataType:"json",async:!1,success:function(e){json_global=e}});$(function(){if(addNoTranslationStateButton(),noTranslationState())return!1;$("div.footer a,h4,caption").each(function(){setTranslator($(this),json_global)}),$("p,h1,h2,h3,td,li,a,div.dropspotnote,figcaption").each(function(){setTranslator($(this),json_file)}),$("th,.warning,.important,.optional").each(function(){setTranslator($(this),json_global)}),$(".header").length&&(window.setInterval(function(){$("#toc-panel a:not('isTranslate')").each(function(){$(this).addClass("isTranslate"),setTranslator($(this),json_global)}),$(".GlossDefinitionText:not('isTranslate')").each(function(){$(this).addClass("isTranslate"),setTranslator($(this),json_global)})},250),console.log("成功啦!现在正在疯狂翻译菜单中!")),$(".tooltip").each(function(){setTranslator($(this),json_global,"title")})}),document.addEventListener("DOMContentLoaded",()=>{pangu.autoSpacingPage()})</script><script type="text/javascript" language="JavaScript">function reDo(){innerWidth==origWidth&&innerHeight==origHeight||location.reload()}4==parseInt(navigator.appVersion)&&"Netscape"==navigator.appName&&(origWidth=innerWidth,origHeight=innerHeight,onresize=reDo),onerror=null</script><style type="text/css">p.WebHelpNavBar{text-align:right}</style><script type="text/javascript">gCommonRootRelPath=gRootRelPath="../../..",gTopicId="8.2.2.9"</script><script type="text/javascript" src="../../../template/scripts/rh.min.js"></script><script type="text/javascript" src="../../../template/scripts/common.min.js"></script><script type="text/javascript" src="../../../template/scripts/topic.min.js"></script><script type="text/javascript" src="../../../template/scripts/topicwidgets.min.js"></script><script type="text/javascript" src="../../../whxdata/projectsettings.js"></script><link rel="stylesheet" type="text/css" href="../../../template/styles/topic.min.css"><link rel="stylesheet" type="text/css" href="../../../template/Charcoal_Grey/topicheader.css"><meta name="topic-status" content="Draft"><meta http-equiv="Content-Type" content="text/html; charset=utf-8"><title>Data Structures</title><meta name="generator" content="Adobe RoboHelp 2022"><link rel="stylesheet" href="../../../assets/css/default.css" type="text/css"><script src="../../../assets/scripts/main_script.js" type="module"></script><meta name="rh-authors" content="Mark Alexander"><meta name="topic-comment" content="Reference section for Data Structures"><meta name="rh-index-keywords" content=""><meta name="search-keywords" content="Data Structures"><meta name="brsnext" value="GameMaker_Language/GML_Reference/Data_Structures/DS_Grids/DS_Grids.htm"><meta name="brsprev" value="GameMaker_Language/GML_Reference/Game_Input/Virtual_Keys_And_Keyboards/keyboard_virtual_height.htm"></head><body><div class="topic-header rh-hide" id="rh-topic-header"><div class="logo"></div><div class="nav"><div class="title" title="Data Structures"><span>Data Structures</span></div><div class="gotohome" title="Click here to see this page in full context"><a href="#" onclick="rh._.goToFullLayout()">Click here to see this page in full context</a></div></div></div><div class="topic-header-shadow rh-hide" id="rh-topic-header-shadow"></div><h1><span data-field="title" data-format="default">Data Structures</span></h1><p>In games you often need to store information in a precise and ordered way. For example, you may need to store lists of items that a person carries or you may want to store a grid of places that still need to be visited.</p><p><span data-keyref="GameMaker Name">GameMaker</span> has a number of built-in <b>data structures</b> that can be accessed through specialist functions. There are six different types of data structure available, each one having its own benefits depending on the type of information that you are looking to store and how you wish to manipulate it later: stacks, queues, lists, maps, priority queues, and grids.</p><p class="note"><span data-conref="../../../assets/snippets/Tag_note.hts"><span class="note">NOTE</span></span>&nbsp;It is recommended to use <a href="../../GML_Overview/Arrays.htm">arrays</a> and <a href="../../GML_Overview/Structs.htm">structs</a> over DS lists and maps, as they now have similar functionality, are easier to use and are garbage collected automatically.</p><p>Essentially, all data structures work in the same way - you create a data structure and store its reference in a variable. You then use this reference to use the data structure in all further function calls that can perform operations on it. Finally, once you are done you destroy the data structure again to remove it from memory. You can use as many of the structures at the same time as you need, and all structures can store any of the available <a href="../../GML_Overview/Data_Types.htm">Data Types</a>.</p><div data-conref="../../../assets/snippets/Note_DS_Destroy_When_No_Longer_Needed.hts"><p class="note"><span data-conref="../../../assets/snippets/Tag_note.hts"><span class="note">NOTE</span></span>&nbsp;As with all dynamic resources, data structures take up memory and so should <b>always</b> be destroyed when no longer needed to prevent memory leaks which will slow down and eventually crash your game.</p></div><p>Information on the different data structures can be found in the following sections:</p><ul class="colour"><li><a href="DS_Grids/DS_Grids.htm">Grids</a></li><li><a href="DS_Lists/DS_Lists.htm">Lists</a></li><li><a href="DS_Maps/DS_Maps.htm">Maps</a></li><li><a href="DS_Priority_Queues/DS_Priority_Queues.htm">Priority Queues</a></li><li><a href="DS_Queues/DS_Queues.htm">Queues</a></li><li><a href="DS_Stacks/DS_Stacks.htm">Stacks</a></li></ul><p>&nbsp;</p><p>Before using data structures in your game, you should also be aware that there are certain moments when, due to rounding errors, you may get a result that is not what you expected. This may be resolved by changing the DS precision using the following function:</p><ul class="colour"><li><a href="ds_set_precision.htm">ds_set_precision</a></li></ul><p>&nbsp;</p><p>There is also a special function to check if a data structure of any given type exists:</p><ul class="colour"><li><a href="ds_exists.htm">ds_exists</a></li></ul><p>&nbsp;</p><p>&nbsp;</p><div class="footer"><div class="buttons"><div class="clear"><div style="float:left">Back:&nbsp;<a href="../GML_Reference.htm">GML Code Reference</a></div><div style="float:right">Next:&nbsp;<a href="../Strings/Strings.htm">Strings</a></div></div></div><h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2024 All Rights Reserved</span></h5></div></body></html>