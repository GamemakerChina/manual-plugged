<!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml"><head><script type="text/javascript" src="../../../assets/import/jquery-3.6.1.min.js"></script><script type="text/javascript" src="../../../assets/import/layer/layer.js"></script><script type="text/javascript" src="../../../assets/import/pangu.min.js"></script><link rel="stylesheet" type="text/css" href="../../../assets/import/layer/layui_btn.css"><link rel="stylesheet" type="text/css" href="../../../assets/import/layer/layui_col.css"><link rel="stylesheet" type="text/css" href="../../../assets/import/layer/theme/default/layer.css"><link rel="stylesheet" type="text/css" href="../../../assets/import/main.css"><script>let str;removeHtml=function(t){return t=(t=(t=(t=t.replace(/(<([^>]+)>)/gi,"{}")).replace(/\r\n/g,"\n")).replace(/\n/g,"")).replace(/ {2,}/g," ")},retHtml=function(t){return t.match(/(<([^>]+)>)/gi)},setTranslator=function(t,e,n){let o;o=n?t.attr(n):t.html();let i=e[removeHtml(o)];if(null!=i&&i.length){e=retHtml(o);let a=0;e&&e.forEach(function(t,e){var n=i.replace("{"+a+"}",t);i=n===i?i.replace("{}",t):n,a++}),n?t.attr(n,i):t.html(i)}},noTranslationState=function(){return"true"==window.localStorage.getItem("noTranslationState")},noTranslationStateToggle=function(){window.localStorage.setItem("noTranslationState",!noTranslationState())},addNoTranslationStateButton=function(){var t=`
		
		<button style="
			float: right;
			font-size: 16px;
			padding: 4px 12px;
		"
		onclick="
		window.location.replace('gmmt://'+document.location.hash)
		"
		>打开编辑器</button>

		<button style="
			float: right;
			font-size: 16px;
			padding: 4px 12px;
		"
		onclick="
		noTranslationStateToggle();
		location.reload();
    	event.stopPropagation();
		"
		>切换翻译</button>
		`;$(".header").length?$(".header").append(t):($(".topic-header").append(t),$(".topic-header button").css("position","relative").css("top","44px"))},removeExtensionFromHash=function(t){return t.replaceAll("#t=","").replaceAll("%2F","/").replaceAll(".htm","")};let json_global,json_file={"By default on all platforms {}except{} PS4, Ubuntu and HTML5, {}GameMaker{} will use the vsync timing method, while on the unsupported platforms, {}only{} sleep margin timing can be used.":"默认情况下，在除 {}PS4、Ubuntu 和 HTML5 之外的所有平台{}上，{}GameMaker{} 将使用 vsync 计时方法，而在不支持的平台上，{}只能{}使用 sleep margin 计时。","Certain Android devices make use of specific framerates. When running on these devices&nbsp;you may want to use the system timing method.&nbsp;This method removes all of&nbsp;{}GameMaker{}'s sleeps and game speed control and allows the game speed to be set by the system.":"某些 Android 设备使用特定的帧速率。在这些设备上运行时，您可能需要使用系统计时方法。此方法删除了 {}GameMaker{} 的所有睡眠和游戏速度控制，并允许系统设置游戏速度。","Display Timing Method Constant":"显示计时方法常量","If you wish to set the sleep margin you can do so using the function {}{}display_set_sleep_margin(){}{} and you can find which timing method is currently being used with the function {}{}display_get_timing_method(){}{}.":"如果要设置 sleep margin，可以使用函数 {}{}display_set_sleep_margin(){}{} 执行此操作，并且可以找到函数 {}{}display_get_timing_method(){}{} 当前使用的计时方法。","If you wish to set the sleep margin you can do so using the function&nbsp;{}{}display_set_sleep_margin{}{} and you can find which timing method is currently being used with the function {}{}display_get_timing_method{}{}.":"如果您希望设置睡眠余量，可以使用函数 {}{}display_set_sleep_margin{}{} 进行设置，并且您可以通过函数 {}{}display_get_timing_method{}{} 查找当前使用的计时方法。","System timing is the main timing method":"系统计时是主要计时方式","The above code will check the timing method and if it's not set to {}tm_sleep{} it will be set to that and the sleep margin set to 20.":"上述代码将检查计时方法，如果未设置为 {}tm_sleep{}，则会将其设置为该值，并将睡眠裕度设置为 20。","The above code will check the timing method and then if it's not set to {}tm_sleep{} it will be set to that and the sleep margin set to 20.":"上述代码将检查定时方法，如果未将其设置为 {}tm_sleep{}，则会将其设置为该值，并将 sleep margin 设置为 20。","The method can be one of the following constants:":"该方法可以是以下常量之一：","The sleep margin value is the main timing method":"休眠余量值是主要的计时方法","The timing method to use (see the list of constants, above)":"要使用的计时方法(参见上面的常量列表)","The vsync timing method uses the target platform's&nbsp;support for vertical synchronisation to provide an anchor for the game's render timing calculations, while setting the mode to sleep margin will just try to ensure that each frame lasts for the correct amount of time (say 1/30th or 1/60th of a second) by waiting or sleeping. In general the default vsync timing will give the smoothest results, but note that when using the vsync method, the sleep margin values are still relevant, although it will have a reduced impact and we recommend keeping it at its default value when using this method.":"vsync 计时方法利用目标平台对垂直同步的支持来为游戏的渲染计时计算提供锚点，而将模式设置为睡眠余量只会尝试确保每一帧持续正确的时间量 (例如 1/30) 或 1/60 秒) 通过等待或睡眠。一般来说，默认的垂直同步计时将给出最平滑的结果，但请注意，当使用垂直同步方法时，睡眠裕度值仍然相关，尽管它会减少影响，我们建议在使用此方法时将其保留为默认值。","The vsync timing method uses the target platforms support for vertical synchronisation to provide an anchor for the games render timing calculations, while setting the mode to sleep margin will just try to ensure that each frame lasts for the correct amount of time (say 1/30th or 1/60th of a second) by waiting or sleeping. In general the default vsync timing will give the smoothest results, but note that when using the vsync method, the sleep margin values are still relevant, although it will have a reduced impact and we recommend keeping it at its default value when using this method.":"vsync 计时方法使用目标平台对垂直同步的支持来为游戏的渲染计时计算提供一个锚点，而将模式设置为 sleep margin 将只是试图通过等待或睡眠来确保每一帧持续正确的时间(比如 1/30 或 1/60 秒)。一般来说，默认的 vsync 计时会给出最平滑的结果，但是请注意，当使用 vsync 方法时，sleep margin 的值仍然是相关的，尽管它的影响会减少，我们建议在使用这种方法时保持其默认值。","This function can be used to set the timing method to be used for rendering your game. The method can be one of the following constants:":"此函数可用于设置用于渲染游戏的计时方法。该方法可以是以下常量之一：","This function sets the timing method to be used for rendering your game.":"此函数设置用于渲染游戏的计时方法。","Use the sleep margin value as the main timing method":"sleep margin 是主要的计时方法","Use vsync timing as the main timing method (default for all supported platforms)":"Vsync 计时是主要的计时方法(所有支持的平台都默认为此值)","Vsync timing is the main timing method (default for all supported platforms)":"Vsync计时是主要计时方式 (所有支持平台默认)"},get_json_global=$.ajax({url:"/global.json",type:"GET",dataType:"json",async:!1,success:function(t){json_global=t}});$(function(){if(addNoTranslationStateButton(),noTranslationState())return!1;$("div.footer a,h4,caption").each(function(){setTranslator($(this),json_global)}),$("p,h1,h2,h3,td,li,a,div.dropspotnote,figcaption").each(function(){setTranslator($(this),json_file)}),$("th,.warning,.important,.optional").each(function(){setTranslator($(this),json_global)}),$(".header").length&&(window.setInterval(function(){$("#toc-panel a:not('isTranslate')").each(function(){$(this).addClass("isTranslate"),setTranslator($(this),json_global)}),$(".GlossDefinitionText:not('isTranslate')").each(function(){$(this).addClass("isTranslate"),setTranslator($(this),json_global)})},250),console.log("成功啦!现在正在疯狂翻译菜单中!")),$(".tooltip").each(function(){setTranslator($(this),json_global,"title")})}),document.addEventListener("DOMContentLoaded",()=>{pangu.autoSpacingPage()})</script><script type="text/javascript" language="JavaScript">function reDo(){innerWidth==origWidth&&innerHeight==origHeight||location.reload()}4==parseInt(navigator.appVersion)&&"Netscape"==navigator.appName&&(origWidth=innerWidth,origHeight=innerHeight,onresize=reDo),onerror=null</script><style type="text/css">p.WebHelpNavBar{text-align:right}</style><script type="text/javascript">gCommonRootRelPath=gRootRelPath="../../..",gTopicId="8.2.2.7.2_17"</script><script type="text/javascript" src="../../../template/scripts/rh.min.js"></script><script type="text/javascript" src="../../../template/scripts/common.min.js"></script><script type="text/javascript" src="../../../template/scripts/topic.min.js"></script><script type="text/javascript" src="../../../template/scripts/topicwidgets.min.js"></script><script type="text/javascript" src="../../../whxdata/projectsettings.js"></script><link rel="stylesheet" type="text/css" href="../../../template/styles/topic.min.css"><link rel="stylesheet" type="text/css" href="../../../template/Charcoal_Grey/topicheader.css"><meta name="topic-status" content="Draft"><meta http-equiv="Content-Type" content="text/html; charset=utf-8"><title>display_set_timing_method</title><meta name="generator" content="Adobe RoboHelp 2022"><link rel="stylesheet" href="../../../assets/css/default.css" type="text/css"><script src="../../../assets/scripts/main_script.js" type="module"></script><meta name="rh-authors" content="Mark Alexander"><meta name="topic-comment" content="Reference section for display_set_timing_method"><meta name="rh-index-keywords" content="display_set_timing_method,tm_sleep,tm_countvsyncs,tm_systemtiming"><meta name="search-keywords" content="display_set_timing_method,tm_sleep,tm_countvsyncs,tm_systemtiming"><meta name="is_pure" content="true"><meta name="brsnext" value="GameMaker_Language/GML_Reference/Cameras_And_Display/display_set_sleep_margin.htm"><meta name="brsprev" value="GameMaker_Language/GML_Reference/Cameras_And_Display/display_set_gui_maximise.htm"></head><body><div class="topic-header rh-hide" id="rh-topic-header"><div class="logo"></div><div class="nav"><div class="title" title="display_set_timing_method"><span>display_set_timing_method</span></div><div class="gotohome" title="Click here to see this page in full context"><a href="#" onclick="rh._.goToFullLayout()">Click here to see this page in full context</a></div></div></div><div class="topic-header-shadow rh-hide" id="rh-topic-header-shadow"></div><h1><span data-field="title" data-format="default">display_set_timing_method</span></h1><p>This function sets the timing method to be used for rendering your game.</p><p>The method can be one of the following constants:</p><div data-conref="../../../assets/snippets/Table_Display_Timing_Method_Constant.hts"><table><colgroup><col><col></colgroup><tbody><tr><th colspan="2"><span data-keyref="Type_Constant_Display_Timing_Method"><a target="_blank" href="display_get_timing_method.htm">Display Timing Method Constant</a></span></th></tr><tr><th>Constant</th><th>Description</th></tr><tr><td><span class="inline">tm_sleep</span></td><td>The sleep margin value is the main timing method</td></tr><tr><td><span class="inline">tm_countvsyncs</span></td><td>Vsync timing is the main timing method (default for all supported platforms)</td></tr><tr><td><span class="inline">tm_systemtiming</span></td><td>System timing is the main timing method</td></tr></tbody></table></div><p>The vsync timing method uses the target platform's&nbsp;support for vertical synchronisation to provide an anchor for the game's render timing calculations, while setting the mode to sleep margin will just try to ensure that each frame lasts for the correct amount of time (say 1/30th or 1/60th of a second) by waiting or sleeping. In general the default vsync timing will give the smoothest results, but note that when using the vsync method, the sleep margin values are still relevant, although it will have a reduced impact and we recommend keeping it at its default value when using this method.</p><p>By default on all platforms <i>except</i> PS4, Ubuntu and HTML5, <span data-keyref="GameMaker Name">GameMaker</span> will use the vsync timing method, while on the unsupported platforms, <i>only</i> sleep margin timing can be used.</p><p>Certain Android devices make use of specific framerates. When running on these devices&nbsp;you may want to use the system timing method.&nbsp;This method removes all of&nbsp;<span data-keyref="GameMaker Name">GameMaker</span>'s sleeps and game speed control and allows the game speed to be set by the system.</p><p>If you wish to set the sleep margin you can do so using the function&nbsp;<span class="inline3_func"><a href="display_set_sleep_margin.htm">display_set_sleep_margin</a></span> and you can find which timing method is currently being used with the function <span class="inline3_func"><a href="display_get_timing_method.htm">display_get_timing_method</a></span>.</p><p>&nbsp;</p><h4>Syntax:</h4><p class="code"><span data-field="title" data-format="default">display_set_timing_method</span>(method);</p><table><tbody><tr><th>Argument</th><th>Type</th><th>Description</th></tr><tr><td>method</td><td><span data-keyref="Type_Constant_Display_Timing_Method"><a target="_blank" href="display_get_timing_method.htm">Display Timing Method Constant</a></span></td><td>The timing method to use (see the list of constants, above)</td></tr></tbody></table><p>&nbsp;</p><h4>Returns:</h4><p class="code"><span data-keyref="Type_Void">N/A</span></p><p>&nbsp;</p><h4>Example:</h4><p class="code">if (display_get_timing_method() != tm_sleep)<br>{<br>&nbsp; &nbsp; <span data-field="title" data-format="default">display_set_timing_method</span>(tm_sleep);<br>&nbsp; &nbsp; if (display_get_sleep_margin() != 20)<br>&nbsp;&nbsp;&nbsp;&nbsp;{<br>&nbsp; &nbsp; &nbsp; &nbsp; display_set_sleep_margin(20);<br>&nbsp;&nbsp;&nbsp;&nbsp;}<br>}</p><p>The above code will check the timing method and if it's not set to <span class="inline2">tm_sleep</span> it will be set to that and the sleep margin set to 20.</p><p>&nbsp;</p><p>&nbsp;</p><div class="footer"><div class="buttons"><div class="clear"><div style="float:left">Back:&nbsp;<a href="Cameras_And_Display.htm">Cameras And Display</a></div><div style="float:right">Next:&nbsp;<a href="display_set_sleep_margin.htm">display_set_sleep_margin</a></div></div></div><h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2024 All Rights Reserved</span></h5></div></body></html>