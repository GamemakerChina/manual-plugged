<!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml"><head><script type="text/javascript" src="../../../../assets/import/jquery-3.6.1.min.js"></script><script type="text/javascript" src="../../../../assets/import/layer/layer.js"></script><script type="text/javascript" src="../../../../assets/import/pangu.min.js"></script><link rel="stylesheet" type="text/css" href="../../../../assets/import/layer/layui_btn.css"><link rel="stylesheet" type="text/css" href="../../../../assets/import/layer/layui_col.css"><link rel="stylesheet" type="text/css" href="../../../../assets/import/layer/theme/default/layer.css"><link rel="stylesheet" type="text/css" href="../../../../assets/import/main.css"><script>let str;removeHtml=function(t){return t=(t=(t=(t=t.replace(/(<([^>]+)>)/gi,"{}")).replace(/\r\n/g,"\n")).replace(/\n/g,"")).replace(/ {2,}/g," ")},retHtml=function(t){return t.match(/(<([^>]+)>)/gi)},setTranslator=function(t,e,a){let o;o=a?t.attr(a):t.html();let i=e[removeHtml(o)];if(null!=i&&i.length){e=retHtml(o);let n=0;e&&e.forEach(function(t,e){var a=i.replace("{"+n+"}",t);i=a===i?i.replace("{}",t):a,n++}),a?t.attr(a,i):t.html(i)}},noTranslationState=function(){return"true"==window.localStorage.getItem("noTranslationState")},noTranslationStateToggle=function(){window.localStorage.setItem("noTranslationState",!noTranslationState())},addNoTranslationStateButton=function(){var t=`
		
		<button style="
			float: right;
			font-size: 16px;
			padding: 4px 12px;
		"
		onclick="
		window.location.replace('gmmt://'+document.location.hash)
		"
		>打开编辑器</button>

		<button style="
			float: right;
			font-size: 16px;
			padding: 4px 12px;
		"
		onclick="
		noTranslationStateToggle();
		location.reload();
    	event.stopPropagation();
		"
		>切换翻译</button>
		`;$(".header").length?$(".header").append(t):($(".topic-header").append(t),$(".topic-header button").css("position","relative").css("top","44px"))},removeExtensionFromHash=function(t){return t.replaceAll("#t=","").replaceAll("%2F","/").replaceAll(".htm","")};let json_global,json_file={"If you use this function to switch to a perspective projection (as opposed to the default orthographic projection), automatic drawing of tiled sprites will stop working and will need to be handled manually. This includes any background layers that use horizontal or vertical tiling and the {}{}draw_sprite_tiled(){}{}&nbsp;and {}{}draw_sprite_tiled_ext(){}{} functions, which will only draw the sprite once instead of tiling it if a perspective projection is being used.":"如果使用此函数切换到透视投影(而不是默认的正交投影)，则 tiled 精灵的自动绘制将停止工作，并且需要手动处理。这包括使用水平或垂直 tiled 的任何背景图层以及 {}{}draw_sprite_tiled(){}{} 和 {}{}draw_sprite_tiled_ext(){}{} 函数，如果使用透视投影，这些函数将只绘制一次精灵，而不是图块它。","If your camera does automatic object tracking - ie: it has been created using {}{}camera_create_view(){}{} with an object index / instance ID that isn't -1, or you are setting a camera defined in the Room Editor, or you are setting the default camera - then this matrix will get overwritten the next game frame.":'如果您的相机执行自动对象跟踪 - 即：它是使用 {}{}camera_create_view(){}{} 创建的，并且对象索引/实例ID不是t-1，或者您正在设置在"房间编辑器"中定义的摄影机，或者您正在设置默认相机 - 则此矩阵将在下一个游戏帧中被覆盖。',"The above code creates a new camera and assigns it to view port[0]. This camera then has its view and projection matrices set.":"上述代码将创建一个新摄像头并将其分配给 viewport[0]。然后，该相机将设置其视图矩阵和投影矩阵。","The unique camera ID value returned when you created the camera.":"创建相机时返回的唯一相机 ID 值。","The unique matrix ID returned when you created the matrix.":"创建矩阵时返回的唯一矩阵 ID。","There are some things you need to keep in mind when using this function:":"使用此函数时，需要记住一些事情：","This function will set the {}projection matrix{} for a given camera. You give the unique camera ID value (as returned by the different {}{}camera_create(){}{} functions) and a projection matrix to be applied. You can find out more about creating projection matrices from the section {}Matrix Functions{}, specifically {}{}matrix_build_projection_perspective(){}{}&nbsp;and {}{}matrix_build_projection_ortho(){}{}.":"此函数将为给定的相机设置{}投影矩阵{}。提供唯一的相机 ID 值(由不同的 {}{}camera_create(){}{} 函数返回)和要应用的投影矩阵。有关创建投影矩阵的详细信息，请参阅{}矩阵函数{}一节，特别是 {}{}matrix_build_projection_perspective(){}{} 和 {}{}matrix_build_projection_ortho(){}{}."},get_json_global=$.ajax({url:"/global.json",type:"GET",dataType:"json",async:!1,success:function(t){json_global=t}});$(function(){if(addNoTranslationStateButton(),noTranslationState())return!1;$("div.footer a,h4,caption").each(function(){setTranslator($(this),json_global)}),$("p,h1,h2,h3,td,li,a,div.dropspotnote,figcaption").each(function(){setTranslator($(this),json_file)}),$("th,.warning,.important,.optional").each(function(){setTranslator($(this),json_global)}),$(".header").length&&(window.setInterval(function(){$("#toc-panel a:not('isTranslate')").each(function(){$(this).addClass("isTranslate"),setTranslator($(this),json_global)}),$(".GlossDefinitionText:not('isTranslate')").each(function(){$(this).addClass("isTranslate"),setTranslator($(this),json_global)})},250),console.log("成功啦!现在正在疯狂翻译菜单中!")),$(".tooltip").each(function(){setTranslator($(this),json_global,"title")})}),document.addEventListener("DOMContentLoaded",()=>{pangu.autoSpacingPage()})</script><script type="text/javascript" language="JavaScript">function reDo(){innerWidth==origWidth&&innerHeight==origHeight||location.reload()}4==parseInt(navigator.appVersion)&&"Netscape"==navigator.appName&&(origWidth=innerWidth,origHeight=innerHeight,onresize=reDo),onerror=null</script><style type="text/css">p.WebHelpNavBar{text-align:right}</style><script type="text/javascript">gCommonRootRelPath=gRootRelPath="../../../..",gTopicId="8.2.2.7.1.0_7"</script><script type="text/javascript" src="../../../../template/scripts/rh.min.js"></script><script type="text/javascript" src="../../../../template/scripts/common.min.js"></script><script type="text/javascript" src="../../../../template/scripts/topic.min.js"></script><script type="text/javascript" src="../../../../template/scripts/topicwidgets.min.js"></script><script type="text/javascript" src="../../../../whxdata/projectsettings.js"></script><link rel="stylesheet" type="text/css" href="../../../../template/styles/topic.min.css"><link rel="stylesheet" type="text/css" href="../../../../template/Charcoal_Grey/topicheader.css"><meta name="topic-status" content="Draft"><meta http-equiv="Content-Type" content="text/html; charset=utf-8"><title>camera_set_proj_mat</title><meta name="generator" content="Adobe RoboHelp 2022"><link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css"><script src="../../../../assets/scripts/main_script.js" type="module"></script><meta name="rh-authors" content="Mark Alexander"><meta name="topic-comment" content="Reference page for camera_set_proj_mat"><meta name="rh-index-keywords" content="camera_set_proj_mat"><meta name="search-keywords" content="camera_set_proj_mat"><meta name="brsnext" value="GameMaker_Language/GML_Reference/Cameras_And_Display/Cameras_And_Viewports/camera_set_update_script.htm"><meta name="brsprev" value="GameMaker_Language/GML_Reference/Cameras_And_Display/Cameras_And_Viewports/camera_set_view_mat.htm"></head><body><div class="topic-header rh-hide" id="rh-topic-header"><div class="logo"></div><div class="nav"><div class="title" title="camera_set_proj_mat"><span>camera_set_proj_mat</span></div><div class="gotohome" title="Click here to see this page in full context"><a href="#" onclick="rh._.goToFullLayout()">Click here to see this page in full context</a></div></div></div><div class="topic-header-shadow rh-hide" id="rh-topic-header-shadow"></div><h1>camera_set_proj_mat</h1><p>This function will set the <b>projection matrix</b> for a given camera. You give the unique camera ID value (as returned by the different <a href="camera_create.htm"><span class="inline">camera_create()</span></a> functions) and a projection matrix to be applied. You can find out more about creating projection matrices from the section <a href="../../Maths_And_Numbers/Matrix_Functions/Matrix_Functions.htm">Matrix Functions</a>, specifically <span class="inline"><a href="../../Maths_And_Numbers/Matrix_Functions/matrix_build_projection_perspective.htm">matrix_build_projection_perspective()</a></span>&nbsp;and <a href="../../Maths_And_Numbers/Matrix_Functions/matrix_build_projection_ortho.htm"><span class="inline">matrix_build_projection_ortho()</span></a>.</p><p>There are some things you need to keep in mind when using this function:</p><ul class="colour"><li>If your camera does automatic object tracking - ie: it has been created using <a href="camera_create_view.htm"><span class="inline">camera_create_view()</span></a> with an object index / instance ID that isn't -1, or you are setting a camera defined in the Room Editor, or you are setting the default camera - then this matrix will get overwritten the next game frame.</li><li>If you use this function to switch to a perspective projection (as opposed to the default orthographic projection), automatic drawing of tiled sprites will stop working and will need to be handled manually. This includes any background layers that use horizontal or vertical tiling and the <span class="inline"><a href="../../Drawing/Sprites_And_Tiles/draw_sprite_tiled.htm">draw_sprite_tiled()</a></span>&nbsp;and <span class="inline"><a href="../../Drawing/Sprites_And_Tiles/draw_sprite_tiled_ext.htm">draw_sprite_tiled_ext()</a></span> functions, which will only draw the sprite once instead of tiling it if a perspective projection is being used.</li></ul><p>&nbsp;</p><h4>Syntax:</h4><p class="code">camera_set_proj_mat(camera_id, matrix)</p><table><tbody><tr><th>Argument</th><th>Type</th><th>Description</th></tr><tr><td>camera_id</td><td><span data-keyref="Type_ID_Camera"><a target="_blank" href="camera_create.htm">Camera ID</a></span></td><td>The unique camera ID value returned when you created the camera.</td></tr><tr><td>matrix</td><td><span data-keyref="Type_Array_Matrix"><a target="_blank" href="../../Maths_And_Numbers/Matrix_Functions/Matrix_Functions.htm">Matrix Array</a></span></td><td>The unique matrix ID returned when you created the matrix.</td></tr></tbody></table><p>&nbsp;</p><h4>Returns:</h4><p class="code"><span data-keyref="Type_Void">N/A</span></p><p>&nbsp;</p><h4>Example:</h4><p class="code">view_camera[0] = camera_create();<br>var viewmat = matrix_build_lookat(640, 240, -10, 640, 240, 0, 0, 1, 0);<br>var projmat = matrix_build_projection_ortho(640, 480, 1.0, 32000.0);<br>camera_set_view_mat(view_camera[0], viewmat);<br>camera_set_proj_mat(view_camera[0], projmat);</p><p>The above code creates a new camera and assigns it to view port[0]. This camera then has its view and projection matrices set.</p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><div class="footer"><div class="buttons"><div class="clear"><div style="float:left">Back:&nbsp;<a href="Cameras_And_View_Ports.htm">Cameras And View Ports</a></div><div style="float:right">Next:&nbsp;<a href="camera_set_update_script.htm">camera_set_update_script</a></div></div></div><h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2024 All Rights Reserved</span></h5></div></body></html>