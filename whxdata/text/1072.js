rh._.exports({"0":[[" ","part_system_layer"]],"1":[["part_system_layer"]],"2":[[" ","part_system_layer"]],"3":[[" ","This function can be used to switch a particle system from its current layer to a new one. You supply the particle system ID value (as returned by the function ","part_system_create_layer()",") and then the unique layer ID (as returned by the function ","layer_create()"," or the name of the layer to use as a string - for example \"instance_layer\" - as defined in the room editor), and the system will be moved to the new layer."],[" ","part_system_layer(ps, layer);"," ","Argument"," ","Type"," ","Description"," ","ps"," ","Particle System Instance"," ","The particle system ID"," ","layer"," ","String"," or ","Layer ID"," ","The new layer ID"],[" ","N/A"],[" ","if (part_system_get_layer(global.p_sys) != \"effects_layer\")","\n    {","\n        part_system_layer(global.p_sys, \"effects_layer\";","\n    }"," ","The above code will check a particle system to see what layer it is on and if it is not on the given layer it will be changed."," ","Back: ","Particle Systems"," ","Next: ","part_system_depth"]],"4":[[" ","© Copyright YoYo Games Ltd. 2023 All Rights Reserved"]],"5":[["part_system_layer"]],"6":[[" ","Syntax:"],[" ","Returns:"],[" ","Example:"]],"id":"1072"})