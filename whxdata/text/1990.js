rh._.exports({"0":[[" ","string_format"]],"1":[["string_format"]],"2":[["string_format"]],"3":[[" ","string_format"]],"4":[[" ","Turns a real number into a string using your own formatting, where you can choose how many \"places\" are saved to the string and how many decimal places are saved also. Both can be very handy, some games prefer to display a score as a set number of digits, while control over decimal places can be good for a high accuracy the two decimal places of ","string()"," cannot provide. If the number of places specified is greater than the value to be shown and/or the number plus the decimal places that have been specified is less than the total places, then spaces will be added before the value to make up the difference (see the example below). Zeros will be added to the right of the decimal point if the value given is less than the total and the number of decimal places to include. The default format is no extra spaces on the left, and only two decimal places on the right, eg \"265.73\"."],[" ","string_format(val, tot, dec);"," ","Argument"," ","Type"," ","Description"," ","val"," ","Real"," ","The real number to be turned into a string."," ","tot"," ","Real"," ","The total number of places of the main number to be shown. Zeroes or spaces will be inserted to match this."," ","dec"," ","Real"," ","The number of decimal places to be included."],[" ","String"],[" ","str1 = string_format(1234, 8, 0);","\n    str2 = string_format(pi, 1, 10);","\n    str3 = string_format(pi, 5, 5);"," ","This will set ","str1"," to \"    1234\", ","str2"," to \"3.1415926535\" and ","str3"," to \"    3.14159\"."," ","Back: ","Strings"," ","Next: ","string_insert"]],"5":[[" ","Syntax:"],[" ","Returns:"],[" ","Example:"]],"6":[[" ","© Copyright YoYo Games Ltd. 2023 All Rights Reserved"]],"id":"1990"})