rh._.exports({"0":[[" ","gamepad_is_connected"]],"1":[["gamepad_is_connected"]],"2":[["gamepad_is_connected"]],"3":[[" ","gamepad_is_connected"]],"4":[[" ","This function will return whether a gamepad is connected to the given \"slot\" (returns ","true",") or not (returns ","false","). You would normally use this function in conjunction with the ","gamepad_get_device_count()"," function to get the correct number of available gamepads and/or gamepad \"slots\". Note that there may be a slight delay between the user connecting the gamepad and ","GameMaker"," detecting it as being connected (this is especially the case when dealing with bluetooth connected controllers)."," ","NOTE"," On some platforms - especially consoles - this function may return ","false"," immediately after a gamepad has been connected/selected and may need to be checked in an alarm a few frames (steps) later for it to correctly detect the gamepad."],[" ","gamepad_is_connected(device);"," ","Argument"," ","Type"," ","Description"," ","device"," ","Real"," ","Which gamepad \"slot\" to check."],[" ","Boolean"],[" ","var gp_num = gamepad_get_device_count();","\n    for (var i = 0; i < gp_num; i++)","\n    {","\n        if gamepad_is_connected(i)","\n            global.gp[i] = true","\n        else","\n            global.gp[i] = false;","\n    }"," ","The above code loops through the available gamepads (or gamepad slots) and then checks each one for a connected gamepad. The returned value is then used to set a global array to ","true"," or ","false"," for use in future checks."," ","Back: ","Gamepad Input"," ","Next: "," gamepad_get_guid "]],"5":[[" ","Syntax:"],[" ","Returns:"],[" ","Example:"]],"6":[[" ","© Copyright YoYo Games Ltd. 2024 All Rights Reserved"]],"id":"1656"})