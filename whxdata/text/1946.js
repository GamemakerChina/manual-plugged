rh._.exports({"0":[[" ","surface_getpixel_ext"]],"1":[["surface_getpixel_ext"]],"2":[[" ","surface_getpixel_ext"]],"3":[[" ","With this function you can get the full ","abgr 32-bit"," value of any pixel of a (previously created) surface."," ","If the surface uses a floating point ","format",", an array will be returned instead, similar to ","surface_getpixel()",". However as opposed to that function (which only gives you RGB), this function will give you 4 elements in the array (RGBA)."," ","NOTE"," ","This function will have a huge performance hit and so should only be used when absolutely necessary."],[" ","surface_getpixel_ext(surface_id, x, y);"," ","Argument"," ","Type"," ","Description"," ","surface_id"," ","Surface ID"," ","The ID of the surface to use."," ","x"," ","Real"," ","The x coordinate of the pixel to check"," ","y"," ","Real"," ","The y coordinate of the pixel to check"],[" ","Real"," or ","Array"],[" ","col = surface_getpixel_ext(mouse_x, mouse_y);","\n    alpha = (col >> 24) & 255;","\n    blue = (col >> 16) & 255;","\n    green = (col >> 8) & 255;","\n    red = col & 255;"," ","The above code will get the 32-bit colour value at the position of the mouse and then split it into its component values, storing them in variables."," ","Back: ","Surfaces"," ","Next: ","surface_get_format"]],"4":[[" ","© Copyright YoYo Games Ltd. 2023 All Rights Reserved"]],"5":[["surface_getpixel_ext"]],"6":[[" ","Syntax:"],[" ","Returns:"],[" ","Example:"]],"id":"1946"})