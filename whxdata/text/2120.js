rh._.exports({"0":[[" ","Web And HTML5"]],"2":[["Web"]],"3":[[" ","Web And HTML5"]],"4":[[" ","GameMaker"," provides various functions for interacting with the internet or with a server, and they can be used on all the available target platforms. These functions are:"," ","url_open"," ","url_open_ext"," ","url_open_full"," ","url_get_domain"," ","http_request"," ","http_get"," ","http_get_file"," ","http_post_string"," ","Apart from the general functions listed above, the ","HTML5 target"," has some additional web functions that are specifically designed to be used by the games that target it:"," ","browser_height"," ","browser_width"," ","browser_input_capture"," ","webgl_enabled"," ","clickable_exists"," ","clickable_add"," ","clickable_add_ext"," ","clickable_change"," ","clickable_change_ext"," ","clickable_set_style"," ","clickable_delete"," ","analytics_event"," ","analytics_event_ext"," ","os_browser"," ","http_get_request_crossorigin"," ","http_set_request_crossorigin"," ","Apart from these functions for the HTML5 target module, there is also a special ","JavaScript variable"," that can be used on those rare occasions when the contents of the html5game folder are stored in a completely different place (URL). Normally this path is hard-coded in the JavaScript file and is relative to the location from where the JavaScript is called, but you can set the variable ","g_GameMakerHTML5Dir"," before the call to the game script and the game will be run from the newly defined location. For example:"," ","<script>var g_GameMakerHTML5Dir = \"http://mygamealternatedirectory.com/\";</script>"," ","It's also worth noting that you can flag script functions using the prefix ","gmcallback_"," which means they won't be obfuscated when you compile the project for HTML5. This is very uiseful when using the above listed ","clickable_*"," functions (for more information, please see ","here",")."," ","Back: ","GML Reference"," ","Next: ","Steam"]],"6":[[" ","© Copyright YoYo Games Ltd. 2023 All Rights Reserved"]],"id":"2120"})