rh._.exports({"0":[[" ","instance_position_list"]],"1":[["instance_position_list"]],"2":[[" ","instance_position_list"]],"3":[[" ","With this function you can check a position for a collision with all instances of another object. When you use this you are checking a single point in the room for all instances of an object, and the check will be done against the bounding box of the instances or against the mask of the instances if that object has precise collisions checked."," ","You supply a ","DS list"," too, so the ","id"," values of any instances that are colliding with the calling instance will be added to the end of the given list. You can ","clear"," the list before calling this function so that it only contains results from this function call. You also have the option to order the list based on the distance from the position being checked to the origin of the instances found to be in collision."," ","Note that the function also accepts the special keyword ","all",", in which case all instances found to be in collision will be listed. The function returns the number of instances found, or 0 if none are found."],[" ","instance_position_list(x, y, obj, list, ordered);"," ","Argument"," ","Type"," ","Description"," ","x"," ","Real"," ","The x position to check for instances."," ","y"," ","Real"," ","The y position to check for instances."," ","obj"," ","Object Asset"," or ","Instance ID"," ","The object to check for instances of."," ","list"," ","DS List ID"," ","The DS list to use to store the IDs of colliding instances."," ","ordered"," ","Boolean"," ","Whether the list should be ordered by distance (","true",") or not (","false",")."],[" ","Real"," (The number of instances found to be in collision)"],[" ","var _list = ds_list_create();","\n    var _num = instance_position_list(mouse_x, mouse_y, all, _list, false);","\n    if _num > 0","\n    {","\n        for (var i = 0; i < _num; ++i;)","\n        {","\n            instance_destroy(_list[| i]);","\n        }","\n    }","\n    ds_list_destroy(_list);"," ","The above code will check for a collision with all instances found at the mouse position. These will be added to a DS list, which is then looped through to destroy each of the instances in collision."," ","Back: ","Instances"," ","Next: ","instance_id_get"]],"4":[[" ","© Copyright YoYo Games Ltd. 2023 All Rights Reserved"]],"5":[["instance_position_list"]],"6":[[" ","Syntax:"],[" ","Returns:"],[" ","Example:"]],"id":"2133"})