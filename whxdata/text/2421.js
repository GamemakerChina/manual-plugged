rh._.exports({"0":[[" ","vertex_format_get_info"]],"3":[[" ","vertex_format_get_info"]],"4":[[" ","This function returns a ","struct"," with information on a previously created ","vertex format","."," ","Vertex Format Info Struct"," ","Variable"," ","Type"," ","Description"," ","stride"," ","Real"," ","The total size in bytes of a single vertex"," ","num_elements"," ","Real"," ","The number of elements (vertex attributes) in a single vertex"," ","elements"," ","Array"," ","An array of elements. Each array element is a struct containing the following: ","\n          - usage (","Vertex Usage Type Constant",")","\n          - type (","Vertex Data Type Constant",")","\n          - size (","Real",")","\n          - offset (","Real",")"],[" ","vertex_format_get_info","(format);"," ","Argument"," ","Type"," ","Description"," ","format"," ","Vertex Format"," ","The vertex format, as returned by ","vertex_format_end"],[" ","Vertex Format Info Struct"],[" ","vertex_format_begin();","\n    vertex_format_add_position_3d();","\n    vertex_format_add_normal();","\n    vertex_format_add_colour();","\n    vertex_format_add_texcoord();","\n    vertex_format_add_custom(vertex_type_float1, vertex_usage_texcoord);","\n    vertex_format = vertex_format_end();"," ","\n    var _info = ","vertex_format_get_info","(vertex_format);","\n    show_debug_message(json_stringify(_info, true));\n  "," ","The above code first creates a custom vertex format and then gets the info using ","vertex_format_get_info",". After that, the info is shown in a debug message."," ","Back: ","Primitives And Vertex Formats"," ","Next: ","vertex_create_buffer"]],"5":[[" ","Syntax:"],[" ","Returns:"],[" ","Example:"]],"6":[[" ","© Copyright YoYo Games Ltd. 2024 All Rights Reserved"]],"id":"2421"})