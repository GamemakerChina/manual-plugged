rh._.exports({"0":[[" ","If Key Released"]],"1":[["GML Visual Action - If Key released"]],"2":[["If Key Released Action"]],"3":[[" ","If Key Released"]],"4":[[" ","This action checks for when a keyboard key has been released. It will return ","true"," on the single game step (frame) that the key is released on and ","false"," at all other times. If you enable the ","not"," modifier, this action will be\n    reversed, and check if the key has ","not"," been released, returning ","false"," on the game step (frame) that it has been released on and ","true"," at all other times."," ","Note that to add actions into the \"if\" block, they should be dropped to the side of the action, as shown in the image below:"," ","These actions will now be run if the \"if\" evaluates to ","true",",\n    while any actions dropped elsewhere will be performed after the \"if\" block."],[" ","Argument"," ","Description"," ","Key"," ","The name of the key to check."," ","Not"," ","Negate the check (true becomes false and vice versa)"],[" ","The above action block code polls the keyboard state every step and\n    if a key is being held down it checks for the initial key down press. If the check is ","true"," on the initial down press, a sound is played, then, while the key is held down, the sprite blending is changed to red. If the key is not being held\n    down, a check is done on the key release to reset the blending colour to white."," ","Back: ","Mouse And Keyboard Actions"," ","Next: ","Show Virtual Keyboard"]],"5":[[" ","Action Syntax:"," ","Arguments:"],[" ","Example:"]],"6":[[" ","Â© Copyright YoYo Games Ltd. 2024 All Rights Reserved"]],"id":"1850"})